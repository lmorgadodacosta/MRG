[
    {
        "docstring": "",
        "name": "sign",
        "parents": []
    },
    {
        "docstring": "",
        "name": "style",
        "parents": [
            "avm"
        ]
    },
    {
        "docstring": "",
        "name": "strict",
        "parents": [
            "style"
        ]
    },
    {
        "docstring": "",
        "name": "robust",
        "parents": [
            "style"
        ]
    },
    {
        "docstring": "",
        "name": "spoken",
        "parents": [
            "robust"
        ]
    },
    {
        "docstring": "",
        "name": "mal",
        "parents": [
            "robust"
        ]
    },
    {
        "docstring": "",
        "name": "dialect",
        "parents": [
            "robust"
        ]
    },
    {
        "docstring": "",
        "name": "lex-rule",
        "parents": []
    },
    {
        "docstring": "",
        "name": "basic-unary-phrase",
        "parents": []
    },
    {
        "docstring": ";; SSH 2014-12-19: BOUND is introduced. Lexical items with [BOUND +]<br>;; cannot be combined with the other of itself.<br>;; POSTCOMP is a feature to be used on HEAD to indicate the COMP's position is after the head.<br>;; CH is defined in the COMPS list to indicate the position of COMPS: CH+ == COMP before HEAD, CH- == COMP after HEAD, allowing HEAD to have one COMP before and one COMP after<br><br><br>CLASSIF  (THIS IS A TEST TO TRY TO MOVE IT AWAY FROM HEAD FEATURE), CURRENTLY WE'LL HAVE 2",
        "name": "synsem",
        "parents": []
    },
    {
        "docstring": "",
        "name": "spart",
        "parents": [
            "avm"
        ]
    },
    {
        "docstring": "",
        "name": "not-crs",
        "parents": [
            "spart"
        ]
    },
    {
        "docstring": "",
        "name": "not-ma",
        "parents": [
            "spart"
        ]
    },
    {
        "docstring": "",
        "name": "crs",
        "parents": [
            "not-ma"
        ]
    },
    {
        "docstring": "",
        "name": "ma",
        "parents": [
            "not-crs"
        ]
    },
    {
        "docstring": "",
        "name": "no-spart",
        "parents": [
            "spart"
        ]
    },
    {
        "docstring": "",
        "name": "not-crs-not-ma",
        "parents": [
            "not-crs",
            "not-ma"
        ]
    },
    {
        "docstring": "",
        "name": "sign-min",
        "parents": [
            "avm"
        ]
    },
    {
        "docstring": "",
        "name": "orthog",
        "parents": [
            "cons"
        ]
    },
    {
        "docstring": "",
        "name": "cpd",
        "parents": [
            "icons"
        ]
    },
    {
        "docstring": "",
        "name": "pred-pred",
        "parents": [
            "cpd"
        ]
    },
    {
        "docstring": "",
        "name": "rslt",
        "parents": [
            "pred-pred"
        ]
    },
    {
        "docstring": "",
        "name": "parallel",
        "parents": [
            "pred-pred"
        ]
    },
    {
        "docstring": "",
        "name": "card_rel",
        "parents": [
            "named_rel"
        ]
    },
    {
        "docstring": "",
        "name": "symbol_rel",
        "parents": [
            "named_rel"
        ]
    },
    {
        "docstring": "",
        "name": "carg-relation",
        "parents": [
            "arg0-relation"
        ]
    },
    {
        "docstring": "Cardinal Relation.<br>[ARG0 individual] means that it is unspecified for 'ref-ind' or an 'event'.<br>These are subspecified when it becomes either a noun or an adj-like number.",
        "name": "card-relation",
        "parents": [
            "carg-relation",
            "arg1-relation"
        ]
    },
    {
        "docstring": "",
        "name": "named-relation",
        "parents": [
            "noun-relation",
            "carg-relation"
        ]
    },
    {
        "docstring": "",
        "name": "symbol-relation",
        "parents": [
            "named-relation",
            "arg1-relation"
        ]
    },
    {
        "docstring": "",
        "name": "q_rel",
        "parents": [
            "predsort"
        ]
    },
    {
        "docstring": "",
        "name": "every_q_rel",
        "parents": [
            "q_rel"
        ]
    },
    {
        "docstring": "",
        "name": "exist_q_rel",
        "parents": [
            "q_rel"
        ]
    },
    {
        "docstring": "",
        "name": "some_q_rel",
        "parents": [
            "exist_q_rel"
        ]
    },
    {
        "docstring": "",
        "name": "many_q_rel",
        "parents": [
            "exist_q_rel"
        ]
    },
    {
        "docstring": "",
        "name": "proper_q_rel",
        "parents": [
            "q_rel"
        ]
    },
    {
        "docstring": "",
        "name": "pronoun_q_rel",
        "parents": [
            "q_rel"
        ]
    },
    {
        "docstring": "",
        "name": "which_q_rel",
        "parents": [
            "q_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_how-many_q_rel",
        "parents": [
            "q_rel"
        ]
    },
    {
        "docstring": "",
        "name": "generic_q_rel",
        "parents": [
            "q_rel"
        ]
    },
    {
        "docstring": "",
        "name": "related_p_rel",
        "parents": [
            "predsort"
        ]
    },
    {
        "docstring": "",
        "name": "compound_p_rel",
        "parents": [
            "related_p_rel"
        ]
    },
    {
        "docstring": "",
        "name": "dem_rel",
        "parents": [
            "predsort"
        ]
    },
    {
        "docstring": "",
        "name": "prox_dem_q_rel",
        "parents": [
            "dem_rel"
        ]
    },
    {
        "docstring": "",
        "name": "dist_dem_q_rel",
        "parents": [
            "dem_rel"
        ]
    },
    {
        "docstring": "",
        "name": "general_n_rel",
        "parents": [
            "predsort"
        ]
    },
    {
        "docstring": "",
        "name": "pron_rel",
        "parents": [
            "general_n_rel"
        ]
    },
    {
        "docstring": "",
        "name": "generic_n_rel",
        "parents": [
            "general_n_rel"
        ]
    },
    {
        "docstring": "",
        "name": "thing_n_rel",
        "parents": [
            "generic_n_rel"
        ]
    },
    {
        "docstring": "",
        "name": "place_n_rel",
        "parents": [
            "generic_n_rel"
        ]
    },
    {
        "docstring": "",
        "name": "person_n_rel",
        "parents": [
            "generic_n_rel"
        ]
    },
    {
        "docstring": "",
        "name": "time_n_rel",
        "parents": [
            "generic_n_rel",
            "day_or_month_or_time_rel"
        ]
    },
    {
        "docstring": "",
        "name": "day_or_month_or_time_rel",
        "parents": [
            "named_rel"
        ]
    },
    {
        "docstring": "",
        "name": "month_n_rel",
        "parents": [
            "day_or_month_or_time_rel"
        ]
    },
    {
        "docstring": "",
        "name": "day_n_rel",
        "parents": [
            "day_or_month_or_time_rel"
        ]
    },
    {
        "docstring": "",
        "name": "date_n_rel",
        "parents": [
            "day_or_month_or_time_rel"
        ]
    },
    {
        "docstring": "",
        "name": "unknown_v_rel",
        "parents": [
            "predsort"
        ]
    },
    {
        "docstring": "",
        "name": "ellipsis_v_rel",
        "parents": [
            "predsort"
        ]
    },
    {
        "docstring": "",
        "name": "arg-ev-relation",
        "parents": [
            "event-relation"
        ]
    },
    {
        "docstring": "",
        "name": "unknown-v-relation",
        "parents": [
            "arg-ev-relation"
        ]
    },
    {
        "docstring": "selected_rel is a sister of norm_rel, and hence both types are not compatible.<br>selected_rel is used to define semantically empty predicates (LKEYS.KEYREL.PRED selected_rel), <br>and is being used to allow some lexical entries (e.g. verbs) to require this type of relations in <br>their argument structure.",
        "name": "selected_rel",
        "parents": [
            "predsort"
        ]
    },
    {
        "docstring": "",
        "name": "norm_rel",
        "parents": [
            "predsort"
        ]
    },
    {
        "docstring": "",
        "name": "selected_comp_rel",
        "parents": [
            "selected_rel"
        ]
    },
    {
        "docstring": "This type is for nominal complements of separable verbs (verbs that have non-compositional semantics with special complements). These are selected by the verb, introduce no semantics on their own, but can be separated from the verb by things like aspect markers and certain modifiers.<br><br>Added [BOUND +] from blocking them from being pumped through other rules that require SORT (e.g. time and place adp). Since these don't introduce any semantics they can't have a value for SORT.<br><br>Added [LOC -] to block this from being pumped into locative adpositions.<br><br>Added [MODIFIABLE -] for now (but this should revisited later).<br><br>Added [NONSUBJ +] to block separable complements from ever becoming subjects.<br><br><br><br>[FIXME] Given the syntactic nature of the bound complements, and the way they interact with a range of modifiers between the verb and bound complement, we expect the bound complements to preserve all its syntactic features (e.g. countability, noun types, etc.) this is not being done yet.<br><br>**********<br>[FIXED] A previous version of this type was breaking things during treebank. It could not be selected, although it will generate a nice parse if the corresponding v_np_sep_le was chosen instead (that verb selects the available n_nosem_selected as its complement).<br>The reason for this was that the lexical entries were specifying inanimate in their PNG, and this was forcing the nouns to actually behave as having a referential index when in fact we are stating that they have no semantincs. It is not clear to me why the grammar was compiling. but after removing this the FFTB is happy.<br>**********",
        "name": "n_nosem_selected",
        "parents": [
            "selected-lex",
            "no-rels-hcons-icons-lex-item"
        ]
    },
    {
        "docstring": "transitive-super-lex-item = takes an argument but has no ARG2 in the semantics.<br><br>Added [OPT -] to SYNSEM.LOCAL.CAT.VAL.COMPS to guarantee that this is bound complement is always there. This should ensure that it doesn't get discharged by optional complement rules.",
        "name": "v_np_sep_le",
        "parents": [
            "transitive-sep-lex-item",
            "nonque-item",
            "verb-no-spr-item",
            "main-verb-lex",
            "aspect-rule-dtr"
        ]
    },
    {
        "docstring": "Having cl_x_rel under norm_rel makes the claim that all selected_rel (non-norm_rel) cannot be classified over. This might not be the case. We could use ALTKEY instead of KEY if we want to allow CLs to happen in selected rels.",
        "name": "cl_x_rel",
        "parents": [
            "norm_rel"
        ]
    },
    {
        "docstring": "",
        "name": "intensifier_x_rel",
        "parents": [
            "predsort"
        ]
    },
    {
        "docstring": "",
        "name": "redup_x_rel",
        "parents": [
            "intensifier_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "neg_x_rel",
        "parents": [
            "predsort"
        ]
    },
    {
        "docstring": "",
        "name": "nm_rel",
        "parents": [
            "predsort"
        ]
    },
    {
        "docstring": "",
        "name": "measure_x_rel",
        "parents": [
            "predsort"
        ]
    },
    {
        "docstring": "",
        "name": "bridge_x_rel",
        "parents": [
            "predsort"
        ]
    },
    {
        "docstring": "",
        "name": "place_p_rel",
        "parents": [
            "predsort"
        ]
    },
    {
        "docstring": "",
        "name": "time_p_rel",
        "parents": [
            "predsort"
        ]
    },
    {
        "docstring": "",
        "name": "addressee_p_rel",
        "parents": [
            "predsort"
        ]
    },
    {
        "docstring": "",
        "name": "fragment_head",
        "parents": [
            "head"
        ]
    },
    {
        "docstring": "",
        "name": "saturated",
        "parents": [
            "valence"
        ]
    },
    {
        "docstring": "",
        "name": "super-saturated",
        "parents": [
            "saturated"
        ]
    },
    {
        "docstring": "",
        "name": "+vj",
        "parents": []
    },
    {
        "docstring": "",
        "name": "char",
        "parents": [
            "avm"
        ]
    },
    {
        "docstring": "",
        "name": "length",
        "parents": [
            "avm"
        ]
    },
    {
        "docstring": "",
        "name": "one-or-two",
        "parents": [
            "length"
        ]
    },
    {
        "docstring": "",
        "name": "more-than-one",
        "parents": [
            "length"
        ]
    },
    {
        "docstring": "",
        "name": "one",
        "parents": [
            "one-or-two"
        ]
    },
    {
        "docstring": "",
        "name": "two",
        "parents": [
            "one-or-two",
            "more-than-one"
        ]
    },
    {
        "docstring": "",
        "name": "more-than-two",
        "parents": [
            "more-than-one"
        ]
    },
    {
        "docstring": "",
        "name": "head",
        "parents": []
    },
    {
        "docstring": "",
        "name": "lex-item",
        "parents": []
    },
    {
        "docstring": "",
        "name": "marker-or-punct",
        "parents": [
            "head"
        ]
    },
    {
        "docstring": "",
        "name": "marker",
        "parents": [
            "marker-or-punct"
        ]
    },
    {
        "docstring": "",
        "name": "punct",
        "parents": [
            "marker-or-punct"
        ]
    },
    {
        "docstring": "",
        "name": "+np",
        "parents": []
    },
    {
        "docstring": "",
        "name": "pform",
        "parents": [
            "avm"
        ]
    },
    {
        "docstring": "",
        "name": "gei-or-xiang",
        "parents": [
            "pform"
        ]
    },
    {
        "docstring": "",
        "name": "gei",
        "parents": [
            "gei-or-xiang"
        ]
    },
    {
        "docstring": "",
        "name": "xiang",
        "parents": [
            "gei-or-xiang"
        ]
    },
    {
        "docstring": "",
        "name": "zai",
        "parents": [
            "pform"
        ]
    },
    {
        "docstring": "",
        "name": "you",
        "parents": [
            "pform"
        ]
    },
    {
        "docstring": "",
        "name": "dui",
        "parents": [
            "pform"
        ]
    },
    {
        "docstring": "",
        "name": "voc",
        "parents": [
            "pform"
        ]
    },
    {
        "docstring": "",
        "name": "+njd",
        "parents": []
    },
    {
        "docstring": "",
        "name": "nm",
        "parents": [
            "noun"
        ]
    },
    {
        "docstring": "",
        "name": "num",
        "parents": []
    },
    {
        "docstring": "",
        "name": "prep",
        "parents": [
            "adp"
        ]
    },
    {
        "docstring": "",
        "name": "postp",
        "parents": [
            "adp"
        ]
    },
    {
        "docstring": "",
        "name": "postp-assoc",
        "parents": [
            "postp"
        ]
    },
    {
        "docstring": "",
        "name": "postp-assoc-n",
        "parents": [
            "postp-assoc",
            "postp-nominalizable"
        ]
    },
    {
        "docstring": "",
        "name": "postp-assoc-v",
        "parents": [
            "postp-assoc"
        ]
    },
    {
        "docstring": "",
        "name": "postp-nominalizable",
        "parents": [
            "postp"
        ]
    },
    {
        "docstring": "",
        "name": "postp-comp",
        "parents": [
            "postp-nominalizable"
        ]
    },
    {
        "docstring": "",
        "name": "png",
        "parents": []
    },
    {
        "docstring": "",
        "name": "pernum",
        "parents": [
            "*top*"
        ]
    },
    {
        "docstring": "",
        "name": "sg",
        "parents": [
            "pernum"
        ]
    },
    {
        "docstring": "",
        "name": "indet",
        "parents": [
            "pernum"
        ]
    },
    {
        "docstring": "",
        "name": "pl",
        "parents": [
            "pernum"
        ]
    },
    {
        "docstring": "",
        "name": "1st",
        "parents": [
            "pernum"
        ]
    },
    {
        "docstring": "",
        "name": "2nd",
        "parents": [
            "pernum"
        ]
    },
    {
        "docstring": "",
        "name": "3rd",
        "parents": [
            "pernum"
        ]
    },
    {
        "docstring": "",
        "name": "1sg",
        "parents": [
            "1st",
            "sg"
        ]
    },
    {
        "docstring": "",
        "name": "2sg",
        "parents": [
            "2nd",
            "sg"
        ]
    },
    {
        "docstring": "",
        "name": "3sg",
        "parents": [
            "3rd",
            "sg"
        ]
    },
    {
        "docstring": "",
        "name": "1indet",
        "parents": [
            "1st",
            "indet"
        ]
    },
    {
        "docstring": "",
        "name": "2indet",
        "parents": [
            "2nd",
            "indet"
        ]
    },
    {
        "docstring": "",
        "name": "3indet",
        "parents": [
            "3rd",
            "indet"
        ]
    },
    {
        "docstring": "",
        "name": "1pl",
        "parents": [
            "1st",
            "pl"
        ]
    },
    {
        "docstring": "",
        "name": "1pl_incl",
        "parents": [
            "1pl"
        ]
    },
    {
        "docstring": "",
        "name": "1pl_excl",
        "parents": [
            "1pl"
        ]
    },
    {
        "docstring": "",
        "name": "2pl",
        "parents": [
            "2nd",
            "pl"
        ]
    },
    {
        "docstring": "",
        "name": "3pl",
        "parents": [
            "3rd",
            "pl"
        ]
    },
    {
        "docstring": "",
        "name": "gender",
        "parents": [
            "*top*"
        ]
    },
    {
        "docstring": "",
        "name": "masc",
        "parents": [
            "gender"
        ]
    },
    {
        "docstring": "",
        "name": "fem",
        "parents": [
            "gender"
        ]
    },
    {
        "docstring": "",
        "name": "animacy",
        "parents": [
            "*top*"
        ]
    },
    {
        "docstring": "",
        "name": "animate",
        "parents": [
            "animacy"
        ]
    },
    {
        "docstring": "",
        "name": "human",
        "parents": [
            "animate"
        ]
    },
    {
        "docstring": "",
        "name": "non-human",
        "parents": [
            "animate"
        ]
    },
    {
        "docstring": "",
        "name": "inanimate",
        "parents": [
            "animacy"
        ]
    },
    {
        "docstring": "",
        "name": "form",
        "parents": [
            "*top*"
        ]
    },
    {
        "docstring": "",
        "name": "nonfinite",
        "parents": [
            "form"
        ]
    },
    {
        "docstring": "",
        "name": "finite",
        "parents": [
            "form"
        ]
    },
    {
        "docstring": "",
        "name": "perfective",
        "parents": [
            "aspect"
        ]
    },
    {
        "docstring": "",
        "name": "tentative",
        "parents": [
            "aspect"
        ]
    },
    {
        "docstring": "This is the aspect value 没 restricts to.<br>When it appears by itself, it is usually considered simply 'imperfective'. However, 没 is also used to negate 过, 着 and 在. This means that 'imperfective', 'experiential' and 'durative' need to inherit from a single parent. <br>When paired with one of the other aspect particles, they will find the adequate GLB.<br><br>[FIXME] This would be a case where we would want to rewrite this using the vpm. 'imperfective-or-experiential-or-durative' could be set to 'imperfective' by default to avoid overgeneration.",
        "name": "imp-exp-or-dur",
        "parents": [
            "aspect"
        ]
    },
    {
        "docstring": "",
        "name": "imperfective",
        "parents": [
            "imp-exp-or-dur"
        ]
    },
    {
        "docstring": "",
        "name": "experiential",
        "parents": [
            "imp-exp-or-dur"
        ]
    },
    {
        "docstring": "",
        "name": "durative",
        "parents": [
            "imp-exp-or-dur"
        ]
    },
    {
        "docstring": "FZZ 2017-01-10 for '看 了 一下'",
        "name": "tent-and-perf",
        "parents": [
            "tentative",
            "perfective"
        ]
    },
    {
        "docstring": "SSH 2014-09-04; blocking overgeneration.<br><br>[FIXME] This is actually being used for both 不 and, A-NOT-A constructions. But it is not clear whether or not it should be inheriting from 'imperfective'.",
        "name": "non-aspect",
        "parents": [
            "imperfective"
        ]
    },
    {
        "docstring": "",
        "name": "dialogue",
        "parents": [
            "icons"
        ]
    },
    {
        "docstring": "",
        "name": "addressor",
        "parents": [
            "dialogue"
        ]
    },
    {
        "docstring": "",
        "name": "addressee",
        "parents": [
            "dialogue"
        ]
    },
    {
        "docstring": "",
        "name": "rank",
        "parents": [
            "icons"
        ]
    },
    {
        "docstring": "",
        "name": "higher-or-equal",
        "parents": [
            "rank"
        ]
    },
    {
        "docstring": "",
        "name": "lower-or-equal",
        "parents": [
            "rank"
        ]
    },
    {
        "docstring": "",
        "name": "higher",
        "parents": [
            "higher-or-equal"
        ]
    },
    {
        "docstring": "",
        "name": "lower",
        "parents": [
            "lower-or-equal"
        ]
    },
    {
        "docstring": "",
        "name": "equal",
        "parents": [
            "higher-or-equal",
            "lower-or-equal"
        ]
    },
    {
        "docstring": "",
        "name": "ctxt",
        "parents": []
    },
    {
        "docstring": "",
        "name": "c-indices",
        "parents": [
            "avm"
        ]
    },
    {
        "docstring": "",
        "name": "head-only",
        "parents": []
    },
    {
        "docstring": "",
        "name": "basic-head-comp-phrase",
        "parents": []
    },
    {
        "docstring": "",
        "name": "head-adj-phrase",
        "parents": []
    },
    {
        "docstring": "Using OPT on non-head-dtr to prevent a special DeP from being taken as a normal modifier.",
        "name": "head-adj-int-phrase",
        "parents": []
    },
    {
        "docstring": "",
        "name": "head-adj-scop-phrase",
        "parents": []
    },
    {
        "docstring": "It is not clear why this was marked as [PUNCTUATED na-or--] and it was blocking parses like: <br><b>[ex]</b> 电邮 地址 是 ： abc@google.com<br>(The email address is abc@google.com)<br><br>;; The head of head-comp-phrase can't be: ['comp']",
        "name": "head-comp-phrase",
        "parents": [
            "basic-head-1st-comp-phrase",
            "head-initial"
        ]
    },
    {
        "docstring": "",
        "name": "head-comp-phrase",
        "parents": []
    },
    {
        "docstring": "",
        "name": "head-comp-phrase",
        "parents": []
    },
    {
        "docstring": ";; SSH 2015-04-16: adp -> prep",
        "name": "head-2nd-comp-phrase",
        "parents": [
            "basic-head-2nd-comp-phrase",
            "head-initial"
        ]
    },
    {
        "docstring": "POSTCOMP + == I'm after my comps<br><br>LMC: added a BOUND na-or-- constrain to the NON-HEAD-DTR to prevent it <br>from picking up bound morphemes like 们.",
        "name": "comp-head-final-phrase",
        "parents": [
            "basic-head-1st-comp-phrase",
            "head-final"
        ]
    },
    {
        "docstring": ";;; Matrix redifinition<br>;;; redefine QUE to allow >1 wh-words in a sentence<br>;;; taking out QUE from the basic-one/two/three-arg <br>;;; QUE value is instead amalgated by unary/binary rules",
        "name": "non-local",
        "parents": [
            "non-local-min"
        ]
    },
    {
        "docstring": ";;; Matrix redifinition<br>;;; redefine QUE to allow >1 wh-words in a sentence<br>;;; taking out QUE from the basic-one/two/three-arg <br>;;; QUE value is instead amalgated by unary/binary rules",
        "name": "basic-one-arg",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": ";;; Matrix redifinition<br>;;; redefine QUE to allow >1 wh-words in a sentence<br>;;; taking out QUE from the basic-one/two/three-arg <br>;;; QUE value is instead amalgated by unary/binary rules",
        "name": "basic-two-arg",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": ";;; Matrix redifinition<br>;;; redefine QUE to allow >1 wh-words in a sentence<br>;;; taking out QUE from the basic-one/two/three-arg <br>;;; QUE value is instead amalgated by unary/binary rules",
        "name": "basic-three-arg",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "unary-phrase-super",
        "parents": [
            "basic-unary-phrase"
        ]
    },
    {
        "docstring": "This was redefined from Matrix. The info that existed in 'matrix.tdl' is now in 'unary-phrase-super'.",
        "name": "unary-phrase",
        "parents": [
            "unary-phrase-super"
        ]
    },
    {
        "docstring": "",
        "name": "unary-phrase",
        "parents": []
    },
    {
        "docstring": "",
        "name": "basic-binary-phrase",
        "parents": []
    },
    {
        "docstring": "This is a redefinition from the Matrix.<br>;;removed head-nexus-que-phrase as QUE is now collected differently.",
        "name": "head-nexus-phrase",
        "parents": [
            "head-nexus-rel-phrase"
        ]
    },
    {
        "docstring": ";; MATRIX REDEFINITION<br>;; Note: We removed the [QUE 0-dlist] constraint from the NON-HEAD-DTR<br>;; since Mandarin has in-situ WH-phrases.<br>;;<br>;;; e.g. subj can be or contain wh-word<br>;;; e.g. '谁' '哪 个 人' '谁 的 书' etc.<br><br>I preserved the order of these two definitions, but they are not the same! <br>So this second one is the one that has been used for a while!<br>It seems we lost HC-LIGHT  but added BOUND na-or--   to the HEAD-DTR<br>I commented out the first definition (which was being redefined by ACE anyway)<br>[FIXME][FCB]<br>FCB: ADD/REMOVE HC-LIGHT and do regression test",
        "name": "basic-head-subj-phrase",
        "parents": [
            "head-valence-phrase",
            "binary-headed-phrase",
            "head-compositional"
        ]
    },
    {
        "docstring": "There seemed to be a notion that time nouns could not serve as SUBJs.<br>This restriction was actually spread across both basic-time-noun-lex (by <br>stating they were [NONSUBJ +], but also here, by stating that the <br>NON-HEAD-DTR must be of SORT nontime-s. This seems to be overly restrictive<br>as it doesn't account for sentences like:<br><b>[ex]</b> 一月 是 我 最 喜欢 的 月份 。<br>Or <br><b>[ex]</b> 昨天 很 热 。<br>This restriction was removed for the time being.<br><b>[ex]</b> 今天 过 了 以后 我 可以 吃 饭 。",
        "name": "subj-head-phrase",
        "parents": [
            "decl-head-subj-phrase",
            "head-final"
        ]
    },
    {
        "docstring": "",
        "name": "comp-head-phrase",
        "parents": [
            "basic-head-1st-comp-phrase",
            "head-final"
        ]
    },
    {
        "docstring": "",
        "name": "n-coord-phrase",
        "parents": []
    },
    {
        "docstring": "",
        "name": "np-coord-phrase",
        "parents": []
    },
    {
        "docstring": "This is a redefinition from Matrix.<br>original: PRED \"exist_q_rel\"<br>now: PRED exist_q_rel",
        "name": "basic-np-top-coord-rule",
        "parents": [
            "np-coord-phrase",
            "c-cont-1"
        ]
    },
    {
        "docstring": ";; MATRIX REDEFINITION<br>;;ZZF 2016-11-29 included adj and removed \"RCOORD-DTR.SYNSEM.LOCAL.CAT.MC #mc\", as right item usually has a conj leading the construction, which is MC -. And ROOT requires MC +.",
        "name": "s-coord-phrase",
        "parents": [
            "event-coord-phrase"
        ]
    },
    {
        "docstring": "This was redefined from Matrix.<br>;; ZZF 20161122: changing COORD to be \"-\" for mid level, which can then combine with the next (to the right) \"+\" phrase to form coordination<br>;; removed implicit-coord-rel as the conj introduces coord-rel<br>;; bottom level: conj (including implicit coordinator \"，\" and \"、\") + xp --> COORD + at mother node<br>;; mid level: (NP + (CONJ + NP)) --> COORD- + COORD+ --> COORD - at mother node",
        "name": "mid-coord-rule",
        "parents": [
            "topormid-coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "n1-top-coord-rule",
        "parents": [
            "basic-np-top-coord-rule",
            "monopoly-top-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "n1-mid-coord-rule",
        "parents": [
            "basic-np-mid-coord-rule",
            "monopoly-mid-coord-rule"
        ]
    },
    {
        "docstring": "ZZF 2016-11-30 added [PUNCTUATED na-or--] to nonconj-dtr so that punctuations are attached later; added SPR < > to nonconj-dtr to close it off and allow same VAL for the two coordinated elements.<br><br>This rule joins a conjunction with a head 'non-conjunction' phrase (e.g. a comma with a NP).",
        "name": "bottom-coord-rule",
        "parents": [
            "conj-first-bottom-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "vp1-top-coord-rule",
        "parents": [
            "basic-vp-top-coord-rule",
            "apoly-top-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "n3-top-coord-rule",
        "parents": [
            "basic-n-top-coord-rule",
            "apoly-top-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "n3-bottom-coord-rule",
        "parents": [
            "unary-bottom-coord-rule",
            "n-bottom-coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "np3-top-coord-rule",
        "parents": [
            "basic-np-top-coord-rule",
            "apoly-top-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "np3-bottom-coord-rule",
        "parents": [
            "unary-bottom-coord-rule",
            "np-bottom-coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "vp3-top-coord-rule",
        "parents": [
            "basic-vp-top-coord-rule",
            "apoly-top-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "vp3-bottom-coord-rule",
        "parents": [
            "unary-bottom-coord-rule",
            "vp-bottom-coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "s1-top-coord-rule",
        "parents": [
            "basic-s-top-coord-rule",
            "apoly-top-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "n4-top-coord-rule",
        "parents": [
            "basic-n-top-coord-rule",
            "monopoly-top-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "n4-mid-coord-rule",
        "parents": [
            "basic-n-mid-coord-rule",
            "monopoly-mid-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "n4-bottom-coord-rule",
        "parents": [
            "infl-bottom-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "n5-top-coord-rule",
        "parents": [
            "basic-n-top-coord-rule",
            "monopoly-top-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "n5-mid-coord-rule",
        "parents": [
            "basic-n-mid-coord-rule",
            "monopoly-mid-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "n5-bottom-coord-rule",
        "parents": [
            "conj-first-bottom-coord-rule",
            "n-bottom-coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "np5-top-coord-rule",
        "parents": [
            "basic-np-top-coord-rule",
            "monopoly-top-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "np5-mid-coord-rule",
        "parents": [
            "basic-np-mid-coord-rule",
            "monopoly-mid-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "np5-bottom-coord-rule",
        "parents": [
            "conj-first-bottom-coord-rule",
            "np-bottom-coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "vp5-top-coord-rule",
        "parents": [
            "basic-vp-top-coord-rule",
            "monopoly-top-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "vp5-mid-coord-rule",
        "parents": [
            "basic-vp-mid-coord-rule",
            "monopoly-mid-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "vp5-bottom-coord-rule",
        "parents": [
            "conj-first-bottom-coord-rule",
            "vp-bottom-coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "s5-top-coord-rule",
        "parents": [
            "basic-s-top-coord-rule",
            "monopoly-top-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "s5-mid-coord-rule",
        "parents": [
            "basic-s-mid-coord-rule",
            "monopoly-mid-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "s5-bottom-coord-rule",
        "parents": [
            "conj-first-bottom-coord-rule",
            "s-bottom-coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "s6-top-coord-rule",
        "parents": [
            "basic-s-top-coord-rule",
            "monopoly-top-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "s6-mid-coord-rule",
        "parents": [
            "basic-s-mid-coord-rule",
            "monopoly-mid-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "s6-bottom-coord-rule",
        "parents": [
            "conj-first-bottom-coord-rule",
            "s-bottom-coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "s7-top-coord-rule",
        "parents": [
            "basic-s-top-coord-rule",
            "monopoly-top-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "s7-mid-coord-rule",
        "parents": [
            "basic-s-mid-coord-rule",
            "monopoly-mid-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "s7-bottom-coord-rule",
        "parents": [
            "conj-first-bottom-coord-rule",
            "s-bottom-coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "adj-head-phrase",
        "parents": []
    },
    {
        "docstring": "These were not properly linked (they had a typo); Should run a sanity check;",
        "name": "scopal-mod-phrase",
        "parents": []
    },
    {
        "docstring": "This is the super-type for intersective adj-head phrases.<br>This is currently being used for many things, most importantly, it mixes normal modification with classifiers. <br><br>This is being split into classifiers/non-classifier below, so we can pass the feature CLASSIF.",
        "name": "adj-head-int-mc",
        "parents": [
            "adj-head-int-phrase"
        ]
    },
    {
        "docstring": "For non classifier phrases, [CLASSIF #classif] is passed from the head daughter.",
        "name": "adj-head-int-noncls",
        "parents": [
            "adj-head-int-mc"
        ]
    },
    {
        "docstring": "[CLASSIF +] is always true if this rule activates. This is done so we can create 'classifier/numeral predicates' which only seem viable if a NP is classifier (but without determiners).",
        "name": "adj-head-int-cls",
        "parents": [
            "adj-head-int-mc"
        ]
    },
    {
        "docstring": "",
        "name": "adj-head-scop-phrase",
        "parents": []
    },
    {
        "docstring": "",
        "name": "alts",
        "parents": []
    },
    {
        "docstring": "",
        "name": "filler-head-phrase",
        "parents": [
            "basic-head-filler-phrase",
            "head-final",
            "topic-comment"
        ]
    },
    {
        "docstring": ";; SSH 2014-09-02: added [MODIFIED] for blocking overgeneration<br>;; SSH 2014-09-02: added [MC +] for blocking overgeneration <br>;; FZZ 2017-01-12: removed [VAL.COMPS < >] from mother to allow verbs taking >1 comps",
        "name": "extracted-comp-phrase",
        "parents": [
            "basic-extracted-comp-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "extracted-subj-phrase",
        "parents": [
            "basic-extracted-subj-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "coord-phrase",
        "parents": []
    },
    {
        "docstring": ";; MATRIX REDEFINITION<br>;; Note: Modified to allow multiple rels",
        "name": "basic-determiner-lex",
        "parents": [
            "norm-hook-lex-item",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": ";; SSH 2014-08-26: MATRIX REDEFINITION<br>No explanation was given.",
        "name": "infostr-marking-determiner-lex",
        "parents": [
            "basic-determiner-lex"
        ]
    },
    {
        "docstring": ";; MATRIX REDEFINITION<br>;; Note: for the following, removed QUE 0-dlist  <br>;; -- question words can function as direct objects",
        "name": "clause",
        "parents": [
            "phrasal"
        ]
    },
    {
        "docstring": ";; MATRIX REDEFINITION<br>;; Note: Removed [QUE 0-dlist] from HEAD-DTR, to allow in-situ WH",
        "name": "basic-non-rel-clause",
        "parents": [
            "clause",
            "head-compositional"
        ]
    },
    {
        "docstring": "Added [NONSUBJ] feature to the copying.<br>Added [INTERJECTED] feature to the copying.",
        "name": "basic-head-mod-phrase-simple",
        "parents": [
            "head-mod-phrase",
            "binary-headed-phrase"
        ]
    },
    {
        "docstring": ";;2016-2-19 ZZF FB SSH copy SPEC from HEAD-DTR to mother.<br>;;ZZF 20161114 removed 'NON-HEAD-DTR.SYNSEM.PUNCTUATED na-or--', put it on head-adj-int-phrase and adj-head-int-mc-phrase. To allow scopal modifier to have comma.<br><br>Not sure why this was appended instead of merged into the original type. [FIXME]",
        "name": "basic-head-mod-phrase-simple",
        "parents": []
    },
    {
        "docstring": "By forcing the non-head daughter's SPEC's COMP to be empty, we can require all <br>determiners to take CLs (e.g. 这 个 东西, but not 这 东西). <br>This was changed but it is now commented out to see how well this was being done through the noun types.<br>We need some nouns (few nouns, such as time nouns 天 or 年 to not take a classifier... It is still unclear what is the best way to do that.<br><br>We linked the LTOP of the head dtg and the non head dtr because this is the expected result in intersective modification.",
        "name": "basic-head-spr-phrase",
        "parents": [
            "head-valence-phrase",
            "phrasal",
            "binary-headed-phrase"
        ]
    },
    {
        "docstring": "The COMPS of the produced phrase is empty  < > (this comes from the HEAD-DTR's, <br>but it's not really linked here -- same output ) <br><br>[CLASSIF #classif] added to allow phrases like 多少 钱 to allow numeral predicates",
        "name": "spr-head-phrase",
        "parents": [
            "basic-head-spr-phrase",
            "head-final"
        ]
    },
    {
        "docstring": "This specifier-sead rule is used for both NUM-CL classifier phrases and for DEGREE_SPR-ADJ/V. <br><br><br>This is head-final. So the CL is the head.<br><br>This is passing up the COMPS value of the specifier (NON-HEAD-DTR) to the mother.<br>This is being used for 我 很 喜欢 你  （as spr-head-noncl) and 我 买 了 两 只 猫 (as spr-head-cl)<br><br>[FIXME] The passing of the NON-HEAD-DTR COMPS here is still a mystery.<br>With have a special phrase for something like 3 kilos of cat. <br><br><br>Note here, the syntactic head is the semantic head<br>note, we deleted NON-HEAD-DTR.SYNSEM.LOCAL.CAT.VAL.SUBJ < > : this is already specified in the heads<br> <br>DPF 21-dec-09 - use head-compositional etc instead...<br>SSH 2015-04-16 discourse stgatus (definitesness)<br>ZZF 20161113 added v into HEAD of head-dtr, to allow degree specifiers for verb +vjrpd<br> ---------------------------------------<br>           | cmn             | yue<br> ---------------------------------------<br> DEM-CL-N  | uniq-fam-active (definite)<br> NUME-CL-N | type-id (indefinite)<br> CL-N      | type-id         | active-or-less ((in)definite)<br> N         | active-or-less  | type-id <br> ---------------------------------------<br><br><br>[CONT.HOOK.INDEX event] on the non-head daughter tries to ensure that numbers, when taken as specifiers of Classifiers, should behave as events (semantically). We need to be careful and think about other SPR-HEAD constuctions.  [NOT YET, things were breaking] [FIXME]<br>Immediatly comming to mind: 很 喜欢; 这 个 猫",
        "name": "spr-head-h-sem-phrase",
        "parents": [
            "basic-head-spr-phrase",
            "head-final"
        ]
    },
    {
        "docstring": "Not sure where this would be useful.<br><br>This rule (and their children) seem to be allowing phrases such as:<br>一 个 漂亮 的 姑娘<br><br>However, they are EXTREMLY  ambiguous.",
        "name": "basic-bare-spr-phrase",
        "parents": [
            "head-only"
        ]
    },
    {
        "docstring": "FIXME, it was not clear what this was being used for. <br>It was disabled because it was generating a lot of ambiguity.",
        "name": "bare-s-phrase",
        "parents": [
            "basic-bare-spr-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "bare-adv-phrase",
        "parents": [
            "basic-bare-spr-phrase"
        ]
    },
    {
        "docstring": ";; Bare NP phrase.  Consider modifying the PRED value of the quantifier <br>;; relation introduced to match the semantic effect of bare NPs in your <br>;; language.<br><br>;; MATRIX REDEFINITION<br>;; Note: we removed the SPEC <> constraint<br>;;; DPF - motivate? - shouldn't the head at least propagate SPEC to mother?<br><br>FIXME LMC&FCB tried to made MC - to stop punctuation-end to join; but it is somehow breaking adjectives to pick up normal nouns... <br><br>Needs to pass some important features, for example, NONSUBJ (whether something was marked as impossible to become a subject)",
        "name": "basic-bare-np-phrase",
        "parents": [
            "head-only"
        ]
    },
    {
        "docstring": "This rule transforms a common noun without a determiner to be NP.<br>This results on a NP marked as [BARE +].<br><br>We added c-cont-1 to propagate cfrom and cto to the to the mrs.<br>It inherits from 'c-cont-1' because we only introduce one (hence 1) <br>predicate in the mrs.<br><br><br>This is not a 'headed rule', since it changes the valency. So we must carefully pass up everything that might be relevant. For example, LOC. [FIX] I believe a few other things might be missing.<br><br><br><b>[ex]</b>我 吃 苹果 。<br>(I eat apples.)<br><br>Added [INTERJECTED #interjected] to copying. This helps block modification (with interjections) of NPs if they are going through further process. At the very least, this blocks certain phrases from being pumped by np-time-adp.",
        "name": "bare-np-phrase",
        "parents": [
            "basic-bare-np-phrase",
            "c-cont-1"
        ]
    },
    {
        "docstring": "[ EMPTY - ] on child node to prevent temporal phrases like 昨天 from being converted from ADP to NP again.<br>And [ EMPTY + ] on parent node to signal this NP has no head noun.<br><br><br>LMC: Why was this forced as [INDEX.SORT nontime-s] ?",
        "name": "basic-bare-nominal-phrase",
        "parents": [
            "unary-phrase"
        ]
    },
    {
        "docstring": "pushing DE construction to be NP, including relativing DE and associative DE. DeP should have its COMP fulfilled, thus avoid nominalizing DE alone.<br><b>[ex]</b>我 喜欢 很 红 的<br><b>[ex]</b>我 喜欢 他 写 的<br><b>[ex]</b>我 喜欢 吃 的<br><b>[ex]</b>我 的 哭 了<br><b>[ex]</b>我　喜欢　那　本　红　的<br><b>[ex]</b>我　喜欢　的　是　那　本　红　的<br>Ideally for ADJ/V + DE, only the slashed DeP should be pushed up to be NP. But adding in this constraint would prevent the rule<br>from being applied for possessive NP+DE. To be fixed later.<br><br><br>LMC/BOND: 的_comp is allowing non extracted subjs (opt-subj-decl), that is weird (it should be blocked on the DE). <br>We want 0-nom-p would need to block the associative DE (not sure how yet).<br><br><br>This 0-nom-p phrases were also allowed to be pumped into locative adjuncts.<br>As such, we want to add SYNSEM.LOCAL.CAT.HEAD.LOC na-or--  to the NPs produced by this 的 in case of 'missing NPs'.<br><br><br>[SORT nontime-s] to block these pumped postposition phrases into time adjucts.",
        "name": "bare-nominal-postp-phrase",
        "parents": [
            "basic-bare-nominal-phrase"
        ]
    },
    {
        "docstring": "This rule is looking for a determiner that is still looking for a SPEC (something to specify over)<br>and will produce a nominal-phrase (from the inherited type) that is fully specified (i.e. an NP).<br><br>The comps cannot be empty because there are sentences like:<br><b>[ex]</b>  这 是 他 的 地址 。<br>Where a single determiner has to become an NP<br><br><br><br><br>SPEC < [OPT +] >",
        "name": "bare-nominal-det-phrase",
        "parents": [
            "basic-bare-nominal-phrase"
        ]
    },
    {
        "docstring": "This is for bare determiner+classifier phrases being pumped into NPs. The classifier should always be present.<br><b>[ex]</b> 这 个 是 我 的 朋友 。 <br><br><br>In this case, [COMPS < >] means that this determiner found a classifier being pumped into an NP. In this case, we rely on the fact that determiners with classifiers are picking up the SORT value from their classifiers to decide if they can be pumped into time adverbials or not.",
        "name": "bare-nominal-det-cl-phrase",
        "parents": [
            "bare-nominal-det-phrase"
        ]
    },
    {
        "docstring": "This is for hyper-bare determiners being pumped into NPs. <br><b>[ex]</b> 这 是 我 的 朋友 。 <br><br>COMPS < [ ] > means that this determiner phrase didn't find a classifier before being pumped. <br>In this case, we want to state the result is [SORT nontime-s] because we don't want these hyper-bare determiner phrases from being pumped into time adjuncts.",
        "name": "bare-nominal-det-nocl-phrase",
        "parents": [
            "bare-nominal-det-phrase"
        ]
    },
    {
        "docstring": "pushing num + classifier to be NP<br><b>[ex]</b> 我　买　三　本<br><br>This 0-nom-p phrases were also allowed to be pumped into locative adjuncts.<br>As such, we want to add SYNSEM.LOCAL.CAT.HEAD.LOC na-or--  to the NPs produced by this 的 in case of 'missing NPs'.<br><br>Some classifiers (i.e. time classifiers) expect to be able to pumped into time adverbials because they ought to 'classify' a time noun (e.g. 点 in 三 点 中). So, in order to allow phrases like 三 点 to be pumped into time adverbials, we need to pass the values of SORT between what it ought to modify to what it has become. If this is indeed the sort 'time-s', then it should allow it to be pumped into a time adverbial <br><br><br>[VAL.SPR < > ] In the current treatment of zero-nominal CLS and DET phrases separately, it is probably safe to require that 0-nominal-classifier phrases to have been specified (i.e. to have taken a numeral before the classifier).",
        "name": "bare-nominal-cls-phrase",
        "parents": [
            "basic-bare-nominal-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "generic-np-phrase",
        "parents": [
            "basic-bare-np-phrase"
        ]
    },
    {
        "docstring": "[FIXME]  This is being used to parse WRONG NPs like  三 猫<br>This can probably be made into a mal-rule and then further atuned to allow MEASURE nouns (e.g. kilo, day, year) to link to the number directly. However, some of them （all if we want to force them) can be counting an NP.<br><br> 3 kilos of cat<br> 3 months sadness<br> 5 years of love<br><br>So we would have to do something further because we don't want them as Noun-Noun compounds.<br><br>===================================================<br>; Restrict head-dtr to non-empty SPR, to avoid spurious ambiguity.<br>;<br>;; SSH 2014-04-16 added [CLASSIFIED na-or--]<br>;; SSH 2014-04-21 noun -> +njd, [NONCOMP +] added for blocking overgeneration.<br>;; why +njd? This includes classifier, which should be handled using head-specifier rule<br><br>[EMPTY -] on the HEAD-DTR to prevent empty nouns from applying (e.g., from 0-nom-cls... which are essentially classifier phrases)",
        "name": "meas-np-phrase",
        "parents": [
            "head-final",
            "head-valence-phrase",
            "phrasal"
        ]
    },
    {
        "docstring": "This rule <br><br>Here [HEAD.EXISTV -] prevent forming imperative sentences with 有 which seems a very plausible restriction to save on ambiguity.<br><br>FIXME [COP -] should maybe be in the daughter? (although both these mother and daughter should unify, so it should be accomplishing the same function).<br><br><history><br>SSH 2014-12-19: 追赶 张三 ！ non-asepct & main clause<br></history>",
        "name": "opt-subj-imperative-phrase",
        "parents": [
            "imp-head-opt-subj-phrase"
        ]
    },
    {
        "docstring": "This rule discharges the subject of sentences.<br><br><b>[ex]</b> 有 人 来 了 。<br><b>[ex]</b> 很 有意思 ！<br><br><history><br>LMC 2021: It was  not clear why [EXISTV -] was ever added to the HEAD-DTR. This has been removed.<br>FZZ 2017-08-27: removing MC + from HEAD-DTR, as optional subj can happen in sub clause, e.g. \"下午 下课 以后 ， 我 喜欢 去 打球 。\"<br></history>",
        "name": "opt-subj-declarative-phrase",
        "parents": [
            "decl-head-opt-subj-phrase"
        ]
    },
    {
        "docstring": "[EMPTY -] to stop combining NPs with no head noun, like DeP.<br><br><b>[ex]</b> 中国 学生 们 来 了 。<br>The goal being (中国 (学生 们)) 来 了 。<br><br>My result is light - <br><br><history><br>ZZF 2016-12-8: removed CLASSIFIED na-or-- from head-dtr to allow compound to combine with classifiers later.<br></history>",
        "name": "basic-n-n-compound-phrase",
        "parents": [
            "head-final"
        ]
    },
    {
        "docstring": "",
        "name": "pronproper-noun-compound-phrase",
        "parents": [
            "basic-n-n-compound-phrase"
        ]
    },
    {
        "docstring": "Forms a pronoun-noun compound phrase. The head has to be a noun with noun-relation, thus excluding nominalized DE phrases. The non-head-daughter can't be a proper noun or common noun, constrained using LIGHT and SPR. Using general_rel to include personal pronouns and wh-pronouns.<br><b>[ex]</b>我 朋友 哭 了<br><b>[nex]*</b>张三 朋友 哭 了<br><b>[nex]*</b>苹果 朋友 哭 了<br><b>[nex]*</b>他 解决 了 产品 的 质量 问题<br><br>Head noun can't be temporal noun, using nontime-s.<br>Strictly the head noun should refers to human only, which is to be treated later, <br>e.g. adding a HUMAN +/- feature for all nouns",
        "name": "pronoun-noun-compound-phrase",
        "parents": [
            "pronproper-noun-compound-phrase",
            "c-cont-1"
        ]
    },
    {
        "docstring": "",
        "name": "propernoun-noun-compound-phrase",
        "parents": [
            "pronproper-noun-compound-phrase",
            "c-cont-1"
        ]
    },
    {
        "docstring": "",
        "name": "noun-proper-compound-phrase",
        "parents": [
            "basic-n-n-compound-phrase"
        ]
    },
    {
        "docstring": "Forms a noun-noun compound phrase<br><b>[ex]</b>他 解决 了 质量 问题<br><b>[ex]</b>他 解决 了 产品 质量 问题<br><b>[ex]</b>他 解决 了 产品 的 质量 问题<br><b>[nex]*</b>他 解决 了 张三 问题<br><b>[nex]*</b>他 解决 了 我 问题<br>For compounds with >2 nouns, we have bracketting ambiguity, e.g. [产品 [质量 问题]] or [[产品 质量] 问题]. <br>The rule allows both interpretations, leaving the ambiguity for statistical ranking model to determine later.",
        "name": "noun-noun-compound-phrase",
        "parents": [
            "basic-n-n-compound-phrase"
        ]
    },
    {
        "docstring": "This rule is the mother of many specific types of resultative phrases, where two predicates are joined in a serial construction, with different semantic outputs depending on the subcategorization of each of the verbs. <br><br>This top rule lays out some restrictions:<br>- both phrases need to be non aspected.<br>- both phrases need to be [LIGHT +], essentially requesting things without filled comps (???)<br>- both phrases [BARE na-or--], which is a feature not used by verbs or adjectives and that is being used to block resultative constructions. As such, any verb that is marked as [BARE +] will be blocked from participating in these constructions; This is an interesting choice (just to save on the number of features). This is most likely not the best way to do this in the future, but for now it's ok. <br><br>[FIXME] Overall most of these structures produce a lot of gibberish. The semantics are also broken in a lot of places. This is also how complements of results (吃 完) are being handled, but there is no restrictions as to what can serve as a complement.",
        "name": "rslt-compound-phrase",
        "parents": [
            "head-initial"
        ]
    },
    {
        "docstring": "",
        "name": "rslt-x_12-phrase",
        "parents": [
            "rslt-compound-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "rslt-1_1-phrase",
        "parents": [
            "rslt-compound-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "rslt-12_1-phrase",
        "parents": [
            "rslt-compound-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "subject-oriented-phrase",
        "parents": [
            "head-initial"
        ]
    },
    {
        "docstring": "",
        "name": "object-oriented-phrase",
        "parents": [
            "head-initial"
        ]
    },
    {
        "docstring": "",
        "name": "inverse-oriented-phrase",
        "parents": [
            "head-initial"
        ]
    },
    {
        "docstring": "Type 2 (lee:13)<br><b>[ex]</b>张三 玩 忘 了 责任",
        "name": "rslt-1_12-phrase",
        "parents": [
            "rslt-x_12-phrase",
            "subject-oriented-phrase"
        ]
    },
    {
        "docstring": "Type 1 (lee:13)<br><b>[ex]</b>张三 下 赢 棋",
        "name": "rslt-12_12-phrase",
        "parents": [
            "rslt-x_12-phrase",
            "subject-oriented-phrase"
        ]
    },
    {
        "docstring": "This is a subject-oriented construction, where the subject of the first predicate is shared with the second predicate. As the name indicates, both predicates only take a single argument (e.g. intransitive verbs and adjectives); <br><br><b>[ex]</b> 张三 跑 累 了 。<br>('张三 ran', and '张三 became tired')<br><br>Referred to as Type 10 in (lee:13).",
        "name": "rslt-1_1-sbj-phrase",
        "parents": [
            "rslt-1_1-phrase",
            "subject-oriented-phrase"
        ]
    },
    {
        "docstring": "This is an object oriented construction where there is no linking of arguments between both predicates, but there is a displacement of the argument of the second predicate. In other words, the resultative construction (e.g. 哭 红) will take a subject (that will be linked to the first predicate (e.g. 哭) and a complement which will be linked to the second predicate (e.g. 红).<br><br>As the name indicates, both predicates only take a single argument (e.g. intransitive verbs and adjectives);<br><br><b>[ex]</b> 张三 哭 红 了 双眼 。<br>('张三 cried' and, as a result, '双眼 became red')<br><br>Referred to as Type 5 in (lee:13).<br><br>The TDL here states that the SUBJ of the resultative construction will be the subject of the HEAD-DTR of this construction (which is HEAD-INITIAL, so it refers to the verb).",
        "name": "rslt-1_1-obj-phrase",
        "parents": [
            "rslt-1_1-phrase",
            "object-oriented-phrase"
        ]
    },
    {
        "docstring": "This rule expects a single argument for the resultative construction (as subject) but this argument is only linked to the second predicate (leaving the first predicate with an unexpressed argument). In other words, the resultative construction (e.g. 哭 红) will take only a subject, but this subject will only be linked to the second predicate (e.g.  红).  [This currently assumes that only inanimate objects can be taken as this argument: this is a very strong assumption and might have to be relaxed in the future] [FIXME]<br><br><b>[ex]</b> 双眼 哭 红 了 。<br><br>Referred to as Type 11 in (lee:13)",
        "name": "rslt-1_1-noshare-phrase",
        "parents": [
            "rslt-1_1-phrase",
            "subject-oriented-phrase"
        ]
    },
    {
        "docstring": "Type 7 (lee:13) (Zhangsan chased Lisi and Zhangsan got tired.)<br><b>[ex]</b> 张三 追 累 了 李四 。",
        "name": "rslt-12_1-sbj-phrase",
        "parents": [
            "rslt-12_1-phrase",
            "subject-oriented-phrase"
        ]
    },
    {
        "docstring": "Type 3 (lee:13) (Zhangsan chased Lisi to the extent of making Lisi tired.)<br><b>[ex]</b> 张三 追 累 了 李四 。<br>     (Zhāng sān zhuī lèile lǐ sì)",
        "name": "rslt-12_1-obj-phrase",
        "parents": [
            "rslt-12_1-phrase",
            "object-oriented-phrase"
        ]
    },
    {
        "docstring": "Type 12 (lee:13)<br><b>[ex]</b> 这 种 药 吃 死 你",
        "name": "rslt-12_1-inv-phrase",
        "parents": [
            "rslt-12_1-phrase",
            "inverse-oriented-phrase"
        ]
    },
    {
        "docstring": ";; Make temporal NPs into adposition phrases<br>;; SSH 2015-04-20: [ SUBJ < [] > ] on MOD is deleted:<br>;; 明天 张三 打 跑 了 李四 <br>;; FZZ 2017-01-10: [NONCOMP -] removed from daughter node to allow '他 六 点 起床'<br><br>push noun to be prepositional phrase<br><b>[ex]</b>他 昨天 来 了<br><br><br>This rule pumps a NP into a adjunct, by giving it the quality of a prepositional phrase.<br>This adjunct modifies VPs/APs prehead (both pre or post subject).<br>It introduces a special 'xxx_p' relation in the semantics to make this link. <br><br>We've also added [COMPS < >] to the only daughter since we want to force optional complements to be discharged or filled before going through this. Some relational nouns have obligatory complements",
        "name": "np-adp-phrase",
        "parents": [
            "unary-phrase"
        ]
    },
    {
        "docstring": "This unary rule pumps a number (which has [HEAD num]) into a NP. <br>This need to happen so it can be used in sentences like:<br><b>[ex]</b> 我 的 手机 号码 是 一二三 。<br><b>[ex]</b> 一二三 也 是 我 的 楼号 。<br><br><?> 这 些 五 比较 厚 。<br><?> 这 个 五 太 大 了 ！<br><br>For now we assume that these numbers just become a N, and a bare NP would be formed if they have are used without a specifier. However, the ERG introduces some special numeric qantifier to block some interactions -- namely on N-N compounds. Since this would not have an immediate usage, we don't do it ('for now'?).<br><br>In pumping rules we need to pass CONT if we want the labels and indexes (etc.) to remain the same for linking the semantics properly. Else they would get a new one and remain unliked with previous things.<br><br><br>[EMPTY +] is being used to block pumped numbers from being used in NOUN-NOUN compounds.<br>[LOC -] because these shouldn't be able to be pumped into location-adverbs. <br>[SORT nontime-s] to block pumped numbers from become time adverbials by themselves;<br><br><br>2021.08.02 LKB-FOS was complaining about ARG-ST being redefined here. Commented it out for now. It feels it would be redundant.",
        "name": "np-num-phrase",
        "parents": [
            "unary-phrase"
        ]
    },
    {
        "docstring": "This is a specific case of 'np-adp-phrase'. It transforms temporal nouns into prepositional phrases. This selection is using 'SORT time-s'.<br><b>[ex]</b>他 昨天 来 了 。<br><b>[ex]</b>昨天 他 来 了 。<br><br>[FIXME] Even though [SPECI -] is being set, the grammar currently doesn't predict anything through the change of this feature. The only places where SPECI is used is to distinguish count/mass nouns,  but this feature is never actually used (thus far).  <br><br>[BOUND -] is necessary to block the empty semantic comps from separable verbs.<br>(but it generally makes sense)<br><br>**** [EMPTY -] was previously being used to block further pumping of pumped N (e.g. from numbers); However, if we want to pump certain empty phrases (e.g. 三 点 of  三 点 钟), then we must allow this ot happen. Numbers were directly marked as nontime-s.  <br><br><br>[FIXME] We need to stop interjected things from being pumped further.<br>[INTERJECTED na-or--] should prevent things that have been interjected from being pumped further<br>[PUNCTUATED na-or--] should prevent the pumping for already punctuated phrases (i.e. pump first)",
        "name": "np-time-adp-phrase",
        "parents": [
            "np-adp-phrase"
        ]
    },
    {
        "docstring": "This is a specific case of 'np-adp-phrase'. It transforms certain nouns compatible with [LOC +] into adjuncts.  This is currently marked as robust (since it's not clear if this is actually acceptable in written/formal contexts).<br><br>Ensuring tha the  [SUBJ < [] >] on the MOD restricts the placement of this adjunct between the subject and the VP/AP (which is desired). <br><br>we need to block coordinations to be pumped into location adjuncts. This might be a sweeping statement, but reduces a lot of ambiguity. It seems COORD is not the right feature for this. [FIXME]",
        "name": "np-place-adp-phrase",
        "parents": [
            "np-adp-phrase"
        ]
    },
    {
        "docstring": ";; WWJ 2014-04-07: to block adj-not-adj prep-not-prep <br>;; SSH 2015-04-08: to block overgeneration, [ASPECTED +-or--] is added.<br>;; SSH 2015-04-12: verb -> +vp<br><br>LMC 2021-02-21: With the introduction of relational (locative) nouns -- which include variants with optional complements, this is no longer exclusive to verbs and prepositions. Added nouns as well.<br><br>[FIXME]  Why would prepositions be able to have optional complements. Need to check this further.",
        "name": "head-opt-comp-phrase",
        "parents": [
            "basic-head-opt-comp-phrase"
        ]
    },
    {
        "docstring": "; for sentential subjects",
        "name": "sent-subj-phrase",
        "parents": [
            "head-valence-phrase",
            "head-only"
        ]
    },
    {
        "docstring": "",
        "name": "individual",
        "parents": []
    },
    {
        "docstring": "",
        "name": "non-coord-index",
        "parents": [
            "event-or-ref-index"
        ]
    },
    {
        "docstring": "",
        "name": "non-coord-event",
        "parents": [
            "non-coord-index",
            "event"
        ]
    },
    {
        "docstring": "",
        "name": "non-coord-ref-ind",
        "parents": [
            "non-coord-index",
            "ref-ind"
        ]
    },
    {
        "docstring": "",
        "name": "time-s",
        "parents": [
            "semsort"
        ]
    },
    {
        "docstring": "",
        "name": "nontime-s",
        "parents": [
            "semsort"
        ]
    },
    {
        "docstring": "All common nouns should be nontime-s.",
        "name": "common-s",
        "parents": [
            "nontime-s"
        ]
    },
    {
        "docstring": "A sort type being used to mark if things are either pronouns or proper nouns.<br>This was created to constrain the attachement of the plural suffix 们 (men).<br>Both pronouns and proper nouns should not allow it.",
        "name": "pronproper-s",
        "parents": [
            "nontime-s"
        ]
    },
    {
        "docstring": ";; MATRIX redefinition: Adopted GTOP of modern Matrix, but also relaxed<br>;; constraint on XARG to allow for sentential subjects (with handle as XARG).<br>;; SSH 2015-04-30: SPEAKER-KEY and HEARER-KEY for honorification",
        "name": "hook",
        "parents": [
            "avm"
        ]
    },
    {
        "docstring": "",
        "name": "basic-head-opt-subj-phrase",
        "parents": []
    },
    {
        "docstring": "This was redefined from Matrix original type to allow noun heads <br>to discharge optional complements.",
        "name": "basic-head-opt-comp-phrase",
        "parents": [
            "head-valence-phrase",
            "head-only",
            "head-compositional"
        ]
    },
    {
        "docstring": "The comp-marker is technically a HEAD-marker phrase. The head is the marker's COMP.<br><br><br>;;ZZF 2016-12-06 Markers are defined to take COMPS, but the head is still the non-marker node, non-head is the marker<br>; 着了过 aspect markers & sentence final 了 & sentence final question particle",
        "name": "basic-comp-marker-phrase",
        "parents": [
            "head-valence-phrase",
            "head-compositional",
            "basic-binary-headed-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "comp-marker-phrase",
        "parents": [
            "basic-comp-marker-phrase",
            "marker-final-phrase",
            "head-initial"
        ]
    },
    {
        "docstring": "",
        "name": "marker-comp-phrase",
        "parents": [
            "basic-comp-marker-phrase",
            "marker-initial-phrase",
            "head-final"
        ]
    },
    {
        "docstring": "[FIXME] Using [QUE 1-dlist] is blocking sentences from having more than one QUE-word. This needs to change, and it would solve a lot of no-parses. We need to create a 1-plus-dlist (one-or-more things in QUE).<br><br>This rule transforms something that has an unresolved QUE value (i.e. question word) and transforms it into a sentence. This is currently not being applied to 吗 or 呢 questions because they don't use non-local QUE and they change the SF to ques on their own. <br>The HEAD-DTR is something that has QUE value of 1-dlist (i.e. it has an unresolved question word).<br><br>This currently is being used for A-NOT-A questions. A-Not-A is blocking QUE by asserting is already full, but it doesn't say that it is a question. <br><br><b>[nex]*</b>谁 吃不吃 苹果 ？<br><b>[ex]</b>谁 告诉 吃不吃 苹果 ？ <br><b>[nex]*</b>他 买 苹果<br><b>[ex]</b>谁 买 了 苹果 ？<br><b>[ex]</b>他 买 了 什么 ？<br><b>[ex]</b>谁 买 了 什么 ？<br><b>[ex]</b>他 哭 不 哭 ？<br><b>[ex]</b>他 吃 不 吃 苹果 ？<br><b>[nex]*</b>他 吃 不 吃 苹果 吗 ？",
        "name": "question-phrase",
        "parents": [
            "unary-phrase-super",
            "headed-phrase"
        ]
    },
    {
        "docstring": "push vocative noun to be prepositional phrase representing discoursal addressee<br><b>[ex]</b> 张三 ， 你 来 了 。",
        "name": "np-voc-adp-phrase",
        "parents": [
            "np-adp-phrase"
        ]
    },
    {
        "docstring": ";; SSH 2015-04-30 - utterance for dialogue constraints such as honorifications.",
        "name": "utterance-phrase",
        "parents": [
            "head-valence-phrase",
            "head-only",
            "head-compositional"
        ]
    },
    {
        "docstring": "",
        "name": "lex-item",
        "parents": []
    },
    {
        "docstring": "",
        "name": "coord-phrase",
        "parents": []
    },
    {
        "docstring": "",
        "name": "extracted-comp-phrase",
        "parents": []
    },
    {
        "docstring": "",
        "name": "extracted-subj-phrase",
        "parents": []
    },
    {
        "docstring": "",
        "name": "head-opt-comp-phrase",
        "parents": []
    },
    {
        "docstring": "",
        "name": "basic-binary-phrase",
        "parents": []
    },
    {
        "docstring": "",
        "name": "bridge-head",
        "parents": [
            "head-min"
        ]
    },
    {
        "docstring": "",
        "name": "bridge-binary-phrase",
        "parents": [
            "basic-binary-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "bridge-unary-phrase",
        "parents": [
            "basic-unary-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "super-frag-rule",
        "parents": [
            "c-cont-1"
        ]
    },
    {
        "docstring": "",
        "name": "basic-frag-rule",
        "parents": [
            "super-frag-rule"
        ]
    },
    {
        "docstring": "",
        "name": "unary-frag-rule",
        "parents": [
            "basic-frag-rule",
            "unary-phrase"
        ]
    },
    {
        "docstring": "We are requiring that NP frags not be bound. <br>The prevents things like the complements of separable verbs to go through this rule.<br><br>EMPTY -, however does limit building fragments of type 一个   红的  (0-nom-* rules)<br>EMPTY + technically means I'm the output of a pumping rule (related to putting a generic thing in).<br><br>Leaving [EMPTY -] actually prevents quite common sentences like '这 本 呢 ？' etc. <br>LMC: I have removed it and will check how bad the ambiguity gets. [FIXME] most Cls should be marked as nontime.",
        "name": "frag-np-rule",
        "parents": [
            "unary-frag-rule"
        ]
    },
    {
        "docstring": "Fragment stand alone intersective adverb or pp",
        "name": "frag-vmod-rule",
        "parents": [
            "unary-frag-rule"
        ]
    },
    {
        "docstring": "",
        "name": "frag-vmod-scop-rule",
        "parents": [
            "frag-vmod-rule"
        ]
    },
    {
        "docstring": "",
        "name": "frag-vmod-int-rule",
        "parents": [
            "frag-vmod-rule"
        ]
    },
    {
        "docstring": "1st person pronoun.<br><b>[ex]</b>我 吃 苹果<br><b>[nex]*</b>这 我 吃 苹果<br><b>[ex]</b>红 的 我 吃 苹果  [????]<br>should be modifiable",
        "name": "n_-_pr-1sg_le",
        "parents": [
            "personal-pronoun-lex",
            "speaker-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "n_-_pr-1pl-incl_le",
        "parents": [
            "personal-pronoun-lex",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "n_-_pr-1pl-excl_le",
        "parents": [
            "personal-pronoun-lex",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "n_-_pr-2sg_le",
        "parents": [
            "personal-pronoun-lex"
        ]
    },
    {
        "docstring": "",
        "name": "n_-_pr-2pl_le",
        "parents": [
            "personal-pronoun-lex"
        ]
    },
    {
        "docstring": "",
        "name": "n_-_pr-2sg-hon_le",
        "parents": [
            "personal-pronoun-lex"
        ]
    },
    {
        "docstring": "",
        "name": "n_-_pr-3sg_le",
        "parents": [
            "personal-pronoun-lex",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "n_-_pr-3pl_le",
        "parents": [
            "personal-pronoun-lex",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "Interrogative pronoun.<br>The pronoun should appear in place of a full noun phrase.<br><b>[ex]</b> 她 要 什么 ？  <br>(What does she want)",
        "name": "n_-_pr-wh_le",
        "parents": [
            "wh-pronoun"
        ]
    },
    {
        "docstring": "These are generic indefinite pronouns that should have a noun head and some quantifier binding it.<br>These can be set directly on the lexical entry (e.g. every+person, some+thing).<br><br>[FIXME] Locative pronouns should probably be changed to inherit from this, so they can have fuller semantics.<br><br>[FIXME] This is inheriting from quant-common-noun-lex which defines the sort to be common-s (i.e. non-time). So to add pronouns like 'whenever' we would need to create a new very similar type. <br><br><br>Things that are quantifiers (e.g. some, a few) should not be of this type and should, instead, form a NP by a 0-nom-d phrase.<br> <br>General pronouns. This is currently a quite broad category of pronouns that includes, for example,  大家 (everyone), 这些 (these), 有人(someone), 一点儿 (some), etc. <br><br>It also a includes a long list of the form 一+CL+CL, which would be close to 'each and everyone of'.  However, I do think this is incorrect. They should still be treated as determiners of some sort.<br><br>This allows us to set the KEYREL.PRED generic_n_rel,<br>\t\t     ALTKEYREL directly in the lexical entry.",
        "name": "n_-_indef-pr_le",
        "parents": [
            "quant-common-noun-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "a_-_bound-posthead_le",
        "parents": [
            "attr-adj-posthd-lex",
            "bound-lex-item",
            "nonque-item"
        ]
    },
    {
        "docstring": "们 can only modify nouns of SORT 'common-s' (common nouns that are <br>neither pronouns or proper nouns).<br><br>This is attempting MEN 们 to attach before everything else.<br>This includes other modifying morphemes (e.g. currently 自己)  <br>But also any determiner phrases.<br><br>LOCAL.CAT.VAL [SPR 1-list] ===> the SPR of what I modify must be non empty. <br>MODIFIED notmod ===> I have not been modified (yet), this includes CL-phrases. <br><br>[FIXME] This is stil able to apply to noun-noun compounds as if it's not modified. <br>This also needs to be blocked.<br><br>FCB: It would be nice to be able to say that the thing I modify is a WORD (i.e. not a phrase)<br><br>Note of failure: we cannot use lex-synsem to specify that the thing being modified has to be a word (i.e. not a phrase yet) because the 'basic-head-mod-phrase-simple' rule doesn't actually link local (which would include the types).",
        "name": "a_-_first-bound-posthead_le",
        "parents": [
            "a_-_bound-posthead_le"
        ]
    },
    {
        "docstring": "",
        "name": "n_-_pr-loc_le",
        "parents": [
            "loc-pronoun-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "Currently, general nouns such as dongxi (东西), shi (事).<br>these nouns can <br>这里 东西 很 贵 。  >>> parse<br>东西 很 贵 。  >>> parse<br>这 东西 很 贵 。  >>> parse<br>这 个 东西 很 贵 。   >>> parse<br>个 东西 很 贵 。  <<<<<<<<<<< this it doesn't parse (OK, should not parse in SUBJ position)<br>我 看 东西 。  >>> parse<br>我 看 这 东西 。  >>> parse<br>我 看 这 个 东西 。  >>> parse<br>我 看 个 东西 。  <<<<<<<<<<< this it doesn't parse  （should, mean 一个）<br>东西 看 我 。  >>> parse<br>这 东西 看 我 。  >>> parse<br>这 个 东西 看 我 。  >>> parse<br>个 东西 看 我 。  <<<<<<<<<<< this it doesn't parse  (OK, should not parse in SUBJ position)<br><br><br>个 苹果 (CL-NOUN) with nothing on the left  are always indefinite.<br>一 个 苹果 (NUM-CL-NOUN) with nothing on the left  are always indefinite.<br><br>有 'there is' existential must be followed by indefinite NPs. <br>for the verb this is not the case 我有这两个苹果，要不要一个？ this is likely possible.<br><br>把 construction cannot take CL-NOUN, but can NUM-CL-NOUN or DET-CL-NOUN  <br><br>一个苹果 in SUBJ position is generally not fine。 Exception would include:<br>一 个 人 会 吃 三十 苹果 。  (it has a capacity reading, it might be the case<br> that these capacity readings must be aspectless; ) 一 个 here means 'each <br>person' and not 'one person' when in subject position.<br><br>A count noun suffixed with -men 们 is interpreted as definite (for sure????)<br>他 会 去 找 孩子们。<br>count nouns suffixed with -men 们 cannot be preceded by a [Numeral + Classifier] sequence<br>even when the numeral is greater than ‘one’ (Iljic 1994, 2001, Li 1998, among others),<br><br><br>** Massifiers appear as nouns<br>杯_n_1 := n_-_le &  （container)<br>瓶_n_1 := n_-_le &    (container)<br>(e.g. 箱 by itself it doesn't appear as N)<br><br>三 杯 水     （杯 is a measure word) <br>三 杯 的 水   (杯 is a measure word) <br>* 我 买 了 杯 的 水   (杯 is a measure word) <br><br>Can we think of massifiers NOUNS that MUST take a numeral and be fully specified?  Probably not...<br><br><br>Weight / Mass (Massifiers)<br>磅\tbàng (bang)\tpound<br>吨 (噸)\tdūn (dun)\tton<br>公斤\tgōngjīn (gongjin)\tkilogram<br>斤\tjīn (jin)\t1/2 kilogram ( 1/2 kilo of apples 一斤苹果)<br>克\tkè (ke)\tgram<br>两 (兩)\tliǎng (liang)\t50 grams<br>千克\tqiānkè (qianke)\tkilogram<br>These also can use DE 的   <br>三 磅 （的） 水 <br>三 磅 （的） 肉 <br>* 我们 需要  磅 （的） 水  (the numeral is necessary)<br>* 我们 需要  磅 （的） 肉  (the numeral is necessary)<br><br><br><br><br>Time<br>辈\tbèi (bei)\tlifetime (辈子)<br>点\tdiǎn (dian)\to'clock<br>分\tfēn (fen)\tminute<br>刻\tkè (ke)\tquarter, 15 minutes<br>秒\tmiǎo (miao)\tsecond<br>年\tnián (nian)\tyear<br>日\trì (ri)\tday<br>时辰 \tshíchén (shichen)   2 hours<br>世纪 \tshìjì (shiji)\tcentury<br>岁 \tsuì (sui)\tyears old<br>天\ttiān (tian)\tday (十天时间)<br>小时 \txiǎoshí (xiaoshi)\thour<br>载 \tzǎi (zai)\tyear<br>钟 \tzhōng (zhong)\thour (found in southern Chinese)<br><br><br>岁??? THEY ARE NOT 'REAL' NOUNS / JS: 'or you can say they are nouns that do not take CLs'<br> <br>Some of these CLs can reduplicate to mean 'every X'<br>苹果个个都很好吃  （JS says everyone will accept this one）<br>？个个苹果都很好吃  (this one is controversial)<br>Normally CLs can reduplicate, while nouns can't （maybe only 人人). <br>So this is an argument to see words like 天 or 年 as CLs.<br><br>三 年 的 痛苦<br>？ 三 年 痛苦   (in a list of misfortunes this can possibly be ok)<br><br><br><br>你 要 哪 个 水果 ？<br>你 要 哪 一 个 水果 ？   looks indefinite but it's not the same meaning (Which one)<br>你 要 哪 两 个 水果 ？   looks indefinite but it's not the same meaning (Which two)<br>？ 你 要 哪 水果 ？  JS 'a little bit strange'<br><br><br>你是哪年出生的？<br>？你是哪个年出生的？   （1982, cow？）<br>？你是哪一年出生的？<br>*你是哪一个年出生的？<br><br><br>哪国人    <br>你是哪国的人？  <br>JS thinks that this MIGHT be an X-国  where X is replaced by 哪<br>哪天？ 哪月？<br><br><br>How to say 3 countries signed a treaty?  (3guo signed)<br><br><br>几月 （which month)  几个月 (how many months)<br><br><br>JS：<br>2 x common nouns: count and mass<br>kinship terms (哥哥， 老师)<br>proper names<br><br><br>这 苹果 很 贵 。 WHEN can you use the DEM without classifier?  rint and lisa wrote about 'zhei'<br>这 水 很 脏 <br>* 这 三 苹果",
        "name": "n_-_le",
        "parents": [
            "nonloc-common-noun-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "e.g. nouns like 山 (only listed as n_-_c_le countable noun) <br>These nouns are marked as (i.e. BARE -)<br>However it is still going through bare-np-phrase (I assume bare-np-phrase<br>should only accept BARE + ???). But the follow up question would be: are<br>there really BARE - nouns in Mandarin (things that can't be bare?)?<br><br>山 很 高 。<br>这 个 山 很 高 。<br>这 个 山 很 高 。",
        "name": "n_-_c_le",
        "parents": [
            "count-noun-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "Includes mass nouns such as: 水， 米饭， 饭<br>There are only 11 of such nouns... which sounds slightly ridiculous.",
        "name": "n_-_m_le",
        "parents": [
            "mass-noun-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "This is a relational locative noun (that expects a noun complement). This includes nouns such as 里, 上, etc. The complement is non-optional, effectively barring these nouns to stand on their own.<br><br><b>[nex]*</b> 她 在 里 学习 。<br><b>[ex]</b> 她 在 房间 里 学习 。",
        "name": "n-rel-loc_le",
        "parents": [
            "relational-obl-comp-loc-noun-lex"
        ]
    },
    {
        "docstring": "This is a relational locative noun (that expects a noun complement). This includes nouns such as 里面, 里边, 上面, 上边, etc. The complement is optional. This allows these nouns to stand on their own.<br><br><b>[ex]</b> 她 在 里面 学习 。<br><b>[ex]</b> 她 在 房间 里面 学习 。",
        "name": "n-opt-rel-loc_le",
        "parents": [
            "relational-opt-comp-loc-noun-lex"
        ]
    },
    {
        "docstring": "This type is for 'location' nouns that should not be modified by locative nouns (e.g. 里, 上, 外, etc.).<br>They are, in themselves, partially locative. This is marked by [SYNSEM.LOCAL.CAT.HEAD.LOC +] allows these to be pumped into locative adjuncts without the use of 在 (using a robust rule).<br><br>These include form formations such as 校外 (off-campus) and 网上 (online), which although might look that could be treated compositionally, they make use of bound morphemes (e.g. 校) for which we do not have a better treatment at the current moment. <br><br>=======================================================<br>ZZF 2015-5-3 temporary for locational nouns (not proper nouns). To be fixed when have time.<br>JS: Locative Nouns normally don't use classifiers in discourse.<br><br>loc-lex-item only introduces the following constraint:<br>[SYNSEM.LOCAL.CAT.HEAD.LOC +]<br>However this is never used elsewhere in the grammar.<br><br>Currently this type has roughly 60 nouns that are a complete mess.<br><br>This type should probably be related with the concept 方位词 [fāng wèi cí] (words of locality).<br><br>Location adjuncts are mostly PP phrases (using either or both preositions and 'postpositions'/locative nouns). <br><b>[ex]</b> 她 在 家 吃 火锅 。<br>(She is eating/eats hotpot at home.)<br><br><b>[ex]</b> 她 家 里 吃 火锅 。<br>(She eats hotpot at home.)<br><br><b>[ex]</b> 她 在 家 里 吃 火锅 。<br>(She eats hotpot at home.); JC: with ZAI is a bit better.<br><br><b>[ex]</b> 她 家 里面 吃 火锅 。<br>(This predicts that 里面 and 里 behave similarly in allowing themselves to be modified by a noun)<br><br><b>[ex]</b> 她 在 家 里面 吃 火锅 。<br>(This predicts that 里面 and 里 behave similarly in allowing themselves to be modified by a noun)<br><b>[ex]</b> 他 在 学校 里面 学习 。<br><br><br><br><br><br>Placement of these adjuncts are important. Always pre-verb (unless they <br>are complements); and always after time-adjuncts.<br><br><b>[ex]</b> 我 昨天 在 家 里 吃 火锅 。<br><b>[ex]</b> 昨天 我 在 家 里 吃 火锅 。<br>(I ate hotpot at home yesterday)<br><b>[nex]*</b> 我 在 家 昨天  里 吃 火锅 。<br><br><br>There are some special cases:<br>beside/next to (旁边 – páng biān)<br>opposite (对面 – duì miàn)<br>in the middle (中间 – zhōng jiān)<br><br>It seems  边 can NOT be seen as a postposition...<br><b>[nex]*</b> 她 每天 学校 边 见 他 的 朋友 。 <br>(this would predict that 边 cannot be used with other nouns too. <br>only with a special class 外 里 etc., so they should probably be considered as words for now)<br>学校 边  (NO!)<br><b>[ex]</b> 她 每天 学校 旁边 见 他 的 朋友 。 <br><br>There are special cases for 边 when it means 'border' (and not side).<br>So 边 must also be a word on its own (but as a normal noun)<br>池塘 边<br>河 边<br>海 边<br>路 边<br><br><b>[ex]</b> 她 河 边 看 书 。 <br>(rare but probably possible)<br><b>[ex]</b> 她 在 河 边 看 书 。 <br>(this is much better)<br><br><br> <br>Check if 面 could be used as a postposition. E.g.:<br><b>[nex]*</b> 她 房子 面 写 了 他 的 名字 。<br>(If this is possible some of the discussion below might not be too relevant) <br>桌面 (this is the SURFACE OF TABLE) -- but this is bound 桌 (this has a class of nouns with ZI ending)<br><b>[nex]*</b> 她 房子 的 表面 写 了 他 的 名字 。 <br>()<br><b>[ex]</b> 她 在 房子 的 表面 写 了 他 的 名字 。 <br><b>[ex]</b> 她 在 房子 表面 写 了 他 的 名字 。 <br><br><br><br><br><br><br>Some words, behave as both 'postpositions' and locative nouns (e.g. 里面).<br>These words can not only help build a location PP-like NP; but also be (by itself) a <br>noun and a locative adverb without any help from (other) prepositions.  <br><b>[ex]</b> 她 房子 里面 吃 火锅 。<br><b>[ex]</b> 她 在 房子 的 里面 吃 火锅 。<br><br><b>[ex]</b> 她 房子 里面 吃 火锅 。<br><???> 她 饭馆 的 里面 玩 。<br>JC: It seems this one is not perfect, with 在 is better, but in speech should be acceptable.<br>(if it's true that 里面 is LOC+, then even with a  的 phrase it should be possible to automatically pump them into locative adjuncts)<br><br>她 坐 在 外面。<br><br><br><b>[ex]</b> 她 在 里面 吃 火锅 。<br>(this is perfect, no problem)<br><br><???> 她 里面 吃 火锅 。<br>(this is she IS inside eating... so without ZAI sounds weird)<br>(This predicts that 里面 can be used a locative adjuct without the help of other)<br><b>[ex]</b> 我们 里面 吃 火锅 。<br>(the meaning is special: we will GO inside eat... )<br><br>SOME OF THESE CAN IN SPEECH (usually use 呢). It becomes very flexible.<br>你的女儿干嘛呢?<br>她外面玩呢.<br>你的女儿干什么呢?<br>我家里面吃饭呢<br>你在做什么呢?<br>我学校里面学习呢<br>[BUT ALSO] 我 学校 学习 呢 .   [!!!!!!!!!!]<br>接下来, 我们 做 什么 ?<br>接下来，我们 家 里面 谈 。<br><br><br><br><b>[ex]</b> 里面 很 大 。<br>(This predicts that 里面 can be used as subject;)<br><br><b>[ex]</b> 饭馆 的 里面 非常 漂亮 。<br>(This shows 里面 can be the head-noun of a 的 construction.)<br><br>What would make sense would be to include only these nouns here, <br>in addition to a rule to allow these to build a loc-adv <br>(similar to what happens to time-nouns).<br><br>We probably need some bound loc nouns (里)  which cannot stand on their own.<br>And some normal 里面 .<br><br><br>Tests with 的 show that these post-position like locative nouns actually <br>behave 100% as nouns (but not the bound ones). <br><b>[ex]</b> 饭馆 的 里面 很 漂亮 。<br>(The inside of the restaurant is very beautiful); 里面 is the head, and it's a NP.<br><br><b>[nex]*</b> 饭馆 的 里 很 漂亮 。<br>(should not be possible because 里 is bound -- so it can't be picked by 的 on its own)<br><br><b>[nex]*</b> 饭馆 的 在 里面 很 漂亮 。   <br>(should not be possible, because 的 has the HEAD on the right, and must be a NP -- PP is not acceptable)<br><br><br><b>[ex]</b> 里面 的 桌子 比较 好 。<br>(the table inside is [relatively] better); This should be analysed as (NP 的 NP)<br><br><b>[ex]</b> 在 里面 的 桌子 比较 好 。<br>(the table inside is [relatively] better); This should be analysed as (PP 的 NP)<br><br><br><b>[ex]</b> 商场 的 饭馆 里 很 安静 。<br>(The inside of restaurants in/of malls); ??? Is this possible? <br>If this sentence is possible this would draw a distinction between PP and NP, and suggest 里 is in fact a (complement-taking) NOUN.<br><br><br>There are probably some other special nouns that can behave as locative.<br>see also '网上' it should be a noun, but can be used directly as loc-adv.<br>原地 yuándì  (original place)<br>原处 yuánchù (original place)<br>北方 (north) VS 北面 VS 北边 (north) -- if 边 is analysed as this special N, then it's fine to behave<br><br>桌面 (this is the SURFACE OF TABLE)<br><br><br><b>[ex]</b> 网上 有 很 多 新闻 。<br><b>[ex]</b> CCTV 的 网上 有 很 多 新闻<br><b>[ex]</b> 她 在 网上 找到了 工作 。<br><b>[nex]*</b> 她 网上 找到了 工作 。  (needs ZAI because it's not imperative?)<br><b>[nex]*</b> 她 在 网上 上 找到了 工作 。<br><br><???> 你 网上 检查 吧！  (since Chinese doesn't use 去网上, this will not be possible)<br><b>[ex]</b> 你 上网 检查 吧！  (BUT 上网 is a sep-v, so this is not the same)<br><br><br>So, if these nouns can be to the right of a DE construction, they have to be a NOUN.<br>But if they can be used as a location adjuct without a 在 / 从 etc preposition, then this would make them special.<br><br><> XXX  的 网上 VP/AP.<br><> 中国 的 网上 VP/AP.<br><br><b>[nex]*</b> 她 说 的 原处 等 你 。<br>(???)<br><br><b>[ex]</b> 她 原处 等 你 。<br>(but still a bit informal. with ZAI is better.)<br><br><b>[nex]*</b> 她 （学校） 北方 等 你 。<br>(not too good. Not correct)<br><br><b>[ex]</b> 她 （学校） 北面 等 你 。<br>(with ZAI for written)<br><b>[ex]</b> 她 （学校） 北边 等 你 。<br>(with ZAI for written)<br><br><br>东/西/南/北/前/后 /左/右/上/下/里/外 are often used in conjunction with suffixes such as 边/面. while 旁 takes only 边 , 对only takes 面, and 间 goes only with 中.<br><br><br>Single character nouns of locality like the ones listed above are rarely used on their own. They normally attach to other nouns. <br>??? Are all single character LN bound? 东/西/南/北/前/后 /左/右/上/下/里/外<br><br><br><br>When 上边/面, 下边/面, 里边/面 ,外边/面and 旁边 are modified by other nouns, the character 边/面 can be omitted. <br>But never 左,右 ,对,中 + suffix, the suffix can be omitted if 的 is omitted. For example:<br><br>桌子(的)上(边/面) = 桌子上 Zhuōzi shàng on the table<br>门的后边 = 门后 Mén hòu behind the door<br>饭馆的前边 = 饭馆前 Fàn guǎn qián front of the restaurant<br>房间的里边 = 房间里 Fángjiān lǐ in the room<br>床的下边 = 床下 Chuángxià under the bed<br>沙发的旁边 = 沙发旁 Shāfā páng next to the sofa<br><br><br>Geographical (proper) names (Country /Place) such as 中国,英国,北京,伦敦etc. never work with direction words 里/里面/里边，for example:<br><br><b>[ex]</b> 她 在 上海 工作 。<br>(She works in Shanghai.)<br><b>[nex]*</b> 她 在 上海 里面 工作 。<br><br><b>[ex]</b> 英国 有 很 多 大学 。<br>(There are many universities in UK.)<br><b>[nex]*</b> 英国 里边 有 很 多 大学 。<br><br><br>How about pronouns?<br>她 里面 有 很 多 感染 。<br>在 她 里面 有 很 多 感染 。<br>她 的 里面 有 很 多 感染 。<br>在 她 的 里面 有 很 多 感染 。<br>(must use 身体, so can probably block pronouns)<br><br><br>Coercion of Locatives in Mandarin Chinese (Qiang Li, 2013)<br>Locativesin Chinese include simple and synthetic ones. shàng (上 above)、 xià (下 below) 、 qián( 前 front) 、hòu (后 after)、lǐ (里 in)、 wài ( 外 out) are simple locatives, which compose synthetic ones with suffix like biān (边  side)、 miàn ( 面 surface). This paper will take jiān (间 between) 、 shàng ( 上  above) 、  qián (前 front)、lǐ (里 in) for example<br><br><br><br>SUMMARY: <br>- 'Locative-nouns' cannot take Proper Nouns as complements.<br><b>[ex]</b> 我 在 北京 。<br><b>[nex]*</b> 我 在 北京 里 。<br><b>[ex]</b> 我 住 在 北京 。<br><b>[nex]*</b> 我 住 在 北京 里 。<br><b>[ex]</b> 我 在 北京 吃 了 火锅 。<br><b>[nex]*</b> 我 在 北京 里 了 火锅  。<br><br>- When container-measure-words are used in locative phrases they MUST use a locative noun/postposition. (We are not dealing with this for now)<br><b>[nex]*</b> 巧克力 在 盒子 。<br><b>[ex]</b> 巧克力 在 盒子 里 。<br><b>[ex]</b> 巧克力 在 盒子 里面 。<br><b>[ex]</b> 巧克力 在 盒子 上 。<br><br><br>- It seems that bare locative phrases entail 'go' while phrases with a prep (e.g. ZAI) do not.<br>Is it the case that bare locative phrases are used only in imperatives? <br><???> 她 房子 里面 吃 火锅 。<br>This sentence doesn't feel right to JC.  This is possible to be imperative. <br>The feeling is that there must be a 'go' meaning, which is similar to imperative. <br>And in non 1st person or 2nd person pronouns is very weird.<br>'BARE-LOCATIVE-NP' can be used in imperative sentences. <br>'BARE-LOCATIVE-NP' cannot describe a state.<br><br><br>- In imperative clauses, the use of 的 with possibly blocks the possibility to become adjunct.<br><b>[ex]</b> 你们 房子 里面 吃 火锅 。<br><b>[nex]*</b> 你们 饭馆 的 里面 玩 。<br><b>[ex]</b> 你 在 家 的 里面 吃 火锅 。     (it feels unnecessary but its grammatical)<br><br><b>[ex]</b> 你 房间 里面 玩儿 ！<br><b>[ex]</b> 你 去 房间 里面 玩儿 ！  (this is the meaning of the above sentence, makes it easier, but the above one have no problem)<br><b>[nex]*</b> 你 在 房间 里面 玩儿 ！  (imperative  ****CANNOT**** HAVE ZAI-prep)<br><b>[ex]</b> 你 在 房间 里面 玩儿 吧 。  (BUT with BA is ok ??  THIS is very similar to a QUESTION... so it's compatible with  )<br><b>[ex]</b> 你 在 房间 里面 玩儿 好吗 ？  (or HAO-MA is ok -- this is not an order, this is a description of a possible situation.)<br><br><b>[nex]*</b> 你 房间 的 里面 玩儿 ！      (even in imperative sentences cannot add 的)<br><b>[ex]</b> 她 在 房间 里面 玩儿 。       (a description, not an imperative sentnece)<br><b>[ex]</b> 你 在 房间 的 里面 吃 火锅 。 (it feels unnecessary but its 100% grammatical)<br><br>'的 里面' does NOT behave the same as 里面<br><br><br><br><b>[ex]</b> 她 在 房间 里 玩儿 。     (obviously ok)<br><br><b>[nex]*</b> 她 在 房间 的 里 玩儿 。     (的 里  cannot be used, because 里 is a bound noun/morpheme)<br>(should not be possible because 里 is bound -- so it can't be picked by 的 on its own)<br><br><br><br>- Under our current analysis of LN as prepositions, we are unable to parse sentences where they necessarily need to be a NOUN. E.g.:<br><b>[ex]</b> 房间 里 很 漂亮  。<br><b>[ex]</b> 房间 里 有 三 个 人 。 <br><br><b>[ex]</b> 桌子 上 很 漂亮 。<br><b>[ex]</b> 商场 的 饭馆 里 很 安静 。<br><br><br>- We're also blocking NPs like 房间 里 to serve as complements in verbs like:<br><b>[ex]</b> 我 去 房间 里 。    <br><b>[ex]</b> 我 去 房间 里面 。  (this second is somehow better, but above also can) <br><br><br><br>- Special LN:<br>beside/next to (旁边 – páng biān)<br>opposite (对面 – duì miàn)<br>in the middle (中间 – zhōng jiān)<br><b>[ex]</b> 你 旁边 玩儿 ！<br><b>[ex]</b> 你 外婆 旁边 玩儿 ！     (should be fine, but with 去 should be better)<br><b>[ex]</b> 你 外婆 的 旁边 玩儿 ！  (should be fine, but with 去 should be better)<br><b>[ex]</b> 她 在 房间 旁边 玩儿 。    <br><b>[ex]</b> 她 在 房间 的 旁边 玩儿 。<br><b>[ex]</b> 她 在 外婆 旁边 玩儿 。   <br><b>[ex]</b> 她 在 外婆 的 旁边 玩儿 。<br>DE selection seems to have a preference whether it's human or not human, but all are ok.<br><br>For imperative sentences, it's proably better to require '去'. Without 去 it's perhaps a bit too colloquial (spoken).<br><br><br><b>[ex]</b> 我 在 外地 学习 。<br><???> 我 在 外地 里 学习 。<br>Same as 双方 ... cannot take these morphemes<br><br>你 外地 学习 ！<br><br>外校 （other school)<br>你 外校 学习 。<br><br>外校 also doesn't use 里<br><br>校外",
        "name": "n_-_loc_le",
        "parents": [
            "common-noun-lex",
            "loc-lex-item",
            "nonque-item"
        ]
    },
    {
        "docstring": "Includes nouns such as 爷爷, 爸爸, 老师",
        "name": "n_-_h_le",
        "parents": [
            "nonloc-common-noun-lex",
            "nonque-item",
            "human-lex-item"
        ]
    },
    {
        "docstring": "Currently, this type includes only: 点, 分, 分钟. <br>This type should like be used for nouns that must be preceeded by a number,<br>and that cannot be used by themselves.",
        "name": "n_-_tm-bound_le",
        "parents": [
            "bound-time-noun-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "These are nouns that can be transformed into time-adverbs<br>(using np-time-adp) and used to modify predicates. <br><br><b>[ex]</b> 她 星期天 喜欢 看 书 。<br>(She likes to read on Sundays)<br><br><b>[ex]</b> 她 昨天 很 漂亮 。<br>(Yesterday she was/looked beautiful)<br><br>Includes nouns such as 八七年, 八点, 六二四年, 六日, 冬天, 古代, 周五<br>They all seem to indicate time points.<br><br>In the past, time nouns were using being blocked to serve as subjects.<br>This was deemed too restrictive, as it blocked sentences like: <br><b>[ex]</b> 一月 是 我 最 喜欢 的 月份 。<br>(January is the month I like best) <br><br>This is no longer the case. However, lifting this restriction had a big impact<br>on ambiguity (roughly doubling it). This restriction should perhaps exist <br>directly in certain verb classes, asking for their subject's SORT to be of type <br>'nontime-s'.<br><br>This noun type is also being blocked from spurious ambiguity through Noun-Noun <br>compounds. It was argued (to be confirmed) that these nouns cannot participate <br>in certain N-N compounds, so it is actually a useful type. This is being done <br>directly on the compound rules.",
        "name": "n_-_tm_le",
        "parents": [
            "time-noun-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "This seems to be used as a catch-all class for proper nouns.<br>This might have been used for entries that were not sorted.",
        "name": "n_-_pn_le",
        "parents": [
            "proper-name-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "This is used for locations, including regions and country names. But also for  some company names, such as Bank of China (中银) and other basic locations such as estuary (入海口). The last one probably should be deleted at some point.<br>According to the comments left on loc-name-lex, this was originally to<br>prevent sentences such as *我 要 去 李四 (e.g. 李四 is the name of a person), but this is actually not being blocked. <br><br>[FIXME] Check what else this might be doing.",
        "name": "n_-_l_pn_le",
        "parents": [
            "loc-name-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "This is only being used for capital (都, du). I wonder is this is really <br>necessary.",
        "name": "n_-_l_pn-bound_le",
        "parents": [
            "loc-name-lex",
            "bound-lex-item",
            "nonque-item"
        ]
    },
    {
        "docstring": "Proper names for people. e.g. 张三, 朱莉娅罗伯茨 (Julia Roberts), John, Lee.<br>This seems to include both first and last names, as well as entries for both<br>firs+last names as a single token.",
        "name": "n_-_h_pn_le",
        "parents": [
            "human-name-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "This includes a list of a few of the common surnames.",
        "name": "n_-_s_pn_le",
        "parents": [
            "surname-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "The default CLs are currently able to be pumped into time adverbials if they are 0-nom-phrases.<br>Some of them (e.g. 个 should most definitely be able to, but not all should). This would require a bit more in-depth study of classifiers in context. [FIXME]",
        "name": "c_-_le",
        "parents": [
            "classifier-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "Currently used only for ambiguous cases, where a classifier can be both time words and normal classifiers (to reduce ambiguity)<br>these classifiers are allowed to be pumped into a time adverbial.",
        "name": "tm_cl_le",
        "parents": [
            "time-classifier-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "Currently used only for ambiguous cases, where a classifier can be both time words and normal classifiers (to reduce ambiguity). <br>these classifiers are prevented from",
        "name": "ntm_cl_le",
        "parents": [
            "nontime-classifier-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "This type refers to numbers, percentages and a couple other special numeral entries (e.g. ①).<br><br>They are marked as  [CARDINAL +].",
        "name": "a_-_num_le",
        "parents": [
            "card-num-adj-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "This type is strictly for non-cardinal numerals. Currently only 二 is considered non-cardinal.<br>Non-cardinal numbers are block from participating in specifier-head constructions between numerals and classifiers.",
        "name": "a_noncard-num_le",
        "parents": [
            "noncard-num-adj-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "This type refers to adjectives that can directly modify a noun without a <br>relative clause. This is not very productive, so we are currently not doing <br>this conversion by a lexical rule.<br><b>[ex]</b>  贝贝 是 我们 的 好 朋友<br><br>If an adjective can be used both attributively and predicatively, then <br>we currently have two lexical entries. Eg. 好_j_1 (predicative) and <br>好_j_2 (attributive).",
        "name": "a_-_att_le",
        "parents": [
            "attr-adj-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "This is where most adjectives are (1700+).<br><br>This types refers to adjectives that can be used as predicates with or without degree<br>modifiers. <br><br><br>[FIXME] Need to further split adjectives into more types, e.g. adjectives that CAN'T take degree modifiers.   This generally should include some idiomatic phrases that are adjectival in their essence, and a restricted number of adjectives.<br><???> 我们  一起。   一起 is listed but it should be an ADV<br><br>[FIXME] This should be the exception to our rule that all adjs must have<br>SPR empty. This was perhaps completely unconstrained at some point in the <br>past (to raise parsing %) and now we have over-constrained it to never<br>allow this. <br>This type currently holds around 1700 entries, and I believe most might <br>incorrectly typed.<br>This type includes A LOT of types that should probably be verbs, <br>and even many entries that are SPECIFIED over (e.g. negated) which <br>should not really come here... because the negation would 'specify' the <br>ADJ enough.<br>This type fits best  idioms such as 一丝不苟 (yì sī bù gǒu) [idiom. to do <br>something strictly according to the rules or in  a meticulous manner]）<br>很一丝不苟的男士<br><br>we possibly want to create subtypes:<br>a_-_nonopt_spr or  a_-_spr<br>a_-_opt_spr<br>a_-_no_spr",
        "name": "a_-_pred_le",
        "parents": [
            "pred-adj-optspr-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "a_-_aabb_le",
        "parents": [
            "adj-aabb-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "a_-_abb_le",
        "parents": [
            "adj-abb-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "Basic type for degree specifiers.<br>E.g. 很, 非常<br>There is also a 不 that is considered a degree specifier.",
        "name": "adv_-_deg-pre_le",
        "parents": [
            "deg-int-adv-vp-pre",
            "nonque-item"
        ]
    },
    {
        "docstring": "This adverb type introduces no semantics.<br><br>[FIXME] Although part of the name ('s-pre') suggests it should only appear pre-hd for full sentences, it is also allowing pre-VP modification.<br>[FIXME] There are only a hand full of adverbs with this type, but it's not clear why they would have no semantics.",
        "name": "adv_-_s-pre-no-rel_le",
        "parents": [
            "int-adv-s-pre-no-rel",
            "nonque-item"
        ]
    },
    {
        "docstring": "Intersective pre-sentential adverb.  <br><br>[FIXME] Similar to what happens with 'adv_-_s-pre-no-rel_le', although part of the name ('s-pre') suggests it should only appear pre-hd for full sentences, it is also allowing pre-VP modification.<br>This should be constrained further to match the type name. We should perhaps have a general type of adverbs that can appear both pre-S and pre-VP (with an adequate name).",
        "name": "adv_-_s-pre-rel_le",
        "parents": [
            "int-adv-s-pre-rel",
            "nonque-item"
        ]
    },
    {
        "docstring": "Intersective pre-VP adverb.<br><br>These adverbs can only occure in pre-VP position (i.e. never before the subject).",
        "name": "adv_-_vp-pre_le",
        "parents": [
            "int-adv-vp-pre",
            "nonque-item"
        ]
    },
    {
        "docstring": "Intersective (strictly) pre-VP adverb introducing no semantic relations. <br>Currently this is only for 正在. It does change the verb ASPECT to durative.<br><br>[FIXME] I'm not 100% sure why 正在 would not introduce a relation. Should motivate and leave some notes here. <br>[FIXME] The name of this type should be changed to better reflect the very specific entry it represents. We could have something like 'aspectual adverbs'.",
        "name": "adv_-_vp-pre-norel_le",
        "parents": [
            "int-adv-vp-pre-no-rel",
            "nonque-item"
        ]
    },
    {
        "docstring": "Negator adverbs. Currently for 不 and 没.",
        "name": "adv_-_neg_le",
        "parents": [
            "neg-adv-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "adv_-_scop_le",
        "parents": [
            "scop-adv-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "adv_-_scop-prehd_le",
        "parents": [
            "scop-adv-prehd-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "Strictly pre-head sentential adverbs. Predicts that some adverbs<br>can only appear to the left of a sentence. Currently on mal-也<br>is using this, but I have a hunch this might be needed to some<br>other (non-mal) adverbs in the future.",
        "name": "scop-adv-s-prehd_le",
        "parents": [
            "scop-adv-s-prehd-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "This type is specifically for 别 (imperative) negation.",
        "name": "adv_-_imp_le",
        "parents": [
            "imperative-aux-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "adv_-_polar_basic_le",
        "parents": [
            "a-not-a-basic-adv-lex"
        ]
    },
    {
        "docstring": "",
        "name": "adv_-_polar_contracted_le",
        "parents": [
            "a-not-a-contracted-adv-lex"
        ]
    },
    {
        "docstring": "",
        "name": "adv_-_polar_ab-not-ab_le",
        "parents": [
            "ab-not-ab-adv-lex"
        ]
    },
    {
        "docstring": "",
        "name": "adv_-_polar2_basic_le",
        "parents": [
            "a-not-a-bu-basic-adv-lex"
        ]
    },
    {
        "docstring": "",
        "name": "adv_-_polar2_contracted_le",
        "parents": [
            "a-not-a-bu-contracted-adv-lex"
        ]
    },
    {
        "docstring": "",
        "name": "adv_-_polar2_ab-not-ab_le",
        "parents": [
            "ab-not-ab-bu-adv-lex"
        ]
    },
    {
        "docstring": "",
        "name": "adv_-_tq_le",
        "parents": [
            "tag-adv-lex"
        ]
    },
    {
        "docstring": "Simple intransitive verbs.",
        "name": "v_-_le",
        "parents": [
            "v_intrans-verb-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "Simple transitive verbs (i.e. taking one NP as complement).",
        "name": "v_np_le",
        "parents": [
            "v_trans-verb-lex",
            "nonque-item",
            "norm-comps1-lex"
        ]
    },
    {
        "docstring": "Simple ditransitive verbs (i.e. taking two NP as complements).<br><br>e.g.: 告诉， 卖, 教 <br><br><b>[ex]</b> 我 告诉 她 一 个 消息  。<br><b>[ex]</b> 我 卖 她 一 本 书 。<br><b>[ex]</b> 我 教 她 中文 。<br><br><br>我 告诉 LE/GUO 她 一 个 消息  。<br>我 卖 LE/GUO 她 一 本 书 。<br>我 教 LE/GUO 她 中文 。<br><br><br><br>* 我 告诉 ZHE 她 一 个 消息  。 (it has to do with the length of the verb action)<br>* 我 卖 ZHE 她 一 本 书 。    (in it's ditransitive    <br>* 我 卖 ZHE 新加坡 中文 书 。 <br># if it has an indirect object like this, the verb seems restricted to 'one time' thing, so ZHE makes no sense.<br>? 我 教 ZHE 她 中文   (feels unfinished, needs the)<br># The problem seems to be the singular object, which makes it a single action.<br># However even with <br>* 我 告诉 ZHE 她 消息  。 (it has to do with the length of the verb action)<br>* 我 卖 ZHE 她 书 。    (in it's ditransitive    <br><br><br><br>我 在 告诉 她 一 个 消息  。 <br>我 在 卖 她 一 本 书 。     <br>我 在 卖 新加坡 中文 书 。 <br>我  在 教 她 中文 <br><br><br>我 在 告诉 着 她 消息  。    if the object is not single, then it's perfectly fine <br>我 在 卖  着 她 书 。         if the object is not single, then it's perfectly fine <br>我 在 卖  着 新加坡 中文 书 。 <br>我  在 教 着 她 中文 。  this one should be ok!",
        "name": "v_np-np_le",
        "parents": [
            "ditrans-verb-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "Verbs capable of taking a sentence as complement. <br><br>E.g.: 知道, 发现, 了解,  原定, <br><br>我 知道 她想去北京.        OK<br><br>我 知道 LE 她想去北京.    （no...)<br>我 知道 GUO 她想去北京.   （NO!!!! really no)<br>我 知道 ZHE 她想去北京.   （NO!!!! really no)<br><br>我 MEI 知道 她想去北京.       （no...)<br>我 MEI 知道 GUO 她想去北京.   （NO!!!! really no)<br>我 BU 知道 她想去北京.         OK<br><br><br>我 ZAI 知道 她想去北京.       NO<br>我 ZAI 发现 她想去北京.       NO<br>我 ZAI 了解 她想去北京.       NO<br><br><br><br># This behaves differently but it requires a question!<br># This could be enough reason to be different<br># The complement should be in a form a question, but it doesn't produce a question.<br>我 问 谁不来.                OK<br>我 问 了 谁不来.             OK<br>我 问 过 谁不来.             OK<br>我 问 着 谁不来.             Ok<br>我 在 问 着 谁不来.          Ok<br><br>我 知道 了 谁不来.           OK<br>知道 + QUESTION             should be ok",
        "name": "v_s_le",
        "parents": [
            "v_s-comp-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "Intransitive psychological verbs.<br>Psychological verbs (aka 心理动词) can take a degree modifier.<br><br>The degree modifiers are currently done as specifiers.<br>e.g.: 抱歉",
        "name": "v_-_spr_le",
        "parents": [
            "v_intrans-verb-spr-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "Basic Transitive psychological verbs.<br>Psychological verbs (aka 心理动词) can take a degree modifier.<br><br>The degree modifiers are currently done as specifiers.<br>e.g.: 喜欢, 想, 爱<br><br>ZHE is ok .<br>GUO also can<br><br>LE is NOT OK!!!<br>ZAI family is NOT OK!!!<br><br>我 讨厌 苹果          OK<br>我 喜欢 苹果          OK<br>我 爱 苹果            OK<br><br>我 讨厌 LE 苹果       NO<br>我 喜欢 LE 苹果       NO<br>我 爱 LE 苹果         NO<br><br>我 MEI 讨厌 GUO/ZHE 苹果     OK (but GUO/ZHE can sometimes be ommited)   <br>我 MEI 喜欢 GUO/ZHE 苹果     OK (but GUO/ZHE can sometimes be ommited)<br>我 MEI 爱 GUO/ZHE 苹果       OK (but GUO/ZHE can sometimes be ommited)<br><br>我 BU 讨厌 苹果       OK <br>我 BU 喜欢 苹果       OK<br>我 BU 爱 苹果         OK<br><br>  <br>我 讨厌 ZHE 苹果      OK <br>我 喜欢 ZHE 苹果      OK<br>我 爱 ZHE 苹果        OK<br>  <br>GUO also can<br><br>我 ZAI 讨厌 苹果       NO<br>我 ZAI 喜欢 苹果       NO<br>我 ZAI 爱 苹果         NO<br><br>我 ZAI 讨厌 ZHE 苹果   NO<br>我 ZAI 喜欢 ZHE 苹果   NO<br>我 ZAI 爱 ZHE 苹果     NO<br><br>ZAI/ ZHENGZAI/ ZHENG all same (no).",
        "name": "v_np-spr_le",
        "parents": [
            "v_trans-verb-spr-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "Subject-control transitive psychological verbs.<br>These verbs can take VP complements, and the subject of the main verb <br>will be indexed with the subject of the VP complement.<br>Psychological verbs (aka 心理动词) can take a degree modifier.<br><br>The degree modifiers are currently done as specifiers.<br>高兴, 喜欢, 想<br><br><br><br><br>我 讨厌 吃 苹果          OK<br>我 喜欢 吃 苹果          OK<br>我 爱  吃 苹果            OK<br><br>我 讨厌 LE 吃  苹果       NO<br>我 喜欢 LE 吃 苹果        NO<br>我 爱 LE 吃  苹果         NO<br><br>我 MEI  讨厌 吃  苹果     OK   (it has experiential connotation)<br>我 讨厌 ZHE 吃  苹果       No!!<br>我 MEI  讨厌 ZHE 吃  苹果     NO<br><br>我 讨厌 GUO 吃  苹果     OK   <br>我 喜欢 GUO 吃 苹果      OK<br><br>我 MEI 讨厌 GUO 吃  苹果     OK   <br>我 MEI 喜欢 GUO 吃 苹果      OK<br><br>   <br>我 MEI 爱 GUO 吃  苹果       OK  --- NO ZHE<br><br><br>我 BU 讨厌 吃 苹果       OK <br>我 BU 喜欢 吃 苹果       OK<br>我 BU 爱 吃 苹果         OK<br><br>  <br>我 讨厌 ZHE 吃  苹果      NO    [this can't be streched? ]<br>我 喜欢 ZHE 吃 苹果       NO<br>我 爱 ZHE 吃 苹果         NO<br><br>我 ZAI 讨厌 吃 苹果       NO<br>我 ZAI 喜欢 吃 苹果       NO<br>我 ZAI 爱 吃苹果          NO<br><br>我 ZAI 讨厌 吃 ZHE 苹果   NO<br>我 ZAI 喜欢 吃 ZHE 苹果   NO<br>我 ZAI 爱 吃 ZHE 苹果     NO<br><br><br><br><br><br>我 喜欢 着 爱 国家        ？？？   [probably yes]<br>我 喜欢 着 住 在 这儿 。   YES？",
        "name": "v_vp_sequi-spr_le",
        "parents": [
            "v_sequi-spr-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "Transitive psychological verbs, that can take sentential complements.<br>Psychological verbs (aka 心理动词) can take a degree modifier.<br><br>The degree modifiers are currently done as specifiers.<br>喜欢, 讨厌, 想<br><br>There seems to be some restriction to the kind of sentneces that can be used as complement.<br><br><br><br>我 喜欢   他 来 我 家 。       OK<br>我 讨厌   他 来 我 家 。       OK<br><br>我 BU 喜欢   他 来 我 家 。    OK<br>我 BU 讨厌   他 来 我 家 。    OK<br><br>我 喜欢 LE   他 来 我 家 。    NO<br>我 讨厌 LE   他 来 我 家 。    NO<br><br>我 喜欢 ZHE   他 来 我 家 。   NO?<br>我 讨厌 ZHE   他 来 我 家 。   NO?<br><br>我 喜欢 GUO   他 来 我 家 。   OK<br>我 讨厌 GUO   他 来 我 家 。   OK<br><br><br><br>我 MEI 喜欢    他 来 我 家 。   OK  (negation of GUO)<br>我 MEI 讨厌    他 来 我 家 。   OK (negation of GUO)<br><br>我 MEI 喜欢 GUO  他 来 我 家 。   OK<br>我 MEI 讨厌 GUO  他 来 我 家 。   OK<br><br><br><br>我 ZAI 喜欢   他 来 我 家 。   NO<br>我 ZAI 讨厌   他 来 我 家 。   NO<br><br><br><br>我 喜欢 着 我们 住 在 一起 。      NO?  (there a sense that it should be possible)<br>我 喜欢 着 他 爱 国家 。           YES??? This is seen as a more permanent state   <br><br>喜欢, 讨厌<br><br><br><br>The use of ZHE in all these verbs, assumes that the information can be made into a 'stable state' that's why some sentences are slightly weird. However, if there were a better classification of verbs, then this could be enforced as a restriction on the COMP.     <br>Look at verbs like 坐在  住在 and all psychological verbs can serve as a state.",
        "name": "v_s-spr_le",
        "parents": [
            "v_s-comp-spr-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "v_pp-pre_le",
        "parents": [
            "v_pp-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "住 在北京， 停 在车厂<br><br>住LE/GUO/ZHE 在北京  -- NO<br>住 在LE/GUO/ZHE 北京  -- NO<br><br>mei 住在北京  ---- CAN!<br>bu 住在北京  ---- CANNOT! (maybe ??? the natural is 不)<br><br>放 到 zher.   (put in here) <br><br><br>送给你一本书.<br><br>送给你一本书.<br><br>我把一本书送给了他 -- OK<br>送给了她一本书.   --- OK<br><br><br>送给你 .<br><br><br>Li gen zhang 结 LE 婚<br>Li  结 婚 gen zhang -- NO<br>Li  结 婚 he zhang -- NO<br><br>many Liheci take prepositional complements before the verb<br>gen Ta shuohua<br>dui ta shuohua",
        "name": "v_pp-np_le",
        "parents": [
            "ditrans-pp-verb-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "放",
        "name": "v_np-pp_le",
        "parents": [
            "trans-loc-verb-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "v_pp-s_le",
        "parents": [
            "pp-s-comp-verb-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "v_prevpp-np_le",
        "parents": [
            "ditrans-preverbal-pp-verb-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "v_np_cs_le",
        "parents": [
            "cp-subj-verb-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "v_np-ap_le",
        "parents": [
            "np-ap-comp-verb-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "v_bap-ap_le",
        "parents": [
            "np-ap-comp-ba-verb-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "Subject Equi<br><br>E.g.: 开始, 去, 爱好<br><br>This verb type, with subj-equi, was often marked as no LZG. Should double check the restrictions. <br><br>VP <br><br><br>他 开始 吃饭 。   LE-NO， <br><br><br>他 开始 游泳 。LE-NO???， GUO-NO???,   ZHE-NO, MEI=OK, BU=OK？， ZAI=NO   [KAISHI is a special verb?]<br><br><br>他 去 买 东西 。   LE-NO,  GUO-NO,  ZHE-NO,   MEI-OK, BU-OK,   ZAI=NO<br><br><br><br>他  爱好  玩游戏 。  LE-NO,  GUO-??NO,  ZHE-NO,   MEI-OK, BU-OK,   ZAI=NO  ====   CAN USE HEN 很",
        "name": "v_vp_sequi_le",
        "parents": [
            "v_sequi-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "This type is used for object control verbs taking an NP and a VP complement. <br>(the NP complement will be the subject of the VP complement).<br><b>[ex]</b> 她 请 我 吃 午饭 。<br><br>Under the current treatment, both complements are required. <br>Currently, this requires a special entry for 请 in sentences as:<br><b>[ex]</b> 请 吃 午饭 。<br><br>Even though it has roughly the same meaning as:<br><b>[ex]</b> 我 请 你 吃 午饭 。<br><br>It is possible that in the future we might want to get a unified analysis for these<br>two sentences, but for now 请 is also available as an adverb-like 'expression'.<br><br><br><br>(the NP complement will be the subject of the 2nd VP complement).<br>兼语句 = Pivotal sentences (Chinese name)<br><br>老师 让 我 洗 脸 。   LE-NO??  GUO-NO??   ZHE-NO   ZAI-YES   MEI-OK  BU-OK  (NO HEN) - to ask VS to allow;  -- it's not a hard NO maybe it's acceptable.<br><br>妈妈 叫 我 洗澡 。   LE-OK??  GUO-OK   ZHE-NO   ZAI-OK   MEI-OK  BU-OK<br><br><br>她 请 我 吃 午饭 。  LE-OK  GUO-OK   ZHE-NO   ZAI-OK   MEI-OK  BU-OK<br><br><br>允许 yǔn xǔ<br>v. permit, allow",
        "name": "v_np-vp_oequi_le",
        "parents": [
            "v_np-vp_oequi-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "sequi = subject equi<br><br>CLASH WITH serial verb constructions  // resultatives???<br><br>This class of verbs probably enters in competition with some serial verb constructions, which in principle block aspect. So the idea would be that these allow some aspect... ???<br><br><br>我 坐 公共汽车 买 游戏机 。<br>我 花 钱 买 游戏机 。<br>我 去 商店 买 游戏机 。<br><br><br>我 BU 坐 公共汽车 买 游戏机 。    OK<br>我 BU 花 钱 买 游戏机 。          OK<br>我 BU 去 商店 买 游戏机 。        OK<br><br>我 坐 LE 公共汽车 买 游戏机 。    ??NO<br>我 花 LE 钱 买 游戏机 。          OK   [ABSOLUTELY NO PROBLEM]<br>我 去 LE 商店 买 游戏机 。        ??NO<br><br><br>##### THESE ones compete with another grammatical structure 'while sitting on the bus played games' this has a manner<br>我 坐 ZHE 公共汽车 去 买 游戏机 。      OK This also has a goal reading<br>我 花 ZHE 钱 来 这儿  。                NO????<br>我 去 ZHE 商店 买 游戏机 。             NO ???   <br>***** 我 花 ZHE 钱 爱 他 。             [this is not ok because HUA has an <br>\t\t\t\t\t      iterative reading, not stative]<br>***** 我 花 ZHE 钱 住 在 他 的 旁边 。   <br><br><br>我 坐 GUO 公共汽车 买 游戏机 。     OK<br>我 花 GUO 钱 买 游戏机  。          OK<br>我 去 GUO 商店 买 游戏机 。         OK<br><br><br>我 MEI 坐 公共汽车 买 游戏机 。     OK<br>我 MEI 花 钱 买 游戏机 。           OK<br>我 MEI 去 商店 买 游戏机 。         OK<br><br><br>我 ZAI 坐 公共汽车 买 游戏 。      OK<br>我 ZAI 花 钱 买 游戏 。            OK<br>我 ZAI 去 商店 买 游戏 。          ?NO<br><br><br>[我 ZHENG+ZAI 去 商店 ] - OK  <br>[我 ZAI 去 商店 ] -NO      ZAI+QU is very special<br>[我 ZAI 去  买 东西 ]-NO   ZAI+QU is very special<br>It has some idiomatic phares where it's ok.  <br>我 ZAI 去  ... 的 路上 。   but this is VERBAL ZAI<br> <br><br>我 ZAI 坐 ZHE 公共汽车 买 游戏 。    OK<br>我 ZAI 花 ZHE 钱 买 游戏 。          ??NO<br>我 ZAI 去 ZHE 商店 买 游戏 。        ?? NO   <br><br>听你",
        "name": "v_np-vp_sequi_le",
        "parents": [
            "v_np-vp_sequi-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "A verb that takes two complements (one NP and one S). The sentencial complement has a different subject (omitted or not). So there is no semantic link between the first (NP) complement and the second (S).<br><b>[ex]</b> 我 问 她 妈妈 去 不 去 。<br><br>This should not be used for similar sentences such as '我 问 她 去 不 去 。' if the meaning of the sentence is intended to use 她 as both the COMP of 问 and the SUBJ of 去. This would use v_np-vp_oequi_le instead.",
        "name": "v_np-s_le",
        "parents": [
            "v_np-s_lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "[FIXME] This is for 有 and 没  (but 没 was removed) for the existential",
        "name": "v_np_you_le",
        "parents": [
            "v_exist-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "This type is for auxiliary verbs. In our current implementation, auxiliary <br>verbs constrast with v_vp_sequi_le in that they are subject raising (instead <br>of subject control). Aux verbs do not have a subject in the semantics, <br>taking a single VP complement. They are mostly related to Tense and certain<br>aspects of Modality.<br><br>Our current test is based on their inability to be used as a full VP. For example: <br><br><b>[ex]</b> 她 要 摔倒 了 。<br>(She is going to fall.)<br><b>[ex]</b> 谁 要 摔倒 了 ？<br>(Who is going to fall?)<br><b>[nex]*</b> 她 要  。<br>(* She is.)<br><br>This last sentence is not an adequate answer to the question above.<br>While the sentence '她 要  。' is grammatical, it's not an adequate response to the<br>question above because 要 requires the VP comp, and does not take a subject itself.<br><br>Many of these verbs have two entries (both aux and non-aux).  <br>For example, when 要 means 'to want', then it should not be considered an auxiliary.<br><b>[ex]</b> 谁 要 学习 汉语 ？<br>(Who wants to learn Mandarin Chinese?)<br><b>[nex]*</b> 我 要  。<br>(I want.)<br><br>FCB has pointed out that it would be nice to extend these tests. We could try to <br>see how these aux verbs behave in other syntactic structures, such as",
        "name": "v_vp_aux_le",
        "parents": [
            "v_aux-aux-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "This type requires the complement to always be present. And used [COP +] to block certain interactions (e.g. interactions with resultatives).  This is being used for 是.<br><br>[FIXME] It is not clear if the non-optional requirement of COMP is actually true. E.g. 我不是老师。他是！ (???)",
        "name": "v_np_cop_le",
        "parents": [
            "cop-verb-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "v_shide-adp_le",
        "parents": [
            "shi-mod-int-dep-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "v_shide-adv-scop_le",
        "parents": [
            "shi-mod-scop-dep-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "v_shide-aux_le",
        "parents": [
            "shi-aux-dep-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "v_shide-sbj_le",
        "parents": [
            "shi-subj-dep-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "v_inv-shide_le",
        "parents": [
            "cop-verb-cpsubj-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "v_np_light_le",
        "parents": [
            "v_light-verb-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "v_np-vp_light_le",
        "parents": [
            "v_np-vp_light-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "Only for 下, probably for 下雨. <br>Not sure what is special with it.<br>[FIXME] check",
        "name": "v_weather_le",
        "parents": [
            "v_weather_type_lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "conj_-_le",
        "parents": [
            "conj-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "conj_-_e_le",
        "parents": [
            "conj-e-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "conj_-_x_le",
        "parents": [
            "conj-x-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "conj_-_sub-pre_le",
        "parents": [
            "subord-conj-pre-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "conj_-_sub-prepreh_le",
        "parents": [
            "subord-conj-pre-preh-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "conj_-_sub-post_le",
        "parents": [
            "subord-conj-post-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "Interrogative determiner (requesting the use of classifiers).<br><b>[ex]</b> 她 要 哪 本 书 ？",
        "name": "d_-_wh_le",
        "parents": [
            "wh-determiner-lex"
        ]
    },
    {
        "docstring": "Interrogative determiner (disallowing the use of classifiers).<br><b>[ex]</b> 她 要 什么 东西 ？<br><b>[nex]*</b> 她 要 什么 个 东西 ？",
        "name": "d_-_wh-nocls_le",
        "parents": [
            "wh-determiner-nocls-lex"
        ]
    },
    {
        "docstring": "",
        "name": "d_-_le",
        "parents": [
            "determiner-cls-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "Determiners that don't allow the user of classifiers.",
        "name": "d_-_nocls_le",
        "parents": [
            "determiner-nocls-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "d_-_d-prox_le",
        "parents": [
            "prox_demons-determiner-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "d_-_d-dist_le",
        "parents": [
            "dist_demons-determiner-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "d_-_d-prox-nocls_le",
        "parents": [
            "prox_demons-det-nocls-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "d_-_d-dist-nocls_le",
        "parents": [
            "dist_demons-det-nocls-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "d_-_prt_le",
        "parents": [
            "partitive-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "p_-_n-mod_le",
        "parents": [
            "prep-n-mod-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "p_-_v-mod_le",
        "parents": [
            "prep-v-mod-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "p_-_nomod_le",
        "parents": [
            "prep-no-mod-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "p_-_v_le",
        "parents": [
            "prep-vmod-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "p_-_v-pre_le",
        "parents": [
            "prep-vmod-pre-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "p_loc_zai_le",
        "parents": [
            "basic-loc-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "This is a type seems to be for locative postpositions like 里 边 面.<br>This should also include more complex postpositions like 里边儿.<br>However, 里边儿 can also be used as full-locative noun.",
        "name": "p_loc_post_le",
        "parents": [
            "basic-postp-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "Associative 的 (DE) combining two noun phrases.<br><b>[ex]</b>张三 的 朋友 哭 了<br><b>[ex]</b>我 的 朋友 哭 了<br><b>[ex]</b>他 知道 学校 的 地址<br><b>[ex]</b>他 解决 了 产品 的 质量 的 问题<br>When a noun phrase has >1 DE phrase modifiers, we get bracketing ambiguity, <br>e.g. [产品 的 [质量 的 问题]] or [[产品 的 质量] 的 问题]. The entry allows<br>both interpretations, leaving the ambiguity for statistical ranking model to determine later.",
        "name": "x_-_assoc-de-n_le",
        "parents": [
            "de-assoc-n-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "Associative 的 (DE) linking a clause to a head noun.  <br>The head noun is neither subject nor the complement of a verb in the clause.<br><b>[ex]</b>他 写 书 的 地方<br><b>[ex]</b>我 喜欢 他 写 书 的 地方",
        "name": "x_-_assoc-de-v_le",
        "parents": [
            "de-assoc-v-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "This is the type for Complementizer 的 (DE), used for relative clauses.<br>It introduces no semantics, and links extracted arguments (SUBJ or COMPS).<br><b>[ex]</b>游泳 的 人<br><b>[ex]</b>他 喜欢 的 人<br><b>[ex]</b>吃 的 人<br><b>[nex]*</b>他 的 猫",
        "name": "x_-_rel-de_le",
        "parents": [
            "de-comp-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "x_-_altobj-de_le",
        "parents": [
            "de-4shi-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "x_bei_le",
        "parents": [
            "v_bei_type_lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "x_ba_le",
        "parents": [
            "v_ba_type_lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "x_suo_le",
        "parents": [
            "v_suo_lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "x_-_suf-adv_le",
        "parents": [
            "adv_suffix_form_lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "x_-_pre-adv_le",
        "parents": [
            "adv_prefix_form_lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "Interjections/exclamatives (including some expressions) that can occur both <br>pre and post-sentence.",
        "name": "adv_-_ij_le",
        "parents": [
            "interjection-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "Sentence-initial interjections/exclamatives (including some expressions).<br><br><br>以后 请 来 办公室 。",
        "name": "adv_-_ij-prehd_le",
        "parents": [
            "interjection-prehd-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "Sentence-final interjections/exclamatives (including some expressions).",
        "name": "adv_-_ij-posthd_le",
        "parents": [
            "interjection-posthd-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "x_-_qpart_le",
        "parents": [
            "qpart-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "x_-_fqpart_le",
        "parents": [
            "frag-qpart-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "adv_-_scop_q_le",
        "parents": [
            "scop-adv-lex",
            "question-item"
        ]
    },
    {
        "docstring": "",
        "name": "adv_-_scop-post_q_le",
        "parents": [
            "scop-adv-posthd-lex",
            "question-item"
        ]
    },
    {
        "docstring": "",
        "name": "n_-_tm_q_le",
        "parents": [
            "time-noun-lex",
            "question-item"
        ]
    },
    {
        "docstring": "Currently, simply inheriting from pred-adj-lex predicts that sentences like <br>the one below should be possible. I doubt that it would be acceptable.<br>[FIXME][JC]<br><??>你 的 大学 生活 很 怎么样 ？<br><br>Even though 不怎么样的 and 很怎么样的 seem to be available as modifiers, <br>it seems that it can't be used to form a question.<br><br>For iTELL, we also need different predictions for base AP (without degree<br>modifiers) and special words like 怎么样 (which is almost always, if not <br>strictly, used in bare form).<br><br>Currently, root_strict_adj is saying that ADJ predicates must be SPR <>.<br>For the time being, we can add this particular restriction directly here.<br>This would also block sentences like:<br><??>你 的 大学 生活 很 怎么样 ？",
        "name": "a_-_pred_q_le",
        "parents": [
            "pred-adj-nospr-lex",
            "question-item"
        ]
    },
    {
        "docstring": "This is a test to stop thinking of 几 as a determiner, and let it work as a number.",
        "name": "num_q_le",
        "parents": [
            "num-adj-lex",
            "question-item"
        ]
    },
    {
        "docstring": "",
        "name": "adv_-_vp-pre_q_le",
        "parents": [
            "int-adv-vp-pre",
            "question-item"
        ]
    },
    {
        "docstring": "",
        "name": "basic-sign",
        "parents": [
            "sign-min"
        ]
    },
    {
        "docstring": "",
        "name": "sign",
        "parents": [
            "basic-sign"
        ]
    },
    {
        "docstring": "",
        "name": "phrase-or-lexrule",
        "parents": [
            "sign"
        ]
    },
    {
        "docstring": "",
        "name": "word-or-lexrule-min",
        "parents": [
            "sign-min"
        ]
    },
    {
        "docstring": "",
        "name": "word-or-lexrule",
        "parents": [
            "word-or-lexrule-min",
            "sign"
        ]
    },
    {
        "docstring": "",
        "name": "nocoord",
        "parents": [
            "sign"
        ]
    },
    {
        "docstring": "",
        "name": "alts-min",
        "parents": [
            "avm"
        ]
    },
    {
        "docstring": "",
        "name": "alts",
        "parents": [
            "alts-min"
        ]
    },
    {
        "docstring": "",
        "name": "no-alts",
        "parents": [
            "alts-min"
        ]
    },
    {
        "docstring": "",
        "name": "word",
        "parents": [
            "word-or-lexrule",
            "nocoord"
        ]
    },
    {
        "docstring": "",
        "name": "lex-item",
        "parents": [
            "word-or-lexrule",
            "nocoord"
        ]
    },
    {
        "docstring": "",
        "name": "phrase",
        "parents": [
            "phrase-or-lexrule"
        ]
    },
    {
        "docstring": "",
        "name": "non-affix-bearing",
        "parents": [
            "word-or-lexrule"
        ]
    },
    {
        "docstring": "",
        "name": "rule",
        "parents": [
            "sign"
        ]
    },
    {
        "docstring": "",
        "name": "tree-node-label",
        "parents": [
            "*top*"
        ]
    },
    {
        "docstring": "",
        "name": "label",
        "parents": [
            "sign"
        ]
    },
    {
        "docstring": "",
        "name": "meta",
        "parents": [
            "sign"
        ]
    },
    {
        "docstring": "",
        "name": "synsem-min",
        "parents": [
            "avm"
        ]
    },
    {
        "docstring": "",
        "name": "lex-or-phrase-synsem",
        "parents": [
            "synsem-min"
        ]
    },
    {
        "docstring": "",
        "name": "synsem",
        "parents": [
            "synsem-min"
        ]
    },
    {
        "docstring": "",
        "name": "expressed-synsem",
        "parents": [
            "synsem"
        ]
    },
    {
        "docstring": "",
        "name": "canonical-synsem",
        "parents": [
            "expressed-synsem"
        ]
    },
    {
        "docstring": "",
        "name": "lex-synsem",
        "parents": [
            "canonical-synsem",
            "lex-or-phrase-synsem"
        ]
    },
    {
        "docstring": "",
        "name": "phr-synsem-min",
        "parents": [
            "canonical-synsem",
            "lex-or-phrase-synsem"
        ]
    },
    {
        "docstring": "",
        "name": "phr-synsem",
        "parents": [
            "phr-synsem-min"
        ]
    },
    {
        "docstring": "",
        "name": "non-canonical",
        "parents": [
            "synsem"
        ]
    },
    {
        "docstring": "",
        "name": "expressed-non-canonical",
        "parents": [
            "non-canonical",
            "expressed-synsem"
        ]
    },
    {
        "docstring": "",
        "name": "gap",
        "parents": [
            "expressed-non-canonical"
        ]
    },
    {
        "docstring": "",
        "name": "unexpressed",
        "parents": [
            "synsem-min"
        ]
    },
    {
        "docstring": "",
        "name": "unexpressed-reg",
        "parents": [
            "unexpressed",
            "non-canonical"
        ]
    },
    {
        "docstring": "",
        "name": "anti-synsem",
        "parents": [
            "unexpressed"
        ]
    },
    {
        "docstring": "",
        "name": "mod-local",
        "parents": [
            "avm"
        ]
    },
    {
        "docstring": "<history><br>2022.07.31 (LMC): I changed COORD from bool to luk; this allows a more fine-tuned control of what can be coordinated, which is especially useful in the design of mal-rules (preventing things that should, in principle, be available for coordination to undergo it -- e.g., NPs pumped as VPs, etc.); In principle this should not change much of anything else; <br></history>",
        "name": "local-min",
        "parents": [
            "mod-local"
        ]
    },
    {
        "docstring": "",
        "name": "local",
        "parents": [
            "local-min"
        ]
    },
    {
        "docstring": "",
        "name": "scopal-mod",
        "parents": [
            "local"
        ]
    },
    {
        "docstring": "",
        "name": "intersective-mod",
        "parents": [
            "local"
        ]
    },
    {
        "docstring": "",
        "name": "non-local-min",
        "parents": [
            "avm"
        ]
    },
    {
        "docstring": "",
        "name": "non-local-none",
        "parents": [
            "non-local"
        ]
    },
    {
        "docstring": "",
        "name": "cat-min",
        "parents": [
            "avm"
        ]
    },
    {
        "docstring": "",
        "name": "cat",
        "parents": [
            "cat-min"
        ]
    },
    {
        "docstring": "",
        "name": "head-min",
        "parents": [
            "avm"
        ]
    },
    {
        "docstring": "",
        "name": "head",
        "parents": [
            "head-min"
        ]
    },
    {
        "docstring": "",
        "name": "conj",
        "parents": [
            "+mo",
            "+do",
            "+co",
            "+po",
            "+ro",
            "+jo",
            "+vo",
            "+no"
        ]
    },
    {
        "docstring": "",
        "name": "num",
        "parents": [
            "+mo",
            "+dm",
            "+cm",
            "+pm",
            "+rm",
            "+jm",
            "+vm",
            "+nm"
        ]
    },
    {
        "docstring": "",
        "name": "det",
        "parents": [
            "+do",
            "+dm",
            "+cd",
            "+pd",
            "+rd",
            "+jd",
            "+vd",
            "+nd"
        ]
    },
    {
        "docstring": "",
        "name": "comp",
        "parents": [
            "+co",
            "+cm",
            "+cd",
            "+pc",
            "+rc",
            "+jc",
            "+vc",
            "+nc"
        ]
    },
    {
        "docstring": "",
        "name": "adp",
        "parents": [
            "+po",
            "+pm",
            "+pd",
            "+pc",
            "+rp",
            "+jp",
            "+vp",
            "+np"
        ]
    },
    {
        "docstring": "",
        "name": "adv",
        "parents": [
            "+ro",
            "+rm",
            "+rd",
            "+rc",
            "+rp",
            "+jr",
            "+vr",
            "+nr"
        ]
    },
    {
        "docstring": "",
        "name": "adj",
        "parents": [
            "+jo",
            "+jm",
            "+jd",
            "+jc",
            "+jp",
            "+jr",
            "+vj",
            "+nj"
        ]
    },
    {
        "docstring": "",
        "name": "verb",
        "parents": [
            "+vo",
            "+vm",
            "+vd",
            "+vc",
            "+vp",
            "+vr",
            "+vj",
            "+nv"
        ]
    },
    {
        "docstring": "",
        "name": "noun",
        "parents": [
            "+no",
            "+nm",
            "+nd",
            "+nc",
            "+np",
            "+nr",
            "+nj",
            "+nv"
        ]
    },
    {
        "docstring": "",
        "name": "valence-min",
        "parents": [
            "avm"
        ]
    },
    {
        "docstring": "",
        "name": "valence",
        "parents": [
            "valence-min"
        ]
    },
    {
        "docstring": "",
        "name": "keys_min",
        "parents": [
            "avm"
        ]
    },
    {
        "docstring": "",
        "name": "keys",
        "parents": [
            "keys_min"
        ]
    },
    {
        "docstring": "",
        "name": "semsort",
        "parents": [
            "sort"
        ]
    },
    {
        "docstring": "",
        "name": "mrs-min",
        "parents": [
            "avm"
        ]
    },
    {
        "docstring": "",
        "name": "mrs",
        "parents": [
            "mrs-min"
        ]
    },
    {
        "docstring": "",
        "name": "psoa",
        "parents": [
            "mrs"
        ]
    },
    {
        "docstring": "",
        "name": "nom-obj",
        "parents": [
            "mrs"
        ]
    },
    {
        "docstring": "",
        "name": "lexkeys",
        "parents": [
            "avm"
        ]
    },
    {
        "docstring": "",
        "name": "ctxt-min",
        "parents": [
            "avm"
        ]
    },
    {
        "docstring": "",
        "name": "ctxt",
        "parents": [
            "ctxt-min"
        ]
    },
    {
        "docstring": "",
        "name": "qeq",
        "parents": [
            "avm"
        ]
    },
    {
        "docstring": "",
        "name": "semarg",
        "parents": [
            "avm"
        ]
    },
    {
        "docstring": "",
        "name": "handle",
        "parents": [
            "semarg"
        ]
    },
    {
        "docstring": "",
        "name": "individual",
        "parents": [
            "semarg"
        ]
    },
    {
        "docstring": "",
        "name": "index",
        "parents": [
            "individual"
        ]
    },
    {
        "docstring": "",
        "name": "cog-st",
        "parents": [
            "avm"
        ]
    },
    {
        "docstring": "",
        "name": "activ-or-less",
        "parents": [
            "cog-st"
        ]
    },
    {
        "docstring": "",
        "name": "uniq-or-more",
        "parents": [
            "cog-st"
        ]
    },
    {
        "docstring": "",
        "name": "uniq+fam+act",
        "parents": [
            "activ-or-less",
            "uniq-or-more"
        ]
    },
    {
        "docstring": "",
        "name": "fam-or-less",
        "parents": [
            "activ-or-less"
        ]
    },
    {
        "docstring": "",
        "name": "fam-or-more",
        "parents": [
            "uniq-or-more"
        ]
    },
    {
        "docstring": "",
        "name": "activ+fam",
        "parents": [
            "uniq+fam+act",
            "fam-or-more"
        ]
    },
    {
        "docstring": "",
        "name": "uniq+fam",
        "parents": [
            "uniq+fam+act",
            "fam-or-less"
        ]
    },
    {
        "docstring": "",
        "name": "uniq-or-less",
        "parents": [
            "fam-or-less"
        ]
    },
    {
        "docstring": "",
        "name": "activ-or-more",
        "parents": [
            "fam-or-more"
        ]
    },
    {
        "docstring": "",
        "name": "type-id",
        "parents": [
            "uniq-or-less"
        ]
    },
    {
        "docstring": "",
        "name": "uniq-id",
        "parents": [
            "uniq-or-less",
            "uniq+fam"
        ]
    },
    {
        "docstring": "",
        "name": "familiar",
        "parents": [
            "uniq+fam",
            "activ+fam"
        ]
    },
    {
        "docstring": "",
        "name": "activated",
        "parents": [
            "activ+fam",
            "activ-or-more"
        ]
    },
    {
        "docstring": "",
        "name": "in-foc",
        "parents": [
            "activ-or-more"
        ]
    },
    {
        "docstring": "",
        "name": "event-or-ref-index",
        "parents": [
            "individual"
        ]
    },
    {
        "docstring": "",
        "name": "expl-ind",
        "parents": [
            "index"
        ]
    },
    {
        "docstring": "",
        "name": "ref-ind",
        "parents": [
            "index",
            "event-or-ref-index"
        ]
    },
    {
        "docstring": "",
        "name": "png",
        "parents": [
            "avm"
        ]
    },
    {
        "docstring": "",
        "name": "tense",
        "parents": [
            "sort"
        ]
    },
    {
        "docstring": "",
        "name": "aspect",
        "parents": [
            "sort"
        ]
    },
    {
        "docstring": "",
        "name": "mood",
        "parents": [
            "sort"
        ]
    },
    {
        "docstring": "",
        "name": "tam",
        "parents": [
            "avm"
        ]
    },
    {
        "docstring": "",
        "name": "iforce",
        "parents": [
            "avm"
        ]
    },
    {
        "docstring": "",
        "name": "prop-or-ques",
        "parents": [
            "iforce"
        ]
    },
    {
        "docstring": "",
        "name": "prop-or-comm",
        "parents": [
            "iforce"
        ]
    },
    {
        "docstring": "",
        "name": "prop",
        "parents": [
            "prop-or-ques",
            "prop-or-comm"
        ]
    },
    {
        "docstring": "",
        "name": "ques",
        "parents": [
            "prop-or-ques"
        ]
    },
    {
        "docstring": "",
        "name": "comm",
        "parents": [
            "prop-or-comm"
        ]
    },
    {
        "docstring": "",
        "name": "event",
        "parents": [
            "event-or-ref-index"
        ]
    },
    {
        "docstring": "",
        "name": "coord-index",
        "parents": [
            "event-or-ref-index"
        ]
    },
    {
        "docstring": "",
        "name": "coord-event",
        "parents": [
            "coord-index",
            "event"
        ]
    },
    {
        "docstring": "",
        "name": "coord-ref-ind",
        "parents": [
            "coord-index",
            "ref-ind"
        ]
    },
    {
        "docstring": "",
        "name": "relation",
        "parents": [
            "avm"
        ]
    },
    {
        "docstring": "",
        "name": "arg0-relation",
        "parents": [
            "relation"
        ]
    },
    {
        "docstring": "",
        "name": "arg1-relation",
        "parents": [
            "arg0-relation"
        ]
    },
    {
        "docstring": "",
        "name": "arg12-relation",
        "parents": [
            "arg1-relation"
        ]
    },
    {
        "docstring": "",
        "name": "arg123-relation",
        "parents": [
            "arg12-relation"
        ]
    },
    {
        "docstring": "",
        "name": "arg1234-relation",
        "parents": [
            "arg123-relation"
        ]
    },
    {
        "docstring": "",
        "name": "event-relation",
        "parents": [
            "arg0-relation"
        ]
    },
    {
        "docstring": "",
        "name": "arg1-ev-relation",
        "parents": [
            "arg1-relation",
            "event-relation"
        ]
    },
    {
        "docstring": "",
        "name": "arg12-ev-relation",
        "parents": [
            "arg1-ev-relation",
            "arg12-relation"
        ]
    },
    {
        "docstring": "",
        "name": "arg123-ev-relation",
        "parents": [
            "arg12-ev-relation",
            "arg123-relation"
        ]
    },
    {
        "docstring": "",
        "name": "arg1234-ev-relation",
        "parents": [
            "arg123-ev-relation",
            "arg1234-relation"
        ]
    },
    {
        "docstring": "",
        "name": "noun-relation",
        "parents": [
            "arg0-relation"
        ]
    },
    {
        "docstring": "",
        "name": "noun-arg1-relation",
        "parents": [
            "noun-relation",
            "arg1-relation"
        ]
    },
    {
        "docstring": "",
        "name": "subord-or-coord-relation",
        "parents": [
            "relation"
        ]
    },
    {
        "docstring": "",
        "name": "coordination-relation",
        "parents": [
            "subord-or-coord-relation",
            "arg0-relation"
        ]
    },
    {
        "docstring": "",
        "name": "subord-relation",
        "parents": [
            "subord-or-coord-relation"
        ]
    },
    {
        "docstring": "",
        "name": "quant-relation",
        "parents": [
            "arg0-relation"
        ]
    },
    {
        "docstring": "",
        "name": "named_rel",
        "parents": [
            "norm_rel"
        ]
    },
    {
        "docstring": "",
        "name": "icons",
        "parents": [
            "avm"
        ]
    },
    {
        "docstring": "",
        "name": "info-str",
        "parents": [
            "icons"
        ]
    },
    {
        "docstring": "",
        "name": "non-topic",
        "parents": [
            "info-str"
        ]
    },
    {
        "docstring": "",
        "name": "contrast-or-focus",
        "parents": [
            "info-str"
        ]
    },
    {
        "docstring": "",
        "name": "focus-or-topic",
        "parents": [
            "info-str"
        ]
    },
    {
        "docstring": "",
        "name": "contrast-or-topic",
        "parents": [
            "info-str"
        ]
    },
    {
        "docstring": "",
        "name": "non-focus",
        "parents": [
            "info-str"
        ]
    },
    {
        "docstring": "",
        "name": "focus",
        "parents": [
            "non-topic",
            "contrast-or-focus",
            "focus-or-topic"
        ]
    },
    {
        "docstring": "",
        "name": "contrast",
        "parents": [
            "focus-or-topic",
            "contrast-or-focus",
            "contrast-or-topic"
        ]
    },
    {
        "docstring": "",
        "name": "topic",
        "parents": [
            "non-focus",
            "focus-or-topic",
            "contrast-or-topic"
        ]
    },
    {
        "docstring": "",
        "name": "bg",
        "parents": [
            "non-topic",
            "non-focus"
        ]
    },
    {
        "docstring": "",
        "name": "semantic-focus",
        "parents": [
            "focus"
        ]
    },
    {
        "docstring": "",
        "name": "contrast-focus",
        "parents": [
            "contrast",
            "focus"
        ]
    },
    {
        "docstring": "",
        "name": "contrast-topic",
        "parents": [
            "contrast",
            "topic"
        ]
    },
    {
        "docstring": "",
        "name": "aboutness-topic",
        "parents": [
            "topic"
        ]
    },
    {
        "docstring": "",
        "name": "luk",
        "parents": [
            "sort"
        ]
    },
    {
        "docstring": "",
        "name": "na-or-+",
        "parents": [
            "luk"
        ]
    },
    {
        "docstring": "",
        "name": "na-or--",
        "parents": [
            "luk"
        ]
    },
    {
        "docstring": "",
        "name": "+-or--",
        "parents": [
            "luk"
        ]
    },
    {
        "docstring": "",
        "name": "bool",
        "parents": [
            "luk"
        ]
    },
    {
        "docstring": "",
        "name": "na",
        "parents": [
            "na-or-+",
            "na-or--"
        ]
    },
    {
        "docstring": "",
        "name": "+",
        "parents": [
            "bool",
            "na-or-+",
            "+-or--"
        ]
    },
    {
        "docstring": "",
        "name": "-",
        "parents": [
            "bool",
            "na-or--",
            "+-or--"
        ]
    },
    {
        "docstring": "",
        "name": "xmod",
        "parents": [
            "sort"
        ]
    },
    {
        "docstring": "",
        "name": "notmod-or-rmod",
        "parents": [
            "xmod"
        ]
    },
    {
        "docstring": "",
        "name": "notmod-or-lmod",
        "parents": [
            "xmod"
        ]
    },
    {
        "docstring": "",
        "name": "notmod",
        "parents": [
            "notmod-or-rmod",
            "notmod-or-lmod"
        ]
    },
    {
        "docstring": "",
        "name": "hasmod",
        "parents": [
            "xmod"
        ]
    },
    {
        "docstring": "",
        "name": "lmod",
        "parents": [
            "hasmod",
            "notmod-or-lmod"
        ]
    },
    {
        "docstring": "",
        "name": "rmod",
        "parents": [
            "hasmod",
            "notmod-or-rmod"
        ]
    },
    {
        "docstring": "",
        "name": "sort",
        "parents": [
            "*top*"
        ]
    },
    {
        "docstring": "",
        "name": "predsort",
        "parents": [
            "sort"
        ]
    },
    {
        "docstring": "",
        "name": "atom",
        "parents": [
            "predsort"
        ]
    },
    {
        "docstring": "",
        "name": "no-pred",
        "parents": [
            "predsort"
        ]
    },
    {
        "docstring": "",
        "name": "avm",
        "parents": [
            "*top*"
        ]
    },
    {
        "docstring": "",
        "name": "list",
        "parents": [
            "avm"
        ]
    },
    {
        "docstring": "",
        "name": "cons",
        "parents": [
            "list"
        ]
    },
    {
        "docstring": "",
        "name": "0-1-list",
        "parents": [
            "list"
        ]
    },
    {
        "docstring": "",
        "name": "1-list",
        "parents": [
            "0-1-list",
            "cons"
        ]
    },
    {
        "docstring": "",
        "name": "null",
        "parents": [
            "0-1-list"
        ]
    },
    {
        "docstring": "",
        "name": "1-plus-list",
        "parents": [
            "cons"
        ]
    },
    {
        "docstring": "",
        "name": "diff-list",
        "parents": [
            "avm"
        ]
    },
    {
        "docstring": "",
        "name": "0-1-dlist",
        "parents": [
            "diff-list"
        ]
    },
    {
        "docstring": "",
        "name": "0-dlist",
        "parents": [
            "0-1-dlist"
        ]
    },
    {
        "docstring": "",
        "name": "1-dlist",
        "parents": [
            "0-1-dlist"
        ]
    },
    {
        "docstring": "",
        "name": "dl-append",
        "parents": [
            "avm"
        ]
    },
    {
        "docstring": "",
        "name": "integer",
        "parents": [
            "atom"
        ]
    },
    {
        "docstring": "",
        "name": "string",
        "parents": [
            "atom"
        ]
    },
    {
        "docstring": "",
        "name": "olist",
        "parents": [
            "list"
        ]
    },
    {
        "docstring": "",
        "name": "ocons",
        "parents": [
            "olist",
            "cons"
        ]
    },
    {
        "docstring": "",
        "name": "onull",
        "parents": [
            "olist",
            "null"
        ]
    },
    {
        "docstring": "",
        "name": "lex-rule",
        "parents": [
            "phrase-or-lexrule",
            "word-or-lexrule"
        ]
    },
    {
        "docstring": "",
        "name": "inflected",
        "parents": [
            "avm"
        ]
    },
    {
        "docstring": "",
        "name": "infl-satisfied",
        "parents": [
            "inflected"
        ]
    },
    {
        "docstring": "",
        "name": "same-local-lex-rule",
        "parents": [
            "same-cat-lex-rule",
            "same-cont-lex-rule",
            "same-ctxt-lex-rule",
            "same-agr-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "same-non-local-lex-rule",
        "parents": [
            "lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "same-modified-lex-rule",
        "parents": [
            "lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "same-light-lex-rule",
        "parents": [
            "lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "same-ctxt-lex-rule",
        "parents": [
            "lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "same-cont-lex-rule",
        "parents": [
            "lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "same-agr-lex-rule",
        "parents": [
            "lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "same-cat-lex-rule",
        "parents": [
            "lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "same-head-lex-rule",
        "parents": [
            "lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "same-val-lex-rule",
        "parents": [
            "lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "same-hc-light-lex-rule",
        "parents": [
            "lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "same-posthead-lex-rule",
        "parents": [
            "lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "same-mc-lex-rule",
        "parents": [
            "lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "no-rels-hcons-lex-rule",
        "parents": [
            "lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "no-ccont-lex-rule",
        "parents": [
            "no-rels-hcons-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "non-local-change-only-lex-rule",
        "parents": [
            "same-local-lex-rule",
            "same-modified-lex-rule",
            "same-light-lex-rule",
            "no-ccont-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "local-change-only-lex-rule",
        "parents": [
            "same-non-local-lex-rule",
            "same-modified-lex-rule",
            "same-light-lex-rule",
            "no-ccont-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "cont-change-only-lex-rule",
        "parents": [
            "same-non-local-lex-rule",
            "same-modified-lex-rule",
            "same-light-lex-rule",
            "same-ctxt-lex-rule",
            "same-cat-lex-rule",
            "same-agr-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "ctxt-change-only-lex-rule",
        "parents": [
            "local-change-only-lex-rule",
            "same-cont-lex-rule",
            "same-cat-lex-rule",
            "same-agr-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "agr-change-only-lex-rule",
        "parents": [
            "local-change-only-lex-rule",
            "same-cont-lex-rule",
            "same-cat-lex-rule",
            "same-ctxt-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "cat-change-only-lex-rule",
        "parents": [
            "local-change-only-lex-rule",
            "same-ctxt-lex-rule",
            "same-cont-lex-rule",
            "same-agr-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "head-change-only-lex-rule",
        "parents": [
            "cat-change-only-lex-rule",
            "same-val-lex-rule",
            "same-hc-light-lex-rule",
            "same-posthead-lex-rule",
            "same-mc-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "mc-change-only-lex-rule",
        "parents": [
            "cat-change-only-lex-rule",
            "same-val-lex-rule",
            "same-hc-light-lex-rule",
            "same-posthead-lex-rule",
            "same-head-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "val-change-only-lex-rule",
        "parents": [
            "cat-change-only-lex-rule",
            "same-head-lex-rule",
            "same-hc-light-lex-rule",
            "same-posthead-lex-rule",
            "same-mc-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "add-only-rule",
        "parents": [
            "same-local-lex-rule",
            "same-modified-lex-rule",
            "same-light-lex-rule",
            "same-non-local-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "add-only-no-ccont-rule",
        "parents": [
            "add-only-rule",
            "no-ccont-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "add-only-no-rels-hcons-rule",
        "parents": [
            "add-only-rule",
            "no-rels-hcons-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "inflecting-lex-rule",
        "parents": [
            "lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "constant-lex-rule",
        "parents": [
            "lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "infl-lex-rule",
        "parents": [
            "inflecting-lex-rule",
            "nocoord"
        ]
    },
    {
        "docstring": "",
        "name": "const-lex-rule",
        "parents": [
            "constant-lex-rule",
            "nocoord"
        ]
    },
    {
        "docstring": "",
        "name": "infl-non-local-change-only-lex-rule",
        "parents": [
            "non-local-change-only-lex-rule",
            "infl-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "infl-local-change-only-lex-rule",
        "parents": [
            "local-change-only-lex-rule",
            "infl-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "infl-cont-change-only-lex-rule",
        "parents": [
            "cont-change-only-lex-rule",
            "infl-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "infl-ctxt-change-only-lex-rule",
        "parents": [
            "ctxt-change-only-lex-rule",
            "infl-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "infl-agr-change-only-lex-rule",
        "parents": [
            "agr-change-only-lex-rule",
            "infl-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "infl-cat-change-only-lex-rule",
        "parents": [
            "cat-change-only-lex-rule",
            "infl-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "infl-head-change-only-lex-rule",
        "parents": [
            "head-change-only-lex-rule",
            "infl-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "infl-val-change-only-lex-rule",
        "parents": [
            "val-change-only-lex-rule",
            "infl-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "infl-add-only-lex-rule",
        "parents": [
            "add-only-rule",
            "infl-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "infl-add-only-no-rels-hcons-lex-rule",
        "parents": [
            "add-only-rule",
            "infl-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "infl-add-only-no-ccont-lex-rule",
        "parents": [
            "add-only-no-ccont-rule",
            "infl-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "const-non-local-change-only-lex-rule",
        "parents": [
            "non-local-change-only-lex-rule",
            "const-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "const-local-change-only-lex-rule",
        "parents": [
            "local-change-only-lex-rule",
            "const-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "const-cont-change-only-lex-rule",
        "parents": [
            "cont-change-only-lex-rule",
            "const-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "const-ctxt-change-only-lex-rule",
        "parents": [
            "ctxt-change-only-lex-rule",
            "const-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "const-agr-change-only-lex-rule",
        "parents": [
            "agr-change-only-lex-rule",
            "const-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "const-cat-change-only-lex-rule",
        "parents": [
            "cat-change-only-lex-rule",
            "const-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "const-head-change-only-lex-rule",
        "parents": [
            "head-change-only-lex-rule",
            "const-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "const-val-change-only-lex-rule",
        "parents": [
            "val-change-only-lex-rule",
            "const-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "const-add-only-lex-rule",
        "parents": [
            "add-only-rule",
            "const-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "const-add-only-no-rels-hcons-lex-rule",
        "parents": [
            "add-only-rule",
            "const-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "const-add-only-no-ccont-lex-rule",
        "parents": [
            "add-only-no-ccont-rule",
            "const-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "headed-phrase",
        "parents": [
            "phrase"
        ]
    },
    {
        "docstring": "",
        "name": "non-headed-phrase",
        "parents": [
            "phrase"
        ]
    },
    {
        "docstring": "",
        "name": "phrasal",
        "parents": [
            "phrase"
        ]
    },
    {
        "docstring": "",
        "name": "head-nexus-rel-phrase",
        "parents": [
            "headed-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "head-nexus-que-phrase",
        "parents": [
            "headed-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "head-valence-phrase",
        "parents": [
            "head-nexus-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "basic-unary-phrase",
        "parents": [
            "phrase"
        ]
    },
    {
        "docstring": "",
        "name": "basic-binary-phrase",
        "parents": [
            "phrase"
        ]
    },
    {
        "docstring": "",
        "name": "binary-phrase",
        "parents": [
            "basic-binary-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "basic-binary-headed-phrase",
        "parents": [
            "headed-phrase",
            "basic-binary-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "binary-headed-phrase",
        "parents": [
            "basic-binary-headed-phrase",
            "binary-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "basic-ternary-phrase",
        "parents": [
            "phrase"
        ]
    },
    {
        "docstring": "",
        "name": "ternary-phrase",
        "parents": [
            "basic-ternary-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "ternary-headed-phrase",
        "parents": [
            "headed-phrase",
            "ternary-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "ternary-head-middle-phrase",
        "parents": [
            "ternary-headed-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "binary-rule-left-to-right",
        "parents": [
            "rule"
        ]
    },
    {
        "docstring": "",
        "name": "binary-rule-right-to-left",
        "parents": [
            "rule"
        ]
    },
    {
        "docstring": "",
        "name": "head-only",
        "parents": [
            "unary-phrase",
            "headed-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "head-initial",
        "parents": [
            "binary-headed-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "basic-head-final",
        "parents": [
            "basic-binary-headed-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "head-final",
        "parents": [
            "basic-head-final",
            "binary-headed-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "head-compositional",
        "parents": [
            "headed-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "interrogative-clause",
        "parents": [
            "basic-non-rel-clause"
        ]
    },
    {
        "docstring": "",
        "name": "declarative-clause",
        "parents": [
            "basic-non-rel-clause"
        ]
    },
    {
        "docstring": "",
        "name": "imperative-clause",
        "parents": [
            "basic-non-rel-clause"
        ]
    },
    {
        "docstring": "",
        "name": "basic-filler-phrase",
        "parents": [
            "binary-phrase",
            "phrasal"
        ]
    },
    {
        "docstring": "",
        "name": "basic-head-filler-phrase",
        "parents": [
            "basic-filler-phrase",
            "head-compositional"
        ]
    },
    {
        "docstring": "",
        "name": "nc-filler-phrase",
        "parents": [
            "binary-phrase",
            "phrasal"
        ]
    },
    {
        "docstring": "",
        "name": "nc-head-filler-phrase",
        "parents": [
            "nc-filler-phrase",
            "head-compositional"
        ]
    },
    {
        "docstring": "",
        "name": "decl-head-subj-phrase",
        "parents": [
            "basic-head-subj-phrase",
            "declarative-clause"
        ]
    },
    {
        "docstring": "",
        "name": "imp-head-subj-phrase",
        "parents": [
            "basic-head-subj-phrase",
            "imperative-clause"
        ]
    },
    {
        "docstring": "",
        "name": "basic-head-subj-nmc-phrase",
        "parents": [
            "head-valence-phrase",
            "basic-binary-headed-phrase",
            "declarative-clause"
        ]
    },
    {
        "docstring": "",
        "name": "basic-head-spec-phrase",
        "parents": [
            "head-valence-phrase",
            "phrasal",
            "binary-headed-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "basic-head-comp-phrase",
        "parents": [
            "head-valence-phrase",
            "head-compositional",
            "binary-headed-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "basic-head-1st-comp-phrase",
        "parents": [
            "basic-head-comp-phrase"
        ]
    },
    {
        "docstring": "; ERB 2004-12-14 First pass at a rule that realizes complements<br>; out of order.",
        "name": "basic-head-2nd-comp-phrase",
        "parents": [
            "basic-head-comp-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "basic-head-comp-nmc-phrase",
        "parents": [
            "head-valence-phrase",
            "head-compositional",
            "binary-headed-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "basic-head-opt-subj-phrase",
        "parents": [
            "head-valence-phrase",
            "head-only"
        ]
    },
    {
        "docstring": "",
        "name": "decl-head-opt-subj-phrase",
        "parents": [
            "basic-head-opt-subj-phrase",
            "declarative-clause"
        ]
    },
    {
        "docstring": "",
        "name": "imp-head-opt-subj-phrase",
        "parents": [
            "basic-head-opt-subj-phrase",
            "imperative-clause"
        ]
    },
    {
        "docstring": "",
        "name": "marker-phrase",
        "parents": [
            "binary-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "basic-binary-marker-phrase",
        "parents": [
            "marker-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "basic-marker-comp-phrase",
        "parents": [
            "basic-binary-marker-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "marker-initial-phrase",
        "parents": [
            "basic-binary-marker-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "marker-final-phrase",
        "parents": [
            "basic-binary-marker-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "basic-extracted-arg-phrase",
        "parents": [
            "head-valence-phrase",
            "head-only"
        ]
    },
    {
        "docstring": "",
        "name": "basic-extracted-comp-phrase",
        "parents": [
            "basic-extracted-arg-phrase",
            "head-compositional"
        ]
    },
    {
        "docstring": "",
        "name": "basic-extracted-subj-phrase",
        "parents": [
            "basic-extracted-arg-phrase",
            "head-compositional"
        ]
    },
    {
        "docstring": "LMC: Passed [NONSUBJ] up.",
        "name": "head-mod-phrase",
        "parents": [
            "head-nexus-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "basic-extracted-adj-phrase",
        "parents": [
            "head-mod-phrase",
            "head-only",
            "phrasal"
        ]
    },
    {
        "docstring": "",
        "name": "extracted-adj-phrase",
        "parents": [
            "basic-extracted-adj-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "adj-head-phrase",
        "parents": [
            "basic-head-mod-phrase-simple",
            "head-final"
        ]
    },
    {
        "docstring": "",
        "name": "head-adj-phrase",
        "parents": [
            "basic-head-mod-phrase-simple",
            "head-initial",
            "phrasal"
        ]
    },
    {
        "docstring": "",
        "name": "scopal-mod-phrase",
        "parents": [
            "basic-head-mod-phrase-simple"
        ]
    },
    {
        "docstring": "",
        "name": "isect-mod-phrase",
        "parents": [
            "basic-head-mod-phrase-simple",
            "head-compositional"
        ]
    },
    {
        "docstring": "",
        "name": "adj-head-scop-phrase",
        "parents": [
            "adj-head-phrase",
            "scopal-mod-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "head-adj-scop-phrase",
        "parents": [
            "head-adj-phrase",
            "scopal-mod-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "adj-head-int-phrase",
        "parents": [
            "adj-head-phrase",
            "isect-mod-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "head-adj-int-phrase",
        "parents": [
            "head-adj-phrase",
            "isect-mod-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "norm-ltop-lex-item",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "norm-hook-lex-item",
        "parents": [
            "norm-ltop-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "raise-index-mod-lex-item",
        "parents": [
            "norm-ltop-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "single-rel-lex-item",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "no-hcons-lex-item",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "no-rels-hcons-lex-item",
        "parents": [
            "no-hcons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "no-icons-lex-item",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "no-rels-hcons-icons-lex-item",
        "parents": [
            "no-hcons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "basic-icons-lex-item",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "one-icons-lex-item",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "two-icons-lex-item",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "norm-sem-lex-item",
        "parents": [
            "norm-hook-lex-item",
            "single-rel-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "hcons-lex-item",
        "parents": [
            "norm-hook-lex-item",
            "single-rel-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "raise-sem-lex-item",
        "parents": [
            "no-hcons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "basic-zero-arg",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "zero-arg-nonslash",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "zero-arg-nonrel",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "zero-arg-nonque",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "norm-zero-arg",
        "parents": [
            "zero-arg-nonslash",
            "zero-arg-nonrel",
            "zero-arg-nonque"
        ]
    },
    {
        "docstring": "",
        "name": "zero-arg-rel",
        "parents": [
            "zero-arg-nonslash",
            "zero-arg-nonque"
        ]
    },
    {
        "docstring": "",
        "name": "zero-arg-que",
        "parents": [
            "zero-arg-nonslash",
            "zero-arg-nonrel"
        ]
    },
    {
        "docstring": "",
        "name": "zero-arg-slash",
        "parents": [
            "zero-arg-nonrel",
            "zero-arg-nonque"
        ]
    },
    {
        "docstring": "",
        "name": "basic-one-arg-no-hcons",
        "parents": [
            "basic-one-arg",
            "no-hcons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "basic-two-arg-no-hcons",
        "parents": [
            "basic-two-arg",
            "no-hcons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "basic-three-arg-no-hcons",
        "parents": [
            "basic-three-arg",
            "no-hcons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "intransitive-lex-item",
        "parents": [
            "basic-one-arg-no-hcons",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "expl-arg-only-lex-item",
        "parents": [
            "basic-one-arg-no-hcons",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "ditransitive-lex-item",
        "parents": [
            "basic-three-arg-no-hcons",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "clausal-arg-intrans-lex-item",
        "parents": [
            "basic-one-arg",
            "one-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "clausal-first-arg-trans-lex-item",
        "parents": [
            "basic-two-arg",
            "one-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "clausal-second-arg-trans-lex-item",
        "parents": [
            "basic-two-arg",
            "one-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "clausal-third-arg-ditrans-lex-item",
        "parents": [
            "basic-three-arg",
            "one-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "clausal-expl-arg-lex-item",
        "parents": [
            "basic-two-arg",
            "one-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "trans-first-arg-raising-lex-item",
        "parents": [
            "basic-two-arg"
        ]
    },
    {
        "docstring": "",
        "name": "trans-first-arg-raising-lex-item-1",
        "parents": [
            "trans-first-arg-raising-lex-item",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "trans-first-arg-raising-lex-item-2",
        "parents": [
            "trans-first-arg-raising-lex-item",
            "raise-sem-lex-item",
            "no-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "trans-first-arg-control-lex-item",
        "parents": [
            "basic-two-arg",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "ditrans-first-arg-raising-lex-item",
        "parents": [
            "basic-three-arg",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "ditrans-first-arg-control-lex-item",
        "parents": [
            "basic-three-arg",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "ditrans-second-arg-raising-lex-item",
        "parents": [
            "basic-three-arg",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "ditrans-second-arg-control-lex-item",
        "parents": [
            "basic-three-arg",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "spr-plus-one-arg-lex-item",
        "parents": [
            "basic-two-arg-no-hcons",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "spr-plus-clausal-arg-lex-item",
        "parents": [
            "basic-two-arg",
            "one-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "spr-trans-first-arg-control-lex-item",
        "parents": [
            "basic-three-arg",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "attrib-or-pred-lex-item",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "basic-verb-lex",
        "parents": [
            "norm-sem-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "scopal-mod-lex",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "intersective-mod-lex",
        "parents": [
            "no-hcons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "no-mod-lex",
        "parents": [
            "no-hcons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "basic-adjective-lex",
        "parents": [
            "single-rel-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "basic-scopal-mod-adj-lex",
        "parents": [
            "basic-mod-adj-lex",
            "scopal-mod-lex"
        ]
    },
    {
        "docstring": "",
        "name": "basic-int-mod-adj-lex",
        "parents": [
            "basic-mod-adj-lex",
            "intersective-mod-lex"
        ]
    },
    {
        "docstring": "",
        "name": "basic-nomod-adj-lex",
        "parents": [
            "basic-adjective-lex",
            "no-mod-lex",
            "norm-hook-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "basic-adposition-lex",
        "parents": [
            "single-rel-lex-item",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "basic-mod-adp-lex",
        "parents": [
            "basic-adposition-lex",
            "norm-sem-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "basic-scopal-mod-adposition-lex",
        "parents": [
            "basic-mod-adp-lex",
            "scopal-mod-lex"
        ]
    },
    {
        "docstring": "",
        "name": "basic-int-mod-adposition-lex",
        "parents": [
            "basic-mod-adp-lex",
            "intersective-mod-lex"
        ]
    },
    {
        "docstring": "",
        "name": "basic-nomod-adposition-lex",
        "parents": [
            "basic-adposition-lex",
            "no-mod-lex",
            "norm-hook-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "basic-adverb-lex",
        "parents": [
            "raise-index-mod-lex-item",
            "single-rel-lex-item",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "basic-scopal-adverb-lex",
        "parents": [
            "basic-adverb-lex",
            "scopal-mod-lex"
        ]
    },
    {
        "docstring": "",
        "name": "basic-int-adverb-lex",
        "parents": [
            "basic-adverb-lex",
            "intersective-mod-lex"
        ]
    },
    {
        "docstring": "",
        "name": "basic-noun-lex",
        "parents": [
            "norm-sem-lex-item",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "basic-subord-conjunction-lex",
        "parents": [
            "basic-one-arg"
        ]
    },
    {
        "docstring": "",
        "name": "implicit-coord-rel",
        "parents": [
            "coordination-relation"
        ]
    },
    {
        "docstring": "",
        "name": "null-coord-rel",
        "parents": [
            "coordination-relation"
        ]
    },
    {
        "docstring": "",
        "name": "basic-conj-lex",
        "parents": [
            "basic-zero-arg",
            "no-hcons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "conj-lex",
        "parents": [
            "basic-conj-lex",
            "single-rel-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "nosem-conj-lex",
        "parents": [
            "basic-conj-lex"
        ]
    },
    {
        "docstring": "[HEAD.LOC -], LMC making sure coordinated clauses can't be pumped into place adjuncts.",
        "name": "coord-phrase",
        "parents": [
            "binary-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "topormid-coord-phrase",
        "parents": [
            "coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "top-coord-rule",
        "parents": [
            "topormid-coord-phrase"
        ]
    },
    {
        "docstring": "[SYNSEM.LOCAL.CAT.HEAD.LOC -] to ensure none of these coordinated clauses gets pumped into locative adjuncts",
        "name": "bottom-coord-phrase",
        "parents": [
            "phrase"
        ]
    },
    {
        "docstring": "",
        "name": "unary-bottom-coord-rule",
        "parents": [
            "bottom-coord-phrase",
            "unary-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "infl-bottom-coord-rule",
        "parents": [
            "add-only-rule",
            "inflecting-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "binary-bottom-coord-rule",
        "parents": [
            "bottom-coord-phrase",
            "binary-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "conj-first-bottom-coord-rule",
        "parents": [
            "binary-bottom-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "conj-last-bottom-coord-rule",
        "parents": [
            "binary-bottom-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "monopoly-top-coord-rule",
        "parents": [
            "top-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "monopoly-mid-coord-rule",
        "parents": [
            "mid-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "apoly-top-coord-rule",
        "parents": [
            "top-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "omni-binary-bottom-coord-rule",
        "parents": [
            "bottom-coord-phrase",
            "binary-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "omni-conj-first-bottom-coord-rule",
        "parents": [
            "omni-binary-bottom-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "omni-conj-last-bottom-coord-rule",
        "parents": [
            "omni-binary-bottom-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "omni-left-coord-rule",
        "parents": [
            "bottom-coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "omni-binary-left-coord-rule",
        "parents": [
            "omni-left-coord-rule",
            "binary-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "omni-conj-first-left-coord-rule",
        "parents": [
            "omni-binary-left-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "omni-conj-last-left-coord-rule",
        "parents": [
            "omni-binary-left-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "infl-left-coord-rule",
        "parents": [
            "omni-left-coord-rule",
            "infl-add-only-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "omni-coord-phrase",
        "parents": [
            "coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "omni-top-coord-rule",
        "parents": [
            "omni-coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "omni-mid-coord-rule",
        "parents": [
            "omni-coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "n-coord-phrase",
        "parents": [
            "coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "basic-n-top-coord-rule",
        "parents": [
            "n-coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "basic-n-mid-coord-rule",
        "parents": [
            "n-coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "n-bottom-coord-phrase",
        "parents": [
            "bottom-coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "np-coord-phrase",
        "parents": [
            "coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "basic-np-mid-coord-rule",
        "parents": [
            "np-coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "np-bottom-coord-phrase",
        "parents": [
            "bottom-coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "event-coord-phrase",
        "parents": [
            "coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "adj-coord-phrase",
        "parents": [
            "event-coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "basic-adj-top-coord-rule",
        "parents": [
            "adj-coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "basic-adj-mid-coord-rule",
        "parents": [
            "adj-coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "adj-bottom-coord-phrase",
        "parents": [
            "bottom-coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "adv-coord-phrase",
        "parents": [
            "event-coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "basic-adv-top-coord-rule",
        "parents": [
            "adv-coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "basic-adv-mid-coord-rule",
        "parents": [
            "adv-coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "adv-bottom-coord-phrase",
        "parents": [
            "bottom-coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "vp-coord-phrase",
        "parents": [
            "event-coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "basic-vp-top-coord-rule",
        "parents": [
            "vp-coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "basic-vp-mid-coord-rule",
        "parents": [
            "vp-coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "vp-bottom-coord-phrase",
        "parents": [
            "bottom-coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "basic-s-top-coord-rule",
        "parents": [
            "s-coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "basic-s-mid-coord-rule",
        "parents": [
            "s-coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "s-bottom-coord-phrase",
        "parents": [
            "bottom-coord-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "mkg",
        "parents": [
            "avm"
        ]
    },
    {
        "docstring": "",
        "name": "fc",
        "parents": [
            "mkg"
        ]
    },
    {
        "docstring": "",
        "name": "non-tp",
        "parents": [
            "mkg"
        ]
    },
    {
        "docstring": "",
        "name": "tp",
        "parents": [
            "mkg"
        ]
    },
    {
        "docstring": "",
        "name": "non-fc",
        "parents": [
            "mkg"
        ]
    },
    {
        "docstring": "",
        "name": "fc-only",
        "parents": [
            "fc",
            "non-tp"
        ]
    },
    {
        "docstring": "",
        "name": "fc-+-tp",
        "parents": [
            "tp",
            "fc"
        ]
    },
    {
        "docstring": "",
        "name": "unmkg",
        "parents": [
            "non-tp",
            "non-fc"
        ]
    },
    {
        "docstring": "",
        "name": "tp-only",
        "parents": [
            "tp",
            "non-fc"
        ]
    },
    {
        "docstring": "",
        "name": "mkg-tp-lex",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "mkg-tp-only-lex",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "mkg-fc-lex",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "mkg-fc-only-lex",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "mkg-unmkg-lex",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "same-mkg-phrase",
        "parents": [
            "headed-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "sform",
        "parents": [
            "basic-binary-headed-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "focality",
        "parents": [
            "sform"
        ]
    },
    {
        "docstring": "",
        "name": "topicality",
        "parents": [
            "sform"
        ]
    },
    {
        "docstring": "",
        "name": "narrow-focus",
        "parents": [
            "focality"
        ]
    },
    {
        "docstring": "",
        "name": "wide-focus",
        "parents": [
            "focality"
        ]
    },
    {
        "docstring": "",
        "name": "topicless",
        "parents": [
            "topicality"
        ]
    },
    {
        "docstring": "",
        "name": "topic-comment",
        "parents": [
            "topicality"
        ]
    },
    {
        "docstring": "",
        "name": "focus-bg",
        "parents": [
            "narrow-focus",
            "topicless"
        ]
    },
    {
        "docstring": "",
        "name": "all-focus",
        "parents": [
            "wide-focus",
            "topicless"
        ]
    },
    {
        "docstring": "",
        "name": "frame-setting",
        "parents": [
            "topic-comment"
        ]
    },
    {
        "docstring": "",
        "name": "non-frame-setting",
        "parents": [
            "topic-comment"
        ]
    },
    {
        "docstring": "",
        "name": "no-icons-lexrule",
        "parents": [
            "lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "add-icons-rule",
        "parents": [
            "lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "add-icons-subj-rule",
        "parents": [
            "lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "add-icons-comp-rule",
        "parents": [
            "lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "add-icons-subj-verb-rule",
        "parents": [
            "lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "add-icons-comp-verb-rule",
        "parents": [
            "lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "add-icons-subj-comp-rule",
        "parents": [
            "lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "add-icons-subj-comp-verb-rule",
        "parents": [
            "lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "comps-change-only-lex-rule",
        "parents": [
            "same-subj-lex-rule",
            "same-spr-lex-rule",
            "same-spec-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "same-subj-lex-rule",
        "parents": [
            "lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "same-spr-lex-rule",
        "parents": [
            "lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "same-spec-lex-rule",
        "parents": [
            "lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "same-comps-lex-rule",
        "parents": [
            "lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "饭_n_selected_rel",
        "parents": [
            "selected_comp_rel"
        ]
    },
    {
        "docstring": "",
        "name": "车_n_selected_rel",
        "parents": [
            "selected_comp_rel"
        ]
    },
    {
        "docstring": "",
        "name": "婚_n_selected_rel",
        "parents": [
            "selected_comp_rel"
        ]
    },
    {
        "docstring": "",
        "name": "业_n_selected_rel",
        "parents": [
            "selected_comp_rel"
        ]
    },
    {
        "docstring": "",
        "name": "澡_n_selected_rel",
        "parents": [
            "selected_comp_rel"
        ]
    },
    {
        "docstring": "",
        "name": "雪_n_selected_rel",
        "parents": [
            "selected_comp_rel"
        ]
    },
    {
        "docstring": "",
        "name": "班_n_selected_rel",
        "parents": [
            "selected_comp_rel"
        ]
    },
    {
        "docstring": "",
        "name": "班儿_n_selected_rel",
        "parents": [
            "selected_comp_rel"
        ]
    },
    {
        "docstring": "",
        "name": "病_n_selected_rel",
        "parents": [
            "selected_comp_rel"
        ]
    },
    {
        "docstring": "",
        "name": "烟_n_selected_rel",
        "parents": [
            "selected_comp_rel"
        ]
    },
    {
        "docstring": "",
        "name": "会_n_selected_rel",
        "parents": [
            "selected_comp_rel"
        ]
    },
    {
        "docstring": "",
        "name": "发_n_selected_rel",
        "parents": [
            "selected_comp_rel"
        ]
    },
    {
        "docstring": "",
        "name": "字_n_selected_rel",
        "parents": [
            "selected_comp_rel"
        ]
    },
    {
        "docstring": "",
        "name": "淋浴_n_selected_rel",
        "parents": [
            "selected_comp_rel"
        ]
    },
    {
        "docstring": "",
        "name": "足球_n_selected_rel",
        "parents": [
            "selected_comp_rel"
        ]
    },
    {
        "docstring": "",
        "name": "天_n_selected_rel",
        "parents": [
            "selected_comp_rel"
        ]
    },
    {
        "docstring": "",
        "name": "天儿_n_selected_rel",
        "parents": [
            "selected_comp_rel"
        ]
    },
    {
        "docstring": "",
        "name": "生_n_selected_rel",
        "parents": [
            "selected_comp_rel"
        ]
    },
    {
        "docstring": "",
        "name": "家_n_selected_rel",
        "parents": [
            "selected_comp_rel"
        ]
    },
    {
        "docstring": "",
        "name": "院_n_selected_rel",
        "parents": [
            "selected_comp_rel"
        ]
    },
    {
        "docstring": "",
        "name": "油_n_selected_rel",
        "parents": [
            "selected_comp_rel"
        ]
    },
    {
        "docstring": "",
        "name": "书_n_selected_rel",
        "parents": [
            "selected_comp_rel"
        ]
    },
    {
        "docstring": "",
        "name": "相_n_selected_rel",
        "parents": [
            "selected_comp_rel"
        ]
    },
    {
        "docstring": "",
        "name": "冰_n_selected_rel",
        "parents": [
            "selected_comp_rel"
        ]
    },
    {
        "docstring": "",
        "name": "步_n_selected_rel",
        "parents": [
            "selected_comp_rel"
        ]
    },
    {
        "docstring": "",
        "name": "的_n_selected_rel",
        "parents": [
            "selected_comp_rel"
        ]
    },
    {
        "docstring": "",
        "name": "眼界_n_selected_rel",
        "parents": [
            "selected_comp_rel"
        ]
    },
    {
        "docstring": "",
        "name": "孕_n_selected_rel",
        "parents": [
            "selected_comp_rel"
        ]
    },
    {
        "docstring": "",
        "name": "谎_n_selected_rel",
        "parents": [
            "selected_comp_rel"
        ]
    },
    {
        "docstring": "",
        "name": "碗_n_selected_rel",
        "parents": [
            "selected_comp_rel"
        ]
    },
    {
        "docstring": "",
        "name": "门_n_selected_rel",
        "parents": [
            "selected_comp_rel"
        ]
    },
    {
        "docstring": "",
        "name": "课_n_selected_rel",
        "parents": [
            "selected_comp_rel"
        ]
    },
    {
        "docstring": "",
        "name": "号_n_selected_rel",
        "parents": [
            "selected_comp_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_个中_q_rel",
        "parents": [
            "q_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_其_q_rel",
        "parents": [
            "q_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_其它_q_rel",
        "parents": [
            "q_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_此_q_rel",
        "parents": [
            "q_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_各种_q_rel",
        "parents": [
            "q_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_一系列_q_rel",
        "parents": [
            "q_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_半截_q_rel",
        "parents": [
            "q_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_下_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_世_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_丛_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_丝_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_丝丝_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_两_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_个_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_个个_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_串_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_串串_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_些_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_亩_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_人_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_人份_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_人次_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_人民币_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_代_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_代代_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_件_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_件件_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_任_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_份_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_伏_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_伏特_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_伙_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_位_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_位位_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_例_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_侧_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_倍_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_元_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_兆瓦_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_兆赫_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_先令_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_克_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_克拉_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_克朗_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_公亩_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_公克_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_公分_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_公升_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_公吨_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_公尺_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_公斤_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_公里_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_公顷_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_具_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_具具_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_册_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_出_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_刀_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_分_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_分分_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_分种_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_分米_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_分钟_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_列_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_则_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_刻_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_刻钟_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_剂_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_副_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_加仑_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_加元_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_包_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_匹_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_区_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_千伏_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_千瓦_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_千瓦时_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_华里_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_卢比_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_卷_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_厘_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_厘米_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_双_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_发_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_叠_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_口_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_句_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_只_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_只只_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_台_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_台套_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_台币_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_叶_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_号_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_名_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_吨_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_吨级_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_员_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_周_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_周岁_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_味_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_品_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_回_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_团_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_团团_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_圈_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_场_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_场场_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_块_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_块儿_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_块块_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_坨_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_坪_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_型_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_埃居_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_堂_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_堆_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_堆堆_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_堵_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_堵堵_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_声_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_声声_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_壶_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_处_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_夥_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_天_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_天天_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_头_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_套_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_字_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_季_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_安培_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_宗_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_定位_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_室_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_家_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_家家_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_寸_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_对_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_封_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_尊_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_尊尊_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_小时_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_尺_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_尾_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_局_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_屁股_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_层_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_层层_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_届_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_岁_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_巷_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_师_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_帖_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_带_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_帧_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_席_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_帮_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_帮子_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_幅_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_幅幅_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_幕_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_幕幕_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_幢_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_平公里_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_平方公里_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_平方米_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_平方英尺_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_平米_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_年_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_年度_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_度_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_座_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_座座_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_式_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_张_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_张儿_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_张张_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_微克_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_微米_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_成_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_截_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_户_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_所_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_扇_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_手_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_扎_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_打_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_批_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_批批_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_批次_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_把_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_担_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_招_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_拨_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_拳_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_排_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_排排_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_摄氏度_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_摊_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_撇_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_撮_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_支_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_斗_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_斤_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_新元_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_新币_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_方_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_方方_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_旁_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_族_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_日_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_日元_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_昂司_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_星期_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_曲_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_曲曲_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_月_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_期_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_本_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_朵_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_杆_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_束_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_条_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_条条_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_条款_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_来_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_杯_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_枚_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_枝_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_枪_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_架_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_架次_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_标箱_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_栋_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_栋栋_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_栏_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_株_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_样_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_根_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_根根_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_格_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_格格_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_桌_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_档_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_档子_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_桩_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_桩桩_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_桶_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_棒_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_棵_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_楼_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_横_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_次_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_次次_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_欧元_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_欧分_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_款_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_步_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_步步_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_段_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_段段_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_比索_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_毛_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_毫_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_毫升_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_毫米_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_池_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_沓_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_法郎_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_波_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_波波_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_派_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_海里_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_港元_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_港币_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_湾_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_溜_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_滩_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_滴_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_澳元_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_澳币_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_炮_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_点_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_点儿_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_点点_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_片_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_版_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_环_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_班_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_球_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_球球_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_瑞尔_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_瓦_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_瓦特_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_瓶_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_生_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_界_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_畦_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_畦畦_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_番_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_盆_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_盆盆_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_盎司_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_盏_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_目_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_盾_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_眼_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_石_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_码_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_碗_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_磅_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_票_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_种_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_种种_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_科_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_秒_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_秒钟_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_窝蜂_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_立方毫米_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_立方米_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_站_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_站站_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_章_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_端_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_笔_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_第纳尔_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_笼_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_等_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_管_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_箱_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_篇_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_篇儿_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_篇篇_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_篓_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_簇_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_米_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_类_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_粒_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_系列_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_级_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_级段_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_纸_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_线_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_组_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_组件_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_组组_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_绺_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_缕_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_缸_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_罐_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_美元_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_美分_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_美金_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_群_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_群群_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_翻_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_联_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_肚子_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_股_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_胞_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_脚_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_脸_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_腔_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_航次_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_般_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_艘_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_艘次_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_色_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_节_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_英亩_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_英哩_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_英寸_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_英尺_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_英里_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_英镑_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_落_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_行_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_袋_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_袭_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_角_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_记_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_课_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_起_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_趟_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_路_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_身_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_轮_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_轴_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_载_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_辆_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_辈_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_辈子_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_辑_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_边_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_进_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_连串_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_通_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_遍_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_道_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_遭_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_部_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_部分_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_部部_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_酒杯_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_里_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_重_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_针_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_锄_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_锅_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_锭_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_镐_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_门_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_间_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_队_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_阵_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_阵阵_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_阶_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_集_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_面_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_韩元_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_页_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_顶_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_顷_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_项_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_顿_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_颗_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_颗颗_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_题_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_餐_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_首_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_马克_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_驾次_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_麦_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_划_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_垄_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_弯_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_柄_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_茎_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_阕_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_捆_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_毫克_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_瓣_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_客_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_华氏度_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_盒_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_升_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_市尺_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_吨公里_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_纳米_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_欧姆_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_摩尔_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_牛顿_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_立方米秒_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_盅_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_电子伏_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_坛_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_件次_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_忽米_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_卡路里_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_辆次_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_分贝_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_车次_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_盘_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_大卡_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_秒立方米_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_英两_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_公寸_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_国_x_rel",
        "parents": [
            "cl_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "utterance",
        "parents": [
            "utterance-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "np-voc-adp",
        "parents": [
            "np-voc-adp-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "+vjp",
        "parents": []
    },
    {
        "docstring": "",
        "name": "lzg-asp",
        "parents": [
            "avm"
        ]
    },
    {
        "docstring": "For verbs that cannot interact with any of the aspect-related words.<br>This should probably be used very sparingly.",
        "name": "no-lzg-asp",
        "parents": [
            "lzg-asp"
        ]
    },
    {
        "docstring": "For verbs that can interact with all aspect-related words.",
        "name": "le-zhe-guo-mei-bu-zai-asp",
        "parents": [
            "lzg-asp"
        ]
    },
    {
        "docstring": "For verbs that cannot interact with 在 or 着 (essentially blocking the progressive aspect).<br><br>[FIXME] IS 在 and 着 the same in restrictions like psychological verbs?",
        "name": "le-guo-mei-bu-asp",
        "parents": [
            "le-zhe-guo-mei-bu-zai-asp"
        ]
    },
    {
        "docstring": "For verbs that cannot interact with 了 (essentially blocking the perfective aspect).<br>However they can interact with 过. This, apparently, includes stative/psychological verbs (i.e. verbs that can take degree specifiers).<br><br>[FIXME] should be be LE or MEI??? This would probably pose a problem since 过 and 着 are apparently possible.",
        "name": "zhe-guo-mei-bu-zai-asp",
        "parents": [
            "le-zhe-guo-mei-bu-zai-asp"
        ]
    },
    {
        "docstring": "For verbs that cannot interact with 过 (essentially blocking the experiential aspect).",
        "name": "le-zhe-mei-bu-zai-asp",
        "parents": [
            "le-zhe-guo-mei-bu-zai-asp"
        ]
    },
    {
        "docstring": "For verbs that cannot interact with 不 (e.g. 有).",
        "name": "le-zhe-guo-mei-zai-asp",
        "parents": [
            "le-zhe-guo-mei-bu-zai-asp"
        ]
    },
    {
        "docstring": "For verbs that only interact with 不 (e.g. 是).",
        "name": "bu-asp",
        "parents": [
            "le-guo-mei-bu-asp",
            "zhe-guo-mei-bu-zai-asp",
            "le-zhe-mei-bu-zai-asp"
        ]
    },
    {
        "docstring": "",
        "name": "zhe-guo-mei-zai-asp",
        "parents": [
            "le-zhe-guo-mei-zai-asp",
            "zhe-guo-mei-bu-zai-asp"
        ]
    },
    {
        "docstring": "",
        "name": "zhe-mei-zai-asp",
        "parents": [
            "zhe-guo-mei-zai-asp",
            "le-zhe-mei-bu-zai-asp"
        ]
    },
    {
        "docstring": "",
        "name": "guo-zhe-mei-asp",
        "parents": [
            "zhe-guo-mei-zai-asp"
        ]
    },
    {
        "docstring": "",
        "name": "le-guo-asp",
        "parents": [
            "le-zhe-guo-mei-zai-asp",
            "le-guo-mei-bu-asp"
        ]
    },
    {
        "docstring": "",
        "name": "zhe-zai-asp",
        "parents": [
            "zhe-mei-zai-asp"
        ]
    },
    {
        "docstring": "",
        "name": "guo-zhe-asp",
        "parents": [
            "guo-zhe-mei-asp"
        ]
    },
    {
        "docstring": "",
        "name": "guo-mei-asp",
        "parents": [
            "guo-zhe-mei-asp",
            "le-guo-mei-bu-asp"
        ]
    },
    {
        "docstring": "",
        "name": "zhe-mei-asp",
        "parents": [
            "guo-zhe-mei-asp",
            "zhe-mei-zai-asp"
        ]
    },
    {
        "docstring": "",
        "name": "mei-zai-asp",
        "parents": [
            "zhe-mei-zai-asp"
        ]
    },
    {
        "docstring": "",
        "name": "zhe-asp",
        "parents": [
            "zhe-mei-asp",
            "zhe-zai-asp",
            "guo-zhe-asp"
        ]
    },
    {
        "docstring": "",
        "name": "guo-asp",
        "parents": [
            "guo-mei-asp",
            "le-guo-asp",
            "guo-zhe-asp"
        ]
    },
    {
        "docstring": "",
        "name": "zai-asp",
        "parents": [
            "mei-zai-asp",
            "zhe-zai-asp"
        ]
    },
    {
        "docstring": "",
        "name": "le-asp",
        "parents": [
            "le-guo-asp",
            "le-zhe-mei-bu-zai-asp"
        ]
    },
    {
        "docstring": "This essentially restricts adjectives to interactions with 不 (and excludes all other aspect-related words).<br>This is being done here (and not in zhong-lextypes.tdl) since this is seen as <br>a Mandarin only restriction.<br>[FIXME] Need to ask Joanna whether or not this restriction would also happen<br>in Cantonese and, if so, more this higher. It is confusing to be split.<br>[FIXME] This is also not exactly true, we know adjectives can, in some circunstances, be equated as verbs when interacting with aspect (e.g. LE). We need to understand how this can be processed.",
        "name": "basic-pred-adj-lex",
        "parents": []
    },
    {
        "docstring": "This is used for 了, to mark perfective aspect.<br>Aspect markers such as 了 take a complement  (currently +vj)",
        "name": "pfv-marker",
        "parents": [
            "aspect-markers"
        ]
    },
    {
        "docstring": "TEST FOR NEW HIERARCHY<br>This required that the COMP for perfective markers are compatible only with verbs that can take 'LE' as a perfective marker.",
        "name": "pfv-marker_le",
        "parents": [
            "pfv-marker"
        ]
    },
    {
        "docstring": "",
        "name": "exp-marker",
        "parents": [
            "aspect-markers"
        ]
    },
    {
        "docstring": "TEST",
        "name": "exp-marker_le",
        "parents": [
            "exp-marker"
        ]
    },
    {
        "docstring": "",
        "name": "dur-marker",
        "parents": [
            "aspect-markers"
        ]
    },
    {
        "docstring": "TEST",
        "name": "dur-marker_le",
        "parents": [
            "dur-marker"
        ]
    },
    {
        "docstring": "CRS stands for 'Currently Relevant State', as proposed by Li & Thompson (1981).<br>It refers to the uses of 了 (LE) and it broadly encompasses multiple uses:<br>(1) change of state, (2) corrects a wrong assumption, (3) reporting progress<br>(4) reports what will happen next, (5) marks the speaker's total contribution<br>to the conversation at that point.<br><br>[FIXME]However 'crs' is being used to refer to sentence final particles in <br>general this should be changed eventually. E.g. 吧_crs, 啊_crs, 啦_crs, etc.<br>crs_le is possibly not the right type for all these. <br>We should probably create more subtypes of spart-lex-item, and make sure<br>we can encode the possible combinations of sent-final-particles.",
        "name": "crs_le",
        "parents": [
            "spart-lex-item",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "classifier-lex",
        "parents": [
            "no-spr-classifier-rule-dtr"
        ]
    },
    {
        "docstring": "",
        "name": "no-spr-classifier-lex-rule",
        "parents": [
            "const-val-change-only-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "no-spr-classifier-rule-dtr",
        "parents": [
            "word-or-lexrule"
        ]
    },
    {
        "docstring": "",
        "name": "_de_dem_q_rel",
        "parents": [
            "dem_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_zhi_dem_q_rel",
        "parents": [
            "dem_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_de_p_assoc_rel",
        "parents": [
            "related_p_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_de_nom_rel",
        "parents": [
            "nm_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_zhi_nom_rel",
        "parents": [
            "nm_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_bu_x_rel",
        "parents": [
            "neg_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_buqi_x_rel",
        "parents": [
            "neg_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_bu_polar_x_rel",
        "parents": [
            "neg_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_mei_x_rel",
        "parents": [
            "neg_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_mei_polar_x_rel",
        "parents": [
            "neg_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_hen_x_rel",
        "parents": [
            "intensifier_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_feichang_x_rel",
        "parents": [
            "intensifier_x_rel"
        ]
    },
    {
        "docstring": "",
        "name": "_ting_x_rel",
        "parents": [
            "intensifier_x_rel"
        ]
    },
    {
        "docstring": "This mal-rule is used to pump  NPs into subject-taking VPs. It introduces a  dummy 是_v_cop relation, which would be missing between the two NPs. This is used to catch the error in sentences like:<br><b>[mex]*</b> 她 学生 。",
        "name": "mal_np-as-vp",
        "parents": [
            "mal-np-as-vp-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "cl-np-pred",
        "parents": [
            "cl-np-pred-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "generic_name",
        "parents": [
            "proper-name-lex"
        ]
    },
    {
        "docstring": "",
        "name": "generic_foreign-word",
        "parents": [
            "proper-name-lex"
        ]
    },
    {
        "docstring": "",
        "name": "generic_card",
        "parents": [
            "num-adj-lex"
        ]
    },
    {
        "docstring": "",
        "name": "generic_common-noun",
        "parents": [
            "count-noun-lex"
        ]
    },
    {
        "docstring": "",
        "name": "generic_temp-noun",
        "parents": [
            "time-noun-lex"
        ]
    },
    {
        "docstring": "",
        "name": "generic_classifier",
        "parents": [
            "classifier-lex"
        ]
    },
    {
        "docstring": "",
        "name": "generic_vv",
        "parents": [
            "v_trans-verb-lex"
        ]
    },
    {
        "docstring": "",
        "name": "generic_va",
        "parents": [
            "pred-adj-lex"
        ]
    },
    {
        "docstring": "",
        "name": "generic_jj",
        "parents": [
            "attr-adj-lex"
        ]
    },
    {
        "docstring": "",
        "name": "generic_ij",
        "parents": [
            "interjection-lex"
        ]
    },
    {
        "docstring": "",
        "name": "generic_pu",
        "parents": [
            "symbol"
        ]
    },
    {
        "docstring": "",
        "name": "generic_num_ne",
        "parents": [
            "num-adj-lex"
        ]
    },
    {
        "docstring": "",
        "name": "generic_year_ne",
        "parents": [
            "time-noun-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "generic_date_ne",
        "parents": [
            "time-noun-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "generic_time_noun_ne",
        "parents": [
            "time-noun-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "generic_meas_noun_ne",
        "parents": [
            "proper-name-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "generic_proper_ne",
        "parents": [
            "proper-name-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "This lexical entry allows using 和 to coordinate clauses.<br>FIXME: this should probably be introducing the a coordination relation <br>FIXME: This is currently not working with commas. Maybe we should add a <br>       lexical entry with a comma (as first token). E.g.: \"STEM <\"，\", \"和\" >\"<br><b>[mex]*</b>他 不 学 中文 和 不 学 法文 。<br><b>[mex]*</b>他 学 中文 和 学 法文 。<br><br><history><br>2022.07.31 (LMC): This was allowing the daugthers to be interpreted as imperatives. This may not be necessary for now. It is plausible that students would use it in this way, but this currently just generates further ambiguity that may not be necessary. An error would still be recognized as props. To restrict this further, we add [SF prop] to both daugthers. We can do that through L- and R- INDEX, because they would should be unified.<br><br></history>",
        "name": "mal_clause_和_c",
        "parents": [
            "conj_-_e_le"
        ]
    },
    {
        "docstring": "Mal lexical entry for 不, that allows 不+有.",
        "name": "mal_不_r",
        "parents": [
            "mal_neg_不+有_le"
        ]
    },
    {
        "docstring": "A mal-lexical entry for 也 in pre-subject position.",
        "name": "mal_presubj_也_r",
        "parents": [
            "mal_presubj_也_le"
        ]
    },
    {
        "docstring": "A mal-lexical entry for 也 in post-verbal position (before complements).",
        "name": "mal_postv_也_r",
        "parents": [
            "mal-也-postv-precomp-lex"
        ]
    },
    {
        "docstring": "This mal 吗 is attaching to sentences that are already a question.<br><b>[mex]*</b> 你 学习 什么 吗 ？<br><b>[mex]*</b> 他 是 谁 吗 ？<br><b>[mex]*</b> 他 吃不吃 肉 吗 ？",
        "name": "mal_extra_吗_qp",
        "parents": [
            "mal_x_-_qpart_le"
        ]
    },
    {
        "docstring": "This 是 is a special copula that predicates over adjectival phrases. This is generally considered incorrect, unless as part of a focus 是---的 construction, or in a contrastive situation;<br><b>[mex]*</b>他 是 漂亮 。<br><b>[mex]*</b>蛋糕 是 好吃 。",
        "name": "mal_apred_是_cop",
        "parents": [
            "mal_v_adj_cop_le"
        ]
    },
    {
        "docstring": "This lexical entry enables the use of 一点儿 as a degree modifier.<br>It should be 有点儿 instead, and has a confusing parallelism with English<br>(e.g. I am a little bit tired.)<br><b>[mex]*</b>我 一点儿 累 。",
        "name": "mal_degree_s_一点儿_r_1",
        "parents": [
            "adv_-_deg-pre_le"
        ]
    },
    {
        "docstring": "This lexical entry enables the use of 一点 as a degree modifier.<br>It should be 有点 instead, and has a confusing parallelism with English<br>(e.g. I am a little bit tired.)<br><b>[mex]*</b>我 一点 累 。",
        "name": "mal_degree_s_一点_r_1",
        "parents": [
            "adv_-_deg-pre_le"
        ]
    },
    {
        "docstring": "This allows the interrogative 几 to be used without classifiers.<br><b>[mex]*</b>你 有 几 狗 ？",
        "name": "mal_几_det_nocls_q",
        "parents": [
            "mal-几-wh-det-nocls_le"
        ]
    },
    {
        "docstring": "This lexical entry enables 二 to be used in numeral-classifier constructions.<br>Currently 'a_-_num_le' marks numbers as [CARDINAL +], which is incorrect for 二.",
        "name": "mal_card_二_j",
        "parents": [
            "a_-_num_le"
        ]
    },
    {
        "docstring": "Mispelling entry: 友 as 有.",
        "name": "mal_spell_有_v_2",
        "parents": [
            "v_np_le"
        ]
    },
    {
        "docstring": "[] CD;<br><br>Should use 光盘 instead;",
        "name": "rbst_CD_n_1",
        "parents": [
            "n_-_le"
        ]
    },
    {
        "docstring": "misspelled form of 名字 [míng zi] (name; denomination);",
        "name": "mal_spell_名字_n_1",
        "parents": [
            "n_-_le"
        ]
    },
    {
        "docstring": "misspelled form of 名字 [míng zi] (name; denomination);",
        "name": "mal_spell_名字_n_2",
        "parents": [
            "n_-_le"
        ]
    },
    {
        "docstring": "[]",
        "name": "mal_spell_宿舍_n_1",
        "parents": [
            "n_-_le"
        ]
    },
    {
        "docstring": "[]",
        "name": "mal_spell_学生_n_1",
        "parents": [
            "n_-_le"
        ]
    },
    {
        "docstring": "",
        "name": "mal_spell_朋友_n_1",
        "parents": [
            "n_-_h_le"
        ]
    },
    {
        "docstring": "[]",
        "name": "mal_spell_男朋友_n_1",
        "parents": [
            "n_-_h_le"
        ]
    },
    {
        "docstring": "[]",
        "name": "mal_spell_女朋友_n_1",
        "parents": [
            "n_-_h_le"
        ]
    },
    {
        "docstring": "[]",
        "name": "mal_spell_吗_qp",
        "parents": [
            "x_-_qpart_le"
        ]
    },
    {
        "docstring": "[]",
        "name": "mal_spell_工作_n_1",
        "parents": [
            "n_-_le"
        ]
    },
    {
        "docstring": "[]",
        "name": "mal_spell_工作_v_1",
        "parents": [
            "v_-_le"
        ]
    },
    {
        "docstring": "Misspelling of 中国人 [zhōng guó rén] Chinese (person);",
        "name": "mal_spell_中国人_n_1",
        "parents": [
            "n_-_h_le"
        ]
    },
    {
        "docstring": "Misspelling of 中国人 [zhōng guó rén] Chinese (person);",
        "name": "mal_spell_中国人_n_2",
        "parents": [
            "n_-_h_le"
        ]
    },
    {
        "docstring": "Misspelling of 中国人 [zhōng guó rén] Chinese (person);",
        "name": "mal_spell_中国人_n_3",
        "parents": [
            "n_-_h_le"
        ]
    },
    {
        "docstring": "Misspelling of 中国人 [zhōng guó rén] Chinese (person);",
        "name": "mal_spell_中国人_n_4",
        "parents": [
            "n_-_h_le"
        ]
    },
    {
        "docstring": "Misspelling of 中国人 [zhōng guó rén] Chinese (person);",
        "name": "mal_spell_中国人_n_5",
        "parents": [
            "n_-_h_le"
        ]
    },
    {
        "docstring": "Misspelling of 学习 [xué xí] to study; to learn;",
        "name": "mal_spell_学习_v_1",
        "parents": [
            "v_np_le"
        ]
    },
    {
        "docstring": "Misspelling of 一点儿",
        "name": "mal_spell_一点儿_n_1",
        "parents": [
            "n_-_indef-pr_le"
        ]
    },
    {
        "docstring": "",
        "name": "mal_spell_怎么样_j_1",
        "parents": [
            "a_-_pred_q_le"
        ]
    },
    {
        "docstring": "Needs to have a split STEM because 们 is alwasy split except for pronouns.",
        "name": "mal_spell_什么_d_q",
        "parents": [
            "d_-_wh-nocls_le"
        ]
    },
    {
        "docstring": "Needs to have a split STEM because 们 is alwasy split except for pronouns.",
        "name": "mal_spell_什么_n_q",
        "parents": [
            "n_-_pr-wh_le"
        ]
    },
    {
        "docstring": "",
        "name": "mal_spell_什么_d_q_2",
        "parents": [
            "d_-_wh-nocls_le"
        ]
    },
    {
        "docstring": "",
        "name": "mal_spell_什么_n_q_2",
        "parents": [
            "n_-_pr-wh_le"
        ]
    },
    {
        "docstring": "",
        "name": "mal_spell_老师_n_1",
        "parents": [
            "n_-_h_le"
        ]
    },
    {
        "docstring": "",
        "name": "mal_spell_老师_n_2",
        "parents": [
            "n_-_h_le"
        ]
    },
    {
        "docstring": "",
        "name": "mal_spell_老师_n_3",
        "parents": [
            "n_-_h_le"
        ]
    },
    {
        "docstring": "",
        "name": "mal_spell_二十二_j",
        "parents": [
            "a_-_num_le"
        ]
    },
    {
        "docstring": "Not sure if this should be an interjection instead.",
        "name": "mal_spell_拜拜_v_1",
        "parents": [
            "v_-_le"
        ]
    },
    {
        "docstring": "",
        "name": "mal_spell_法文_n_1",
        "parents": [
            "n_-_le"
        ]
    },
    {
        "docstring": "",
        "name": "mal_spell_喜欢_v_1",
        "parents": [
            "v_np-spr_le"
        ]
    },
    {
        "docstring": "",
        "name": "mal_spell_喜欢_v_2",
        "parents": [
            "v_vp_sequi-spr_le"
        ]
    },
    {
        "docstring": "",
        "name": "mal_spell_喜欢_v_3",
        "parents": [
            "v_s-spr_le"
        ]
    },
    {
        "docstring": "Use of English.",
        "name": "mal_spell_空调_n_1",
        "parents": [
            "n_-_le"
        ]
    },
    {
        "docstring": "misspelling for 日本 or possible also for 日本国.",
        "name": "mal_spell_日本_n_1",
        "parents": [
            "n_-_l_pn_le"
        ]
    },
    {
        "docstring": "",
        "name": "mal_spell_对了_ij",
        "parents": [
            "adv_-_ij_le"
        ]
    },
    {
        "docstring": "",
        "name": "mal_spell_人_n_1",
        "parents": [
            "n_-_le"
        ]
    },
    {
        "docstring": "",
        "name": "mal_spell_法国人_n_1",
        "parents": [
            "n_-_le"
        ]
    },
    {
        "docstring": "",
        "name": "mal_spell_法国人_n_2",
        "parents": [
            "n_-_h_le"
        ]
    },
    {
        "docstring": "ZZF FB 6-4-2016 taking out 'rp' so PP and ADVP won't be S",
        "name": "root",
        "parents": [
            "phrase"
        ]
    },
    {
        "docstring": "This root is essentially the same as root, but it enforces STYLE to be strict.<br>FIXME: This is likely for generation purposes, should make sure and be clear.",
        "name": "root-style-strict",
        "parents": [
            "phrase"
        ]
    },
    {
        "docstring": "This root allows fragments; these should also probably be considered <br>ungrammatical for educational purposes;",
        "name": "frag",
        "parents": [
            "phrase"
        ]
    },
    {
        "docstring": "This root condition is mostly useful only for debuging purposes.<br>It allows you to parse single words as stand-alone utterances.",
        "name": "lex-root",
        "parents": [
            "word-or-lexrule"
        ]
    },
    {
        "docstring": "A very old comment mentions utterance-phrase as marking <br>utterances for dialogue constraints such as honorifications.<br>This was created by SSH and tries to add addressors and <br>addressees into ICONS. This is not in use at the moment.",
        "name": "root-utterance",
        "parents": [
            "utterance-phrase"
        ]
    },
    {
        "docstring": "This root is enforing that ADJ-predicates MUST have empty SPR;<br>As they always come with the option of 1 (and only 1), this will block both <br>multiple degree specifiers and sentences with bare adj-predicates;<br><b>[ex]</b>她 很 漂亮 。<br><b>[nex]*</b>她 漂亮 。",
        "name": "root_strict_adj",
        "parents": [
            "phrase"
        ]
    },
    {
        "docstring": "This root is similar root_strict_adj, but allows verbs, conjunctions and <br>prepositions to head a sentence. Contrary to root_strict_adj, it does not <br>enforce SYNSEM.LOCAL.CAT.VAL.SPR to be empty;<br><br>This root condition is allowing was allowing 'np-time-adp' to be strict roots because the head of all 'np-adp-phrase' is preposition. Forcing [MOD < >] rules out other things from being 'strict', like sentences headed by conjunctions that didn't satisfy this MOD requirement. However, this would still be consistent with the ERG, in treating sentences like 'But he is happy.' as fragments. So, we're trying.",
        "name": "root_strict_vpc",
        "parents": [
            "phrase"
        ]
    },
    {
        "docstring": "This root allows fragments; this should be considered 'robust' for educational purposes;<br>But this is important to have when treebanking.",
        "name": "root_rbst_frag",
        "parents": [
            "phrase"
        ]
    },
    {
        "docstring": "<b>[nex]*</b> 她 漂亮 吗 ？",
        "name": "root_ques_nospr_adj",
        "parents": [
            "phrase"
        ]
    },
    {
        "docstring": "This root is enforing that ADJ-predicates MUST have empty SPR;<br>As they always come with the option of 1 (and only 1), this will block both <br>multiple degree specifiers and sentences with bare adj-predicates;<br>We also say that this is only a problem in propositions (i.e. not questions)<br><b>[ex]</b>她 很 漂亮 。<br><b>[nex]*</b>她 漂亮 。",
        "name": "root_rbst_nospr_adj",
        "parents": [
            "phrase"
        ]
    },
    {
        "docstring": "",
        "name": "v_aux_ell-lr",
        "parents": [
            "v_aux_ell-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "head-comp",
        "parents": [
            "head-comp-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "subj-head",
        "parents": [
            "subj-head-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "spr-head",
        "parents": [
            "spr-head-phrase"
        ]
    },
    {
        "docstring": "head specifier rule used for adjectives and adverbs.",
        "name": "spr-head-noncl",
        "parents": [
            "spr-head-h-sem-phrase"
        ]
    },
    {
        "docstring": "This a version of the specifier head to join numerals with classifiers.<br>It inherits from 'spr-head-h-sem-phrase' and 'basic-head-spr-phrase' that is also used to join degree specifiers to adjectives and certain verbs.<br><br>In order to be more useful to capture 两 vs 二 distinction, we can further restrict the NON-HEAD-DTR to only allow<br><br>This will all have to be revised during the Marie Curie.   <br><br>Added [NON-HEAD-DTR.SYNSEM.LOCAL.CAT.HEAD [CARDINAL +]] to require that the numeral in this construction be compatible with CARDINAL +. Currently only  二 is marked as [CARDINAL -].",
        "name": "spr-head-cl",
        "parents": [
            "spr-head-h-sem-phrase"
        ]
    },
    {
        "docstring": "Noun-phrases without a determiner phrase (with or without classifiers).<br><b>[ex]</b> 她 喜欢 猫 。<br><b>[ex]</b> 她 买 了 两 只 猫 。<br><br>Both (猫) and (两 只 猫) are bare NPs.",
        "name": "bare-np",
        "parents": [
            "bare-np-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "0-nom-p",
        "parents": [
            "bare-nominal-postp-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "0-nom-d",
        "parents": [
            "bare-nominal-det-cl-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "0-nom-d-nocl",
        "parents": [
            "bare-nominal-det-nocl-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "0-nom-cls",
        "parents": [
            "bare-nominal-cls-phrase"
        ]
    },
    {
        "docstring": "This rule is currently marked as robust because it allows both common and measure nouns to be modified by a numeral without a classifier. While this is needed to some classes of nouns/cl (measure words) like 'cup' 'kilo' etc, it should definitely not be acceptable with common nouns.<br>There is currently no implementation of measure words, and they are sprinkled both as classifiers and common nouns. For this reason, it is not true that everything this mal-rule picks up is, in fact, ungrammatical. <br><br>This needs to be solved in the near future (during Marie Curie).",
        "name": "rbst-meas-np",
        "parents": [
            "meas-np-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "comp-head",
        "parents": [
            "comp-head-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "head-mod-int",
        "parents": [
            "head-adj-int-phrase"
        ]
    },
    {
        "docstring": "mod-head only for non classifiers.",
        "name": "mod-head-int",
        "parents": [
            "adj-head-int-noncls"
        ]
    },
    {
        "docstring": "mod-head only for classifiers.",
        "name": "mod-head-int-cls",
        "parents": [
            "adj-head-int-cls"
        ]
    },
    {
        "docstring": "",
        "name": "head-mod-scop",
        "parents": [
            "head-adj-scop-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "mod-head-scop",
        "parents": [
            "adj-head-scop-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "n1-top-coord",
        "parents": [
            "n1-top-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "n1-mid-coord",
        "parents": [
            "n1-mid-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "conj-coord",
        "parents": [
            "bottom-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "vp1-top-coord",
        "parents": [
            "vp1-top-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "s1-top-coord",
        "parents": [
            "s1-top-coord-rule"
        ]
    },
    {
        "docstring": "",
        "name": "opt-comp",
        "parents": [
            "head-opt-comp-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "opt-subj-decl",
        "parents": [
            "opt-subj-declarative-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "opt-subj-imp",
        "parents": [
            "opt-subj-imperative-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "comp-head-final",
        "parents": [
            "comp-head-final-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "filler-head",
        "parents": [
            "filler-head-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "extracted-comp",
        "parents": [
            "extracted-comp-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "extracted-subj",
        "parents": [
            "extracted-subj-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "n-n-compound",
        "parents": [
            "noun-noun-compound-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "prn-n-compound",
        "parents": [
            "pronoun-noun-compound-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "prp-n-compound",
        "parents": [
            "propernoun-noun-compound-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "rslt-1_12",
        "parents": [
            "rslt-1_12-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "rslt-12_12",
        "parents": [
            "rslt-12_12-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "rslt-1_1-sbj",
        "parents": [
            "rslt-1_1-sbj-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "rslt-1_1-obj",
        "parents": [
            "rslt-1_1-obj-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "rslt-1_1-ns",
        "parents": [
            "rslt-1_1-noshare-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "rslt-12_1-sbj",
        "parents": [
            "rslt-12_1-sbj-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "rslt-12_1-obj",
        "parents": [
            "rslt-12_1-obj-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "rslt-12_1-inv",
        "parents": [
            "rslt-12_1-inv-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "rslt-12_123",
        "parents": [
            "rslt-compound-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "rslt-123_123",
        "parents": [
            "rslt-compound-phrase"
        ]
    },
    {
        "docstring": "Rule to pump numbers nouns.",
        "name": "np-num",
        "parents": [
            "np-num-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "np-time-adp",
        "parents": [
            "np-time-adp-phrase"
        ]
    },
    {
        "docstring": "This is a rule that allows certain NP (i.e. mostly headed by locative relational nouns) to assume the role of an adjunct.<br><br>This is currently marked as robust because it is understood that in the majority of cases these locative adjuncts need to be included in a 在 phrase. However, in casual speech (not writting) and certain syntactic contexts (e.g. imperatives/suggestions) this is not necessary.",
        "name": "rbst-np-place-adp",
        "parents": [
            "np-place-adp-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "comp-marker",
        "parents": [
            "comp-marker-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "marker-comp",
        "parents": [
            "marker-comp-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "punct-comp",
        "parents": [
            "marker-comp-phrase"
        ]
    },
    {
        "docstring": ";ZZF/SSH 2015-04-01 to handle variations of ditransitive verbs<br><br>This is a rule has been restricted to refer to prepositional complements.<br>It seems like for sentences such as:<br>她 发 (给 你) (一 本 书) 。<br>We do need this head-2nd-comp rule. It performs the should be the same as head-comp, but it assumes the order of complements have shifted in the process.<br>   <br>她 发 (一 本 书) (给 你) 。    <br>Can use the normal head-comp twice so it the grammar currently sees  发 as taking an NP + PP .<br>If we give it a PP+ NP then we are taking the second complement first, hence the need to use this head-2nd-comp.",
        "name": "head-2nd-comp",
        "parents": [
            "head-2nd-comp-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "q-phrase",
        "parents": [
            "question-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "np-voc-adp",
        "parents": [
            "np-voc-adp-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "frg-np",
        "parents": [
            "frag-np-rule"
        ]
    },
    {
        "docstring": "",
        "name": "frag-vmod-int",
        "parents": [
            "frag-vmod-int-rule"
        ]
    },
    {
        "docstring": "",
        "name": "frag-vmod-scop",
        "parents": [
            "frag-vmod-scop-rule"
        ]
    },
    {
        "docstring": "",
        "name": "animate-lex-item",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "human-lex-item",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "non-human-lex-item",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "inanimate-lex-item",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "loc-lex-item",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "non-loc-lex-item",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "speaker-lex-item",
        "parents": [
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "[FIXME] This was blocking perfectly nice sentence such as: <br>你 喜欢 你们 的 外语系 吗 ？<br>As such I have disabled the honorific/non-honorific system from pronouns.",
        "name": "non-honorific-hearer-lex-item",
        "parents": [
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "honorific-hearer-lex-item",
        "parents": [
            "one-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "no-spr-no-spec-lex-item",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "redup-lex-item",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "question-item",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "nonque-item",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "bound-lex-item",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "All normal lex are not selected by the head. <br>Currently being contrasted with KEYS.KEY = selected_rel.",
        "name": "normal-lex",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "selected-lex",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "This type is to ensure that 1st COMPS of normal verbs have normal (non-empty) semantics.<br>This is necessary to ensure the contrast with separable verbs like 吃饭. Special<br>lexical entries for verbs like 吃 expect COMPS with the semantic type selected_rel, <br>such as the special 饭_n_selected_rel.<br>But in order to prevent normal verbs to also take these selected complements as<br>their own complements, we must ensure all complements of normal verbs are of <br>norm_rel.",
        "name": "norm-comps1-lex",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "arg1-noun-lex",
        "parents": [
            "norm-sem-lex-item",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "This inherits from 'normal-lex' which essentially says that these nouns can't be selected for (e.g. separable verbs);<br><br>noun-lex basically says that nouns will only have a specifier as ARG, <br>and that this specifier's head value is 'det' and it will, itself, be satisfied<br>concerning any specifier requirements.<br><br><br>[SYNSEM.CLASSIF -] is a new attempt at removing from being a head feature. All nouns will be marked as [CLASSIF -] by default, and this will only be changed to [CLASSIF +] by the mod-head-int rule for classifiers.",
        "name": "noun-lex",
        "parents": [
            "basic-noun-lex",
            "basic-one-arg",
            "no-hcons-lex-item",
            "normal-lex"
        ]
    },
    {
        "docstring": "General type for nouns that take a complement (i.e. relational nouns).<br><br>The current assumption is that these nouns DO NOT take a specifier (however this is heavily influenced by the fact that only locative relational nouns have been tought about). Another related consequence of this is that it introces its own quantifier. (This could be changed if other types of relational nouns are introduced)<br><br>This does not constraint the optionality of the COMP (needs to added further down the hierarchy). <br><br>========================<br>'arg1-noun-lex' inherits from 'norm-sem-lex-item'>>'single-rel-lex-item' that introduces a constraint where there is only a single thing on the RELS list. This is causing problem when we want to add the quantifier directly on the RELS list. The solution for this, is to inherit directly from 'norm-hook-lex-item', which does not put this constraint.<br><br>These nouns (and phrases build by them) will get a head feature [LOC +]. This head feature was originally in the grammar but was never used.  This feature, however, should be used to create a mal-rule that can create 'prepositional locative phrases' without 在.  In written Mandarin, 在 is expected in propositions (with some expections in imperatives/suggestions). Not using 在 makes the sentence overly casual, and should be marked for correction.<br><br>The restriction [SORT common-s] on the complement prevents both proper nouns and pronouns to be taken as complements -- which is the desired behavior.<br><br><br>The restriction [COMPS < >] for the relational noun's complement is to future proof: in case there are other relational nouns in the future, we would want them to have their COMPS satisfied (or dropped) before being picked up by another relational noun.",
        "name": "relational-noun-lex",
        "parents": [
            "norm-hook-lex-item",
            "basic-one-arg",
            "normal-lex"
        ]
    },
    {
        "docstring": "",
        "name": "relational-opt-comp-noun-lex",
        "parents": [
            "relational-noun-lex"
        ]
    },
    {
        "docstring": "",
        "name": "relational-obl-comp-noun-lex",
        "parents": [
            "relational-noun-lex"
        ]
    },
    {
        "docstring": "This is specifically for locative relational nouns with optional complements.<br>It introduces the head feature [LOC +], which allows it to go through a pumping rule to become an adjuct.<br>And it also introduces some contraints on the kind of complements it can take. Currently we want to say that these relational nouns cannot take pronouns or proper nouns (i.e. SORT common-s). And also that it cannot take other nouns that are marked for [LOC +], which would stop sentences like: <br><b>[nex]*</b> 她 在 网上 上 学习 汉语 。<br>The problem with the sentence above is that there will be some (few) nouns that are itself marked for [LOC +], and these would not be able to be picked up by other locative relational nouns.<br><br>However this would also block certain nonsensical senteces such as:<br><b>[nex]*</b> 她 在 上边 上边 学习 汉语 。<br>[FIXME] This is, in principle, not a bit problem, but not necessarily impossible (???)",
        "name": "relational-opt-comp-loc-noun-lex",
        "parents": [
            "relational-opt-comp-noun-lex"
        ]
    },
    {
        "docstring": "E.g. this is for locative relational nouns with obligatory complements (e.g. 里, 上, 右), that need to take a complement and can't be used by themselves.<br><br>It introduces the head feature [LOC +], which allows it to go through a pumping rule to become an adjuct.<br>And it also introduces some contraints on the kind of complements it can take. Currently we want to say that these relational nouns cannot take pronouns or proper nouns (i.e. SORT common-s). And also that it cannot take other nouns that are marked for [LOC +], which would stop sentences like: <br><b>[nex]*</b> 她 在 网上 上 学习 汉语 。<br>The problem with the sentence above is that there will be some (few) nouns that are itself marked for [LOC +], and these would not be able to be picked up by other locative relational nouns.<br><br>However this would also block certain nonsensical senteces such as:<br><b>[nex]*</b> 她 在 上边 上边 学习 汉语 。<br>[FIXME] This is, in principle, not a bit problem, but not necessarily impossible (???)",
        "name": "relational-obl-comp-loc-noun-lex",
        "parents": [
            "relational-obl-comp-noun-lex"
        ]
    },
    {
        "docstring": "",
        "name": "common-noun-lex",
        "parents": [
            "noun-lex"
        ]
    },
    {
        "docstring": "Inheriting from 'non-loc-lex-item' (i.e. [LOC na-or--]) ensures that a NP headed by 'common-noun-lex' can't be pumped into a locative adjunct.",
        "name": "nonloc-common-noun-lex",
        "parents": [
            "common-noun-lex",
            "non-loc-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "count-noun-lex",
        "parents": [
            "nonloc-common-noun-lex"
        ]
    },
    {
        "docstring": "",
        "name": "mass-noun-lex",
        "parents": [
            "nonloc-common-noun-lex"
        ]
    },
    {
        "docstring": "This NONSUBJ feature is used to block certain classes of nouns from becoming subjects.<br>The 'SORT time-s' should allow these nouns to be selected for some constructions. <br>FCB: we can change NONSUBJ to bool and check if the ambiguity shoot up, if it's too bad we might want to say instead that most (99%) of the verbs don't accept a time-s subject. but ADJ-predicates do, and 是 also does. <br><br>Testing removing NONSUBJ as a restriction. This was blocking sentences like:<br><b>[ex]</b> 一月 是 我 最 喜欢 的 月份 。<br>Or <br><b>[ex]</b> 昨天 很 热 。<br>from parsing or from parsing with adequate semantics.<br>This does not rule out the possibility of blocking certain types of subjects<br>in major classes of verbs (due to semantic oddity). this can use SORT on SUBJ.<br><br>Inheriting from 'non-loc-lex-item' (i.e. [LOC na-or--]) ensures that a NP headed by 'common-noun-lex' can't be pumped into a locative adjunct.",
        "name": "basic-time-noun-lex",
        "parents": [
            "basic-one-arg",
            "basic-icons-lex-item",
            "non-loc-lex-item"
        ]
    },
    {
        "docstring": "This level exists to differentiate between time-noun-lex and bound-time-noun-lex.<br>So there must be a reason for norm-sem-lex-item & no-hcons-lex-item  [FIXME] find <br>out what that is.",
        "name": "norm-time-noun-lex",
        "parents": [
            "basic-time-noun-lex",
            "norm-sem-lex-item",
            "no-hcons-lex-item"
        ]
    },
    {
        "docstring": "For example, for entries like: 'day'",
        "name": "time-noun-lex",
        "parents": [
            "norm-time-noun-lex"
        ]
    },
    {
        "docstring": "Maybe only for: 'o'clock' and 'minute'",
        "name": "bound-time-noun-lex",
        "parents": [
            "basic-time-noun-lex"
        ]
    },
    {
        "docstring": "This type introduces named_rel and proper_q_rel in named entities.<br><b>[ex]</b> 张三 哭 了<br><br>One could select this by saying it's a named relation;",
        "name": "proper-name-lex",
        "parents": [
            "quant-pronproper-lex",
            "zero-arg-nonque"
        ]
    },
    {
        "docstring": "SSH 2014-09-11: Locative Proper Names (e.g. 北京).<br>我 要 去 北京: I would like to go to Beijing.<br>*我 要 去 李四 / 我 要 去 李四 的 家",
        "name": "loc-name-lex",
        "parents": [
            "proper-name-lex",
            "loc-lex-item",
            "non-human-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "nonloc-name-lex",
        "parents": [
            "proper-name-lex",
            "non-loc-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "human-name-lex",
        "parents": [
            "nonloc-name-lex",
            "human-lex-item"
        ]
    },
    {
        "docstring": "For Surnames. Usually one character long.",
        "name": "surname-lex",
        "parents": [
            "human-name-lex"
        ]
    },
    {
        "docstring": "SSH 2014-11-13: pronouns introduce a quant-relation. <br>Pronouns don't have NON-LOCAL.SLASH and REL.<br>Pronouns are not of SORT 'pronproper-s' (pronoun or proper name).",
        "name": "quant-nom-lex",
        "parents": [
            "norm-hook-lex-item",
            "zero-arg-nonslash",
            "zero-arg-nonrel"
        ]
    },
    {
        "docstring": "things ther are eitehr pronouns or proper nouns inhertit from this <br>and get the right SORT",
        "name": "quant-pronproper-lex",
        "parents": [
            "quant-nom-lex"
        ]
    },
    {
        "docstring": "Pronouns don't have NON-LOCAL.SLASH and REL",
        "name": "basic-pronoun-lex",
        "parents": [
            "quant-pronproper-lex"
        ]
    },
    {
        "docstring": "",
        "name": "personal-pronoun-lex",
        "parents": [
            "basic-pronoun-lex",
            "zero-arg-nonque",
            "non-loc-lex-item"
        ]
    },
    {
        "docstring": "This type is the super-type of many different interrogative pronouns.<br>One important distinction is that some of these should not be able to be pumped into place adjucts (but some should, e.g. 哪儿, 哪里).<br><br>It is very likely that, in the future, 什么_n_q would be removed from this cat (to become an adjectival question word), but the problem will remain with 谁, 哪, etc.",
        "name": "super-wh-pronoun",
        "parents": [
            "quant-pronproper-lex"
        ]
    },
    {
        "docstring": "This is the subtype for generic, it is assumed that it CANNOT be pumped to a place adjunct.<br><br>[LOC -] blocking these from being pumped into place locatives, without the use of a preposition or locative noun.",
        "name": "wh-pronoun",
        "parents": [
            "quant-pronproper-lex"
        ]
    },
    {
        "docstring": "This type is for locative interrogative pronouns, such as 哪里 and 哪儿.<br><br>[LOC +] allowing these to be pumped into place locatives, without the use of a preposition or locative noun.",
        "name": "loc-wh-pronoun",
        "parents": [
            "super-wh-pronoun"
        ]
    },
    {
        "docstring": "",
        "name": "loc-pronoun-lex",
        "parents": [
            "basic-pronoun-lex",
            "zero-arg-nonque",
            "loc-lex-item"
        ]
    },
    {
        "docstring": "SSH 2014-11-13: 大家 (everyone), etc.<br><br> generic_n_rel can be further specified as one of these in the lexical entry:<br>zhong.tdl:146:thing_n_rel := generic_n_rel.<br>zhong.tdl:147:place_n_rel := generic_n_rel.<br>zhong.tdl:148:person_n_rel := generic_n_rel.<br>zhong.tdl:149:time_n_rel := generic_n_rel",
        "name": "quant-noun-lex",
        "parents": [
            "quant-nom-lex",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "quant-common-noun-lex",
        "parents": [
            "quant-noun-lex"
        ]
    },
    {
        "docstring": "",
        "name": "nominalizer-lex",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "partitive-lex",
        "parents": [
            "basic-one-arg",
            "no-icons-lex-item"
        ]
    },
    {
        "docstring": "Even though the features that are defined here seem best only used by verbs (i.e. head :+ ), doing this eliminates many parses (although many were problem incorrect to start with). <br><br>One weird example seems to be the use of 的.<br> 厚厚 的 地毯",
        "name": "+vj",
        "parents": []
    },
    {
        "docstring": "",
        "name": "+vjr",
        "parents": []
    },
    {
        "docstring": "VAL.SPR is not set to empty < > to allow some verbs to take degree specifiers",
        "name": "verb-lex",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "main-verb-lex",
        "parents": [
            "verb-lex",
            "basic-verb-lex",
            "tentative-lex-dtr"
        ]
    },
    {
        "docstring": "These are verbs that can take degree specifiers (mental activities and states).<br><b>[ex]</b>他 很 喜欢 狗 。<br>FIXME: Why isn't this inheriting from verb-lex instead of lex-item?",
        "name": "verb-spr-item",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "These are verbs that can't take degree specifiers (i.e., most of the verbs).<br><b>[nex]*</b>他 很 买 狗 。<br>FIXME: Why isn't this inheriting from verb-lex instead of lex-item?",
        "name": "verb-no-spr-item",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "aux-lex",
        "parents": [
            "verb-lex"
        ]
    },
    {
        "docstring": "",
        "name": "intransitive-lex-item",
        "parents": []
    },
    {
        "docstring": "",
        "name": "intransitive-verb-lex",
        "parents": [
            "main-verb-lex",
            "intransitive-lex-item",
            "aspect-rule-dtr"
        ]
    },
    {
        "docstring": "This is the parent of both normal transitive lex items and separable transive lex item.<br><br>This is to allow sep-verbs not to have an ARG 2 while taking a complement.<br>It says: they as all in the same clause. (clause-key is the same).",
        "name": "transitive-super-lex-item",
        "parents": [
            "basic-two-arg-no-hcons",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "This was redefined from the original Matrix type to allow sentential subjects.<br>In normal transitive lexical items (verbs) the ARG2 is coindexed with the second <br>thing of the Argument Structure.<br><br>This split (from 'transitive-sep-lex-item'), also allows us to make another distinction: normal transitive-lex-items will require a COMP that is [BOUND -], and transitive-sep-lex-items will require a COMP that is [BOUND +]. This restriction will no longer be included as part of head-comp rule.",
        "name": "transitive-lex-item",
        "parents": [
            "transitive-super-lex-item"
        ]
    },
    {
        "docstring": "In the case of separable transitive lexical items (i.e. sep-verbs), there won't be a ARG2 in the semantics, even though it will be linked by a head-comp rule.<br><br>This split (from 'transitive-lex-item'), also allows us to make another distinction: normal transitive-lex-items will require a COMP that is [BOUND -], and transitive-sep-lex-items will require a COMP that is [BOUND +]. This restriction will no longer be included as part of head-comp rule.",
        "name": "transitive-sep-lex-item",
        "parents": [
            "transitive-super-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "transitive-verb-lex",
        "parents": [
            "main-verb-lex",
            "transitive-lex-item",
            "aspect-rule-dtr"
        ]
    },
    {
        "docstring": "",
        "name": "cp-subj-verb-lex",
        "parents": [
            "main-verb-lex",
            "transitive-lex-item",
            "aspect-rule-dtr",
            "verb-no-spr-item"
        ]
    },
    {
        "docstring": "",
        "name": "s-comp-verb-lex",
        "parents": [
            "main-verb-lex",
            "basic-two-arg-no-hcons",
            "basic-icons-lex-item",
            "aspect-rule-dtr"
        ]
    },
    {
        "docstring": "",
        "name": "v_s-comp-lex",
        "parents": [
            "s-comp-verb-lex",
            "verb-no-spr-item"
        ]
    },
    {
        "docstring": "",
        "name": "v_s-comp-spr-lex",
        "parents": [
            "s-comp-verb-lex",
            "verb-spr-item"
        ]
    },
    {
        "docstring": "",
        "name": "vp-comp-verb-lex",
        "parents": [
            "main-verb-lex",
            "basic-two-arg",
            "basic-icons-lex-item",
            "aspect-rule-dtr"
        ]
    },
    {
        "docstring": "",
        "name": "vp-comp-verb-seq-lex",
        "parents": [
            "vp-comp-verb-lex"
        ]
    },
    {
        "docstring": "",
        "name": "np-xp-comp-verb-lex",
        "parents": [
            "main-verb-lex",
            "basic-three-arg",
            "basic-icons-lex-item",
            "verb-no-spr-item"
        ]
    },
    {
        "docstring": "The [OPT -] for the first complement predicts that these verbs can never drop <br>this first complement (although the second one is acceptable).",
        "name": "np-vp-comp-verb-lex",
        "parents": [
            "np-xp-comp-verb-lex"
        ]
    },
    {
        "docstring": "",
        "name": "np-ap-comp-ba-verb-lex",
        "parents": [
            "np-xp-comp-verb-lex"
        ]
    },
    {
        "docstring": "Verb with two complements. The first is headed by a noun, and the second is headed by an adjective.<br>e.g. 'I consider him old'",
        "name": "np-ap-comp-verb-lex",
        "parents": [
            "np-xp-comp-verb-lex"
        ]
    },
    {
        "docstring": "",
        "name": "np-vp-comp-verb-oeq-lex",
        "parents": [
            "np-vp-comp-verb-lex"
        ]
    },
    {
        "docstring": "",
        "name": "np-vp-comp-verb-seq-lex",
        "parents": [
            "np-vp-comp-verb-lex"
        ]
    },
    {
        "docstring": "",
        "name": "v_np-s_lex",
        "parents": [
            "main-verb-lex",
            "basic-three-arg",
            "basic-icons-lex-item",
            "verb-no-spr-item"
        ]
    },
    {
        "docstring": "",
        "name": "np-vp-comp-verb-light-lex",
        "parents": [
            "np-vp-comp-verb-lex",
            "basic-three-arg-no-hcons"
        ]
    },
    {
        "docstring": "These verbs take two COMPs: a PP (optional?)  + and a non-optional S.<br><br>There is currently only 1 verb under this type: 保证<br>I assume this was to be able to deal withsentences like:<br><b>[ex]</b> 我 向 你 保证 学习 。<br>(I promise you to study)<br>But this is still not parsing as predicted.  [向 你] cannot be a COMP.<br>[FIXME][FCB] Maybe this has to do with being a pre-head COMP?",
        "name": "pp-s-comp-verb-lex",
        "parents": [
            "main-verb-lex",
            "basic-three-arg-no-hcons",
            "basic-icons-lex-item",
            "aspect-rule-dtr",
            "verb-no-spr-item"
        ]
    },
    {
        "docstring": "Currently all ditransitive verbs are [BOUND -], blocking the complements of separable verbs from unifying.",
        "name": "super-ditrans-verb-lex",
        "parents": [
            "main-verb-lex",
            "aspect-rule-dtr",
            "verb-no-spr-item"
        ]
    },
    {
        "docstring": "",
        "name": "ditrans-verb-lex",
        "parents": [
            "ditransitive-lex-item",
            "super-ditrans-verb-lex"
        ]
    },
    {
        "docstring": "This seems to be an alternative for ditransitive verbs where the second complement is QEQ'ed with the verb's ltop. It was exclusively used for 'ditrans-pp-verb-lex', which specifies the <br><br>[FIXME] I believe this is generating some weird parses.",
        "name": "ditransitive-lex-item-2",
        "parents": [
            "basic-three-arg",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "ditrans-pp-verb-lex",
        "parents": [
            "ditransitive-lex-item-2",
            "super-ditrans-verb-lex"
        ]
    },
    {
        "docstring": "",
        "name": "ditrans-preverbal-pp-verb-lex",
        "parents": [
            "ditrans-pp-verb-lex"
        ]
    },
    {
        "docstring": "This type is for ditransitive verbs where the second complement is a PP (unconstrained).<br>The original name was 'trans-loc-verb-lex' but this seems a bit",
        "name": "trans-loc-verb-lex",
        "parents": [
            "basic-three-arg-no-hcons",
            "main-verb-lex",
            "basic-icons-lex-item",
            "aspect-rule-dtr",
            "verb-no-spr-item"
        ]
    },
    {
        "docstring": "",
        "name": "v_intrans-verb-lex",
        "parents": [
            "intransitive-verb-lex",
            "verb-no-spr-item"
        ]
    },
    {
        "docstring": "",
        "name": "v_intrans-verb-spr-lex",
        "parents": [
            "intransitive-verb-lex",
            "verb-spr-item"
        ]
    },
    {
        "docstring": "",
        "name": "v_trans-verb-lex",
        "parents": [
            "transitive-verb-lex",
            "verb-no-spr-item"
        ]
    },
    {
        "docstring": "",
        "name": "v_trans-verb-spr-lex",
        "parents": [
            "transitive-verb-lex",
            "verb-spr-item"
        ]
    },
    {
        "docstring": "Currently this is being used for sentences like: 学校 里 有 狗 叫<br>[FIXME] It's not clear whether this is absolutely necessary, or why is it not picking up examples such as 有 一 个 人 来 我 的 家 。<br><br>The subject is now requesting for [ HEAD noun & [LOC +] ] to account for the new way relational locative nouns are being handled.<br><br>[FIXME] Should double check if 在 phrases are not equally acceptable. However, it is also plausible to assume that in the presence of a 在 phrase, it should be handled as an adjunct. This option (which would require discharging the subject), however, is being blocked by [EXISTV +] -- which is being blocked by 'opt-subj-declarative-phrase'.",
        "name": "v_exist-lex",
        "parents": [
            "basic-three-arg",
            "verb-lex",
            "basic-verb-lex",
            "basic-icons-lex-item",
            "verb-no-spr-item"
        ]
    },
    {
        "docstring": "",
        "name": "v_light-verb-lexeme",
        "parents": [
            "main-verb-lex",
            "basic-two-arg-no-hcons",
            "basic-icons-lex-item",
            "verb-no-spr-item"
        ]
    },
    {
        "docstring": "",
        "name": "v_light-verb-lex",
        "parents": [
            "v_light-verb-lexeme"
        ]
    },
    {
        "docstring": "",
        "name": "v_sequi-lex",
        "parents": [
            "vp-comp-verb-seq-lex",
            "trans-first-arg-control-lex-item",
            "verb-no-spr-item"
        ]
    },
    {
        "docstring": "",
        "name": "v_sequi-spr-lex",
        "parents": [
            "vp-comp-verb-seq-lex",
            "trans-first-arg-control-lex-item",
            "verb-spr-item"
        ]
    },
    {
        "docstring": "",
        "name": "v_np-vp_oequi-lex",
        "parents": [
            "np-vp-comp-verb-oeq-lex",
            "ditrans-second-arg-control-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "v_np-vp_sequi-lex",
        "parents": [
            "np-vp-comp-verb-seq-lex",
            "ditrans-first-arg-control-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "v_np-vp_light-lex",
        "parents": [
            "np-vp-comp-verb-light-lex"
        ]
    },
    {
        "docstring": "Basic transitive verb type with a single prepositional complement.<br>The value [HEAD adp] of the complement technically allows the complment to be <br>either a preposition or a postposition.<br><br>Selection of which preposition is currently done through adding something<br>similar to [LOCAL.CAT.HEAD.PFORM gei] on the complment of each lexical entry.<br><br>In due time, and given the scarcity of such verbs and prepositions, it could <br>probably make sense to create a verb type for each prepositional complement <br>(e.g. v_zai_pp).<br><br>[FIXME][FCB]?<br>Semantically, these verbs are linking the prepositional phrase to the subject.<br>This strikes me as odd. The ERG treats 'He lives in Paris' as a prepositional <br>verb but does not link the pronoun with 'in Paris'.<br><br>But currently, ZHONG parses: <br><b>[ex]</b> 她 坐 在 沙发 。<br>But links things incorrectly.",
        "name": "v_pp-lex",
        "parents": [
            "basic-two-arg",
            "main-verb-lex",
            "basic-icons-lex-item",
            "verb-no-spr-item"
        ]
    },
    {
        "docstring": "",
        "name": "v_suo_lex",
        "parents": [
            "basic-one-arg-no-hcons",
            "verb-lex",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "v_npvpslash_type_lex",
        "parents": [
            "basic-two-arg-no-hcons",
            "verb-lex",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "v_bei_type_lex",
        "parents": [
            "v_npvpslash_type_lex"
        ]
    },
    {
        "docstring": "",
        "name": "v_ba_type_lex",
        "parents": [
            "v_npvpslash_type_lex"
        ]
    },
    {
        "docstring": "",
        "name": "v_weather_type_lex",
        "parents": [
            "verb-lex",
            "basic-icons-lex-item",
            "aspect-rule-dtr",
            "verb-no-spr-item"
        ]
    },
    {
        "docstring": "",
        "name": "basic-adv-lex",
        "parents": [
            "single-rel-lex-item",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "basic-scopal-adv-lex",
        "parents": [
            "basic-adv-lex",
            "scopal-mod-lex",
            "raise-index-mod-lex-item"
        ]
    },
    {
        "docstring": "Its ARG1 refers to what it modifies, through XARG. CONT.HOOK.XARG #ind",
        "name": "basic-int-adv-lex",
        "parents": [
            "basic-adv-lex",
            "intersective-mod-lex",
            "norm-hook-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "int-adv-vp-pre",
        "parents": [
            "basic-int-adv-lex"
        ]
    },
    {
        "docstring": "",
        "name": "int-adv-vp-pre-no-rel",
        "parents": [
            "intersective-mod-lex",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "We are adding the ability for degrees specifiers to be itself degree specified to allow sentences like  He is very very very tall.  (we follow the ERG) <br>We could say SPR < [] >  so there is only 1 thing there.... for now all SPR are degree specifiers in ZHONG.",
        "name": "deg-int-adv-vp-pre",
        "parents": [
            "basic-int-adv-lex"
        ]
    },
    {
        "docstring": "",
        "name": "int-adv-v-pre",
        "parents": [
            "intersective-mod-lex",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "int-adv-s-pre",
        "parents": [
            "intersective-mod-lex",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "int-adv-s-pre-no-rel",
        "parents": [
            "int-adv-s-pre"
        ]
    },
    {
        "docstring": "",
        "name": "int-adv-s-pre-rel",
        "parents": [
            "int-adv-s-pre"
        ]
    },
    {
        "docstring": "",
        "name": "int-adv-s-post",
        "parents": [
            "basic-int-adv-lex"
        ]
    },
    {
        "docstring": "Tentatively we are setting the MOD's COMP value to empty (< >) to avoid ambiguity on the level of attachment. <br><br>FIXME:<br>For educational purposes, we want to block 不 before degree specifiers (e.g., 他 不 很 高 。). <br>But it is not clear whether this is problematic in casual speech -- we might not want to block it altogether.<br>We experimented with setting the SPR to  <[ ]> (a list of length one) to make 不 select the adjective before the degree specifier. But this does not work:<br>Verbs come with empty specifiers (SPR < >). Adjectives come looking for a optional single specifier (SPR <[ ]>) that is their degree specifier.<br>Therefore, we can't use SPR to block the order in which 不 appears.<br><br><b>[ex]</b>??? 他 不 很 高 。<br><b>[ex]</b>他 不 高 。<br><b>[ex]</b>他 很 不 高 。<br><b>[ex]</b>他 很 不 好吃 。<br><b>[ex]</b>你 不 知道 。<br><br><br>Let's say: Thre is a  the scopal BU could be used for 1,2,5 and then we could ave a lexical BU<br>Lexical BU would be a degree specifier...  and scopal BU does not take degree spc.<br><br>EVERYONE NOT HAPPY.  >>> <br><br>If we have a non-scopal that REQUIRES a degree-SPR.  +  a scopal that IS a degree-SPR.<br>maybe a specl head-spr rule : the normal rule would be intersective; This would have to ALSO allow to be specified FURTHER <br>the special one would be scopal and allow BU",
        "name": "neg-adv-lex",
        "parents": [
            "basic-scopal-adv-lex"
        ]
    },
    {
        "docstring": "This is basically restricted to VPs or Sentences.  [FIXME?]<br>Nothing is said about the subject (only COMPS).<br>Even though the name is not clear, it is pre-head (which makes the existence <br>of a 'scop-adv-prehd-lex' somewhat confusing -- should be FIXME).<br>This correctly predicts that there are some adverbs that can appear <br>both before pre-VP or pre-S. E.g. 可能<br><b>[ex]</b> 可能 他 不 会 去 。<br><b>[ex]</b> 他 可能 不 会 去 。",
        "name": "scop-adv-lex",
        "parents": [
            "basic-scopal-adv-lex"
        ]
    },
    {
        "docstring": "This is a subtype of scop-adv-lex strictly for sentences.<br>This predicts that some adverbs can only appear as pre-head of a sentence.<br>This is (at the very least) necessary to support certain mal-rules such <br>as incorrect use of 也. 也 cannot appear to the left of the subject. <br>SUBJ < > also happens in for extracted subjects, so we need to block it.<br>I tried to do that by asserting NON-LOCAL.SLASH.LIST < > (is empty)<br>Not sure if this is the best way. [FIXME][FCB-CHECK].",
        "name": "scop-adv-s-prehd-lex",
        "parents": [
            "basic-scopal-adv-lex"
        ]
    },
    {
        "docstring": "This rule allows adverbs to modify both VP and APs, but it requires that the subject is <br>not yet satisfied.<br>The name of this rule, however, clashes with 'scop-adv-lex', as they are both pre-head.<br>This should be FIXME. <br>This correctly predicts that there are some adverbs that must come between the subject <br>and the VP/AP. E.g. 也 and 都<br>However there is some necessary order for some of these adverbs that is not yet captured.<br><b>[ex]</b> 他 也 会 去 。<br><b>[nex]*</b> 也 他 会 去 。<br><b>[ex]</b> 他们 都 会 去 。<br><b>[nex]*</b> 都 他们 会 去 。",
        "name": "scop-adv-prehd-lex",
        "parents": [
            "basic-scopal-adv-lex"
        ]
    },
    {
        "docstring": "",
        "name": "scop-adv-posthd-lex",
        "parents": [
            "basic-scopal-adverb-lex"
        ]
    },
    {
        "docstring": "",
        "name": "tag-adv-lex",
        "parents": [
            "scop-adv-posthd-lex"
        ]
    },
    {
        "docstring": "Lexical type for interjections (which may appear at the beginning or the end of a sentence).<br>Interjections are being treated as sentencial adverbs. (e.g. 哎. 哦, 嗯, 噢, 哎呀)<br>The valus of HEAD and VAL inside MOD ensured that only sentences can be modified by these.<br><br>This does not specify the value for POSTHEAD. There are two children of this type that <br>further restrict lexical entries that to be strictly pre-head or post-head.<br><br>[FIXME] Try to understand and document [PUNCTUATED na-or--] [L-PERIPH -] [R-PERIPH +]<br><br><br>Added noun as possible value to the HEAD to allow sentences like:<br><b>[ex]</b> 外婆 ， 您好 ！<br>These sentences are then licensed by a strict root condition through 'np-voc-adp'.<br><br><br>[NONSUBJ +] to prevent ambiguity in the attachment of interjections. Without it, it could attach both to the NP before becoming a subject, and to the full sentence. <br><br><br>[INTERJECTED +] makes anything modified by an interjection also [INTERJECTED +].",
        "name": "interjection-lex",
        "parents": [
            "basic-scopal-adv-lex"
        ]
    },
    {
        "docstring": "Strictly pre-sentence interjections.<br><br>[PUNCTUATED na-or--] on pre-sentence interjections delays the punctionation attachment to the end (i.e. highest).",
        "name": "interjection-prehd-lex",
        "parents": [
            "interjection-lex"
        ]
    },
    {
        "docstring": "Strictly post-sentence interjections.",
        "name": "interjection-posthd-lex",
        "parents": [
            "interjection-lex"
        ]
    },
    {
        "docstring": "",
        "name": "conj-lex",
        "parents": []
    },
    {
        "docstring": "",
        "name": "conj-x-lex",
        "parents": [
            "conj-lex"
        ]
    },
    {
        "docstring": "",
        "name": "conj-e-lex",
        "parents": [
            "conj-lex"
        ]
    },
    {
        "docstring": "This takes a sentence (with empty satisfied) as complement. And expects to modify (MOD) something with empty COMPS (but it says nothing about the SUBJ of what it modifies, this might be incorrect).<br><br><br>[FIXED] This was expecting something headed by a verb as complement, and saying that it can only modify something also headed by a verb. This sounds profoundly wrong...  conjunctions can also take adjectival predicate sentences! This is either too constrained, or we need to create various subtypes.<br><br>LMC: Changed this to +vj (at least), let's see how bad it gets in ambiguity.<br><br>[FIXME] conj_-_sub-pre_le  can take both punctuated and non-punctuated things, if we block taking punctuated things, we can force punctuation to attach after, seems reasoable and saves spurious ambiguity",
        "name": "subord-conj-lex",
        "parents": [
            "basic-subord-conjunction-lex",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "subord-conj-pre-lex",
        "parents": [
            "subord-conj-lex"
        ]
    },
    {
        "docstring": "",
        "name": "subord-conj-pre-preh-lex",
        "parents": [
            "subord-conj-pre-lex"
        ]
    },
    {
        "docstring": "",
        "name": "subord-conj-post-lex",
        "parents": [
            "subord-conj-lex"
        ]
    },
    {
        "docstring": "",
        "name": "subj-raise-aux",
        "parents": [
            "aux-lex",
            "trans-first-arg-raising-lex-item",
            "verb-no-spr-item"
        ]
    },
    {
        "docstring": "",
        "name": "subj-raise-aux-with-pred",
        "parents": [
            "subj-raise-aux",
            "norm-sem-lex-item",
            "trans-first-arg-raising-lex-item-1"
        ]
    },
    {
        "docstring": "",
        "name": "v_aux-aux-lex",
        "parents": [
            "subj-raise-aux-with-pred"
        ]
    },
    {
        "docstring": "",
        "name": "imperative-aux-lex",
        "parents": [
            "subj-raise-aux-with-pred"
        ]
    },
    {
        "docstring": "The [COP +] feature identifies 是 as a copula, which is useful to use in constraints of other rules. For example, [COP +] can't be used in VV(rslt) constructions.<br><b>[ex]</b>他 是 张三<br><br>Sentences like:<br><b>[ex]</b> 我 就 是 。<br>Shows that the previous [ OPT - ] on COMPS was incorrect.",
        "name": "cop-verb-lex",
        "parents": [
            "transitive-verb-lex",
            "verb-no-spr-item"
        ]
    },
    {
        "docstring": "",
        "name": "cop-verb-cpsubj-lex",
        "parents": [
            "main-verb-lex",
            "basic-two-arg-no-hcons",
            "basic-icons-lex-item",
            "verb-no-spr-item"
        ]
    },
    {
        "docstring": "",
        "name": "cop-verb-cpcomp-lex",
        "parents": [
            "basic-one-arg",
            "verb-lex",
            "basic-verb-lex",
            "basic-icons-lex-item",
            "verb-no-spr-item"
        ]
    },
    {
        "docstring": "adding in focus information into ICONS for SHIDE emphatic structures other than scoping modifiers.",
        "name": "focus-icons-norm-lex-item",
        "parents": [
            "one-icons-lex-item"
        ]
    },
    {
        "docstring": "adding in focus info for emphasizing scoping adverbs. The scopal adverb's INDEX is the same as its MOD's, which leads to ICONS having the same value for IARG1/2. Using LKEYS.KEYREL.ARG0 avoids this problem. It only works for word level as LKEYS is not visible at phrase level, therefore can't be used for BU+AUX.",
        "name": "focus-icons-scop-lex-item",
        "parents": [
            "one-icons-lex-item"
        ]
    },
    {
        "docstring": "The first item on COMPS is the emphasized constituent.",
        "name": "shi-emph-lex",
        "parents": [
            "no-rels-hcons-lex-item",
            "verb-no-spr-item"
        ]
    },
    {
        "docstring": "",
        "name": "shi-other-dep-lex",
        "parents": [
            "shi-emph-lex",
            "basic-three-arg-no-hcons"
        ]
    },
    {
        "docstring": "<b>[ex]</b>他 是 一定 会 哭 的<br>INDEX and LTOP of the modified is the same as those of DeP, which are the same as those of the embedded VP in DeP.<br>ARGS: list of children of rule. ARG-ST: subj + comps. XARG for the thing that pp or advp is modifying.",
        "name": "shi-mod-dep-lex",
        "parents": [
            "shi-other-dep-lex"
        ]
    },
    {
        "docstring": "<b>[ex]</b>他 是 昨天 哭 的",
        "name": "shi-mod-int-dep-lex",
        "parents": [
            "shi-mod-dep-lex",
            "focus-icons-norm-lex-item"
        ]
    },
    {
        "docstring": "<b>[ex]</b>他 是 绝对 会 完成 任务 的<br><b>[ex]</b>他 是 绝对 哭 了 的<br><b>[ex]</b>他 是 绝对 不 会 完成 任务 的",
        "name": "shi-mod-scop-dep-lex",
        "parents": [
            "shi-mod-dep-lex",
            "focus-icons-scop-lex-item"
        ]
    },
    {
        "docstring": "linking aux and verb up. This leads to the correct qeq result.<br><b>[ex]</b>他 是 会 哭 的<br><b>[ex]</b>他 是 不 会 哭 的",
        "name": "shi-aux-dep-lex",
        "parents": [
            "shi-other-dep-lex",
            "focus-icons-norm-lex-item"
        ]
    },
    {
        "docstring": "<b>[ex]</b>是 他 完成 任务 的<br><b>[ex]</b>是 我 邀请 他 来 的<br>How to indicate then there can be a slashed argument in DeP which is object?",
        "name": "shi-subj-dep-lex",
        "parents": [
            "shi-emph-lex",
            "basic-two-arg-no-hcons",
            "focus-icons-norm-lex-item"
        ]
    },
    {
        "docstring": "Special DE used in ShiDe structure for alternative location of object of a transitive verb.<br><br>Feature CH + means this COMP is before the head, CH - means it's after the head.<br><br><b>[ex]</b>他 是 昨天 完成 的 任务<br><br>Currently using OPT+ to stop this DeP from being treated as an actual modifier for noun. In rule head-adj-int-phrase, constraint [ OPT na-or-- ] is used to exclude this DeP.",
        "name": "de-4shi-lex",
        "parents": [
            "raise-sem-lex-item",
            "no-icons-lex-item",
            "norm-zero-arg"
        ]
    },
    {
        "docstring": "",
        "name": "subj-drop-verb-lex",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "no-subj-drop-verb-lex",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "obj-drop-verb-lex",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "no-obj-drop-verb-lex",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "determiner-lex",
        "parents": [
            "basic-determiner-lex",
            "basic-zero-arg"
        ]
    },
    {
        "docstring": "The SORT of determiner taking classifiers will be SORT of their classifiers.<br>This is important for pumping rules making time adjuncts from bare determiner phrases (e.g. 每天 or 每次).",
        "name": "determiner-cls-lex",
        "parents": [
            "determiner-lex"
        ]
    },
    {
        "docstring": "This is the supertype for interrogative and non-interrogative determiners that do not allow the use of classifiers.<br><br>This level exists because we currently want to say that non-interrogative determiners are [SORT nontime-s] -- which seems to hold true, and spares a lot of ambiguity. But interrogative determiners cannot have this restriction because of 什么, e.g. '什么 时候'.<br><br>By default, determiners check the SORT type of the classifiers they take when they are being pumped into a NP. When they do not take classifiers, the default assumption is that they CANNOT be pumped into a time adverbial.",
        "name": "super-determiner-nocls-lex",
        "parents": [
            "determiner-lex"
        ]
    },
    {
        "docstring": "By default, determiners check the SORT type of the classifiers they take when they are being pumped into a NP. When they do not take classifiers, the default assumption is that they CANNOT be pumped into a time adverbial.",
        "name": "determiner-nocls-lex",
        "parents": [
            "super-determiner-nocls-lex"
        ]
    },
    {
        "docstring": "",
        "name": "demons-determiner-lex",
        "parents": [
            "determiner-cls-lex"
        ]
    },
    {
        "docstring": "",
        "name": "prox_demons-determiner-lex",
        "parents": [
            "demons-determiner-lex"
        ]
    },
    {
        "docstring": "",
        "name": "dist_demons-determiner-lex",
        "parents": [
            "demons-determiner-lex"
        ]
    },
    {
        "docstring": "",
        "name": "demons-det-nocls-lex",
        "parents": [
            "super-determiner-nocls-lex"
        ]
    },
    {
        "docstring": "",
        "name": "prox_demons-det-nocls-lex",
        "parents": [
            "demons-det-nocls-lex"
        ]
    },
    {
        "docstring": "",
        "name": "dist_demons-det-nocls-lex",
        "parents": [
            "demons-det-nocls-lex"
        ]
    },
    {
        "docstring": "",
        "name": "wh-determiner-item",
        "parents": [
            "lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "wh-determiner-lex",
        "parents": [
            "determiner-cls-lex",
            "wh-determiner-item"
        ]
    },
    {
        "docstring": "This type is currently only for 什么 (and orthographic variants). And since 什么 also exists as a pronoun, we want to block the case where the determiner gets pumped to the equivalent of a pronoun. <br>The rule '0-nom-d' will then have to make sure [OPT +] is enforced before pumping rules. <br><br>We need these to be able to join with time nouns, '什么 时候'.",
        "name": "wh-determiner-nocls-lex",
        "parents": [
            "super-determiner-nocls-lex",
            "wh-determiner-item"
        ]
    },
    {
        "docstring": "this is used by 'comp-marker' to join aspect markers to verbs",
        "name": "aspect-markers",
        "parents": [
            "raise-sem-lex-item",
            "no-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "part-lex-item",
        "parents": [
            "raise-sem-lex-item",
            "basic-one-arg",
            "no-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "spart-lex-item",
        "parents": [
            "part-lex-item"
        ]
    },
    {
        "docstring": "<b>[ex]</b> 你 呢  ？",
        "name": "frag-qpart-lex-item",
        "parents": [
            "part-lex-item",
            "nonque-item"
        ]
    },
    {
        "docstring": "Subtype for question particles. Constrains SF to ques directly. MA.<br><br><b>[ex]</b> 你 是 学生 吗 ？<br><br>Added [SUBJ < >] and [SLASH 0-dlist] to force it being optional or filled before it attaches.",
        "name": "qpart-lex-item",
        "parents": [
            "spart-lex-item",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "a-not-a-adv-lex",
        "parents": [
            "raise-index-mod-lex-item",
            "single-rel-lex-item",
            "scopal-mod-lex",
            "one-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "a-not-a-basic-adv-lex",
        "parents": [
            "a-not-a-adv-lex"
        ]
    },
    {
        "docstring": "",
        "name": "a-not-a-contracted-adv-lex",
        "parents": [
            "a-not-a-adv-lex"
        ]
    },
    {
        "docstring": "",
        "name": "ab-not-ab-adv-lex",
        "parents": [
            "raise-index-mod-lex-item",
            "single-rel-lex-item",
            "scopal-mod-lex",
            "one-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "a-not-a-bu-basic-adv-lex",
        "parents": [
            "a-not-a-basic-adv-lex"
        ]
    },
    {
        "docstring": "",
        "name": "a-not-a-bu-contracted-adv-lex",
        "parents": [
            "a-not-a-contracted-adv-lex"
        ]
    },
    {
        "docstring": "",
        "name": "ab-not-ab-bu-adv-lex",
        "parents": [
            "ab-not-ab-adv-lex"
        ]
    },
    {
        "docstring": "LMC: This was not signed, I wished there was a bit more info.<br>This grammar includes head-modifier rules.  To keep<br>out extraneous parses, constrain the value of MOD on<br>various subtypes of head.  This may need to be loosened later.<br>This constraint says that only adverbs, adjectives,<br>and adpositions can be modifiers.",
        "name": "+nvcdmo",
        "parents": []
    },
    {
        "docstring": "",
        "name": "basic-adjective-lex",
        "parents": [
            "basic-one-arg",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "basic-attr-adj-lex",
        "parents": [
            "basic-int-mod-adj-lex"
        ]
    },
    {
        "docstring": "",
        "name": "attr-adj-lex",
        "parents": [
            "basic-attr-adj-lex"
        ]
    },
    {
        "docstring": "There was a constraint making bare-np or other SPR releasing rules<br>to apply BEFORE any posthead adjetives: <br>HEAD.MOD < [ LOCAL.CAT.VAL.SPR < > ]<br>However, in the realm where we treat 们 as such a modifier, then this<br>is not true anymore.<br>When this was discovered, only a_-_bound-posthead_le was using this <br>rule, so I don't think this will be a big problem.",
        "name": "attr-adj-posthd-lex",
        "parents": [
            "basic-attr-adj-lex"
        ]
    },
    {
        "docstring": "",
        "name": "basic-pred-adj-lex",
        "parents": [
            "basic-adjective-lex",
            "no-hcons-lex-item"
        ]
    },
    {
        "docstring": "This is the main type for predicative adjectives. In principle, these ought to be able to server as predicates without a degree specifier (e.g. 很) but this construction is marked as comparative/constrastive. E.g.<br>她 漂亮。  She is more beautiful.<br><br><br><br>ZZF FB LMC 2016-2-24 SPR OPT changed from - to bool to allow adj predicate without specifier (adv) 姑娘　漂亮 ;<br>2016-4-20 taking out linking of NON-LOCAL.SLASH with that of its SUBJ<br><br>2021.01.27 -- LMC and FCB put back the linking of NON-LOCAL.SLASH with its SUBJ. We need to do a regression test. This was to remove bad analysis with optional subjects in relative clauses of Adjectives.",
        "name": "pred-adj-lex",
        "parents": [
            "basic-pred-adj-lex"
        ]
    },
    {
        "docstring": "",
        "name": "pred-adj-nospr-lex",
        "parents": [
            "pred-adj-lex"
        ]
    },
    {
        "docstring": "",
        "name": "pred-adj-optspr-lex",
        "parents": [
            "pred-adj-lex"
        ]
    },
    {
        "docstring": "",
        "name": "pred-adj-spr-lex",
        "parents": [
            "pred-adj-optspr-lex"
        ]
    },
    {
        "docstring": "",
        "name": "s-comp-adj-lex",
        "parents": [
            "basic-pred-adj-lex"
        ]
    },
    {
        "docstring": "",
        "name": "adj-redup-lex",
        "parents": [
            "no-spr-no-spec-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "adj-aabb-lex",
        "parents": [
            "adj-redup-lex",
            "redup-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "adj-abb-lex",
        "parents": [
            "adj-redup-lex",
            "basic-pred-adj-lex"
        ]
    },
    {
        "docstring": "This means that rules that have jd will also allow CLs to apply.<br>If there is a rule that will apply to both adjectives and determiners then it is expected that it will be applied to this. <br>[FIXME] this is not ok, we should have a distinct head value for classifiers<br>e.g.     classifier := head<br>         classifier :+ <br>         [ HON luk,<br>           GENERIC luk,<br>           CLASSIFIED luk ].<br>and then try to find the other features currently breaking the grammar.",
        "name": "classifier",
        "parents": [
            "+jd"
        ]
    },
    {
        "docstring": "Classifiers currently have two ways of attaching to nouns:<br>1. by being taken as complements of determiners, creating a DP, and <br>   attaching to Nouns as SPR-HEAD rule; <br>2. By attaching directy to a noun through a MOD-HEAD rule, and then<br>   being pumped to a NP through the BARE-NP rule.<br><br>This is slightly unsatisfying, as it produces non parallel structures.<br>[[DT[(NUM)(CL)]]NP]   and   [ [(NUM)(CL)] NP]<br><br>Also, because of this, only the 2nd method passes the head-feature<br>[CLASSIFIED +] to the noun. Which is also not ok. [FIXME]<br><br><br><br><br>Scope of adjectival modification:<br><br>    一 大 箱 苹果 ≠ 一 箱 大 苹果   ('Measure' Words)<br>    # 一 大 颗 苹果 = 一 颗 大 苹果   ('Sortal' Classifier)  >>>>> Not sure if I accept this, Jenny doesn't accept modification on this CL<br>    一 大 个 苹果 = 一 个 大 苹果    = meaning is the same, 一 大 个 苹果 informal, <br>                                      so we should reject and accept as robust only.  <br>                                    >>> the first one seems to have emphasis on the adj<br><br><br>    (一) 大 箱 的 苹果  ≠ 大 苹果   ('Measure' Words)<br>    (一) 大 箱 的 小 苹果  is also possible <br><br><br>    (一) 大 个 的 苹果 = 大 苹果    ('Sortal' Classifier)      >>>>> Not sure if I accept this<br>   * (一) 大 个 的 苹果 ?>>>> with DE is not ok.<br>   (一) 大 个 苹果 ? >>>> and the meaning is confirmed to be the apples are Big<br><br><br>Chen and Sybesma (1998) and modification marker 的:<br>    Mass-noun classifiers (e.g. Units of measure, containers) can <br>    insert 的 between them and the noun. Sortal-CLs cannot do the same.<br> <br>     三 磅 的 肉    or    两 箱 的 书        but not:<br>    *八 头 的 牛    or   *九 根 的 尾巴<br>     三 年 的 辛苦   also OK<br><br><br><br>'Measure' Words Number requirement:<br><br><br>   *我们 需要  磅  肉  (the numeral is necessary)<br>   *我们 需要  磅 的 肉  (the numeral is necessary)<br>    我们 需要  买 磅  肉   >>>  this is ok, but it's a bit casual... same as CL<br><br>    我们 需要 dai(bring) 把 椅​子 (the numeral is NOT necessary, but casual)<br><br>    我 给 你 介绍 个 女朋友 (sortal, ok but casual, always 1)<br><br><br><br>Coordination<br><br>    # 两 杯 和 三 瓶 啤酒      a bit wierd.<br>    # 三 瓶 和 两 杯 啤酒      a bit wierd. （order matters, shoul dbe BIG to small)<br>    三 瓶 加 两 杯 啤酒     》》》 This is ok, must should be beer for both<br><br>    三 瓶 加 两 杯 啤酒    >>  must be the same <br><br><br>    两 杯 和 三 扎 (zha1, jug) 的 啤酒<br><br>    两 只狗 和 三条狗<br><br><br><br>yi ge ban xiaoshi  === 1 and 1/2 hours<br>* yi ban ge  xiaoshi  === 1/2 hours   -- don't use 1<br>ban ge  xiaoshi  === 1/2 hours<br><br>yi xiang ban pingguo = 1 and 1/2 box of apple<br>ban xiang pinggyup = 1/2 box of apple<br><br>yi 公斤 ban pingguo = 1.5 kg of apples<br>  ban 公斤  pingguo = 0.5 kg of apples<br>*yi  ban 公斤  pingguo = 0.5 kg of apples  --- don't use 1<br><br><br>yi zhi ban ji = 1.5 chicken <br> ban zhi  ji = 0.5 chicken <br><br>yi nian ban = 1.5 years<br>ban nian = half year<br><br><br><br>one and a half tree<br><br>yi fēn ban = 1.5 minutes <br>yi fēn ban zhong = 1.5 minutes <br>ban fen zhong = 0.5 minutes<br><br><br><br><br>Summary of structures:<br><br>Demostrative + Sortal-CL                              (那 张 是 我 的 桌子 。）<br>Demostrative + Numeral + Sortal-CL                    (那 两 张 是 我 的 桌子 。）<br>Demostrative + Numeral + Sortal-CL + Noun             (那 两 张 桌子 是 我 的 。）<br><br>(我 有 两 张 桌子 。)<br><br><br> <br><br><br>Cls identifies the KEYS.KEY with the classified noun, to allow nouns <br>to potentially select a range of classifiers (not implemented yet).<br>This clashes with the way selected complements are being selected <br>(through KEYS.KEY). If we want to keep both pieces of info we could <br>use KEYS.ALTKEY instead for classifiers.",
        "name": "basic-classifier-lex",
        "parents": [
            "norm-ltop-lex-item",
            "single-rel-lex-item",
            "intersective-mod-lex",
            "no-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "classifier-lex",
        "parents": [
            "basic-classifier-lex"
        ]
    },
    {
        "docstring": "[FIXME]<br>This is currently a test to create bare CL phrases that can be turn into time adverbs. <br>The goal would be to transform something like 三 点  (which is a short form for 三 点 钟) and allow it to be pumped into a time adverbial by virtue of [SORT time-s]",
        "name": "nontime-classifier-lex",
        "parents": [
            "classifier-lex"
        ]
    },
    {
        "docstring": "[FIXME]<br>This is currently a test to create bare CL phrases that can be turn into time adverbs. <br>The goal would be to transform something like 三 点  (which is a short form for 三 点 钟) and allow it to be pumped into a time adverbial by virtue of [SORT time-s]",
        "name": "time-classifier-lex",
        "parents": [
            "classifier-lex"
        ]
    },
    {
        "docstring": "",
        "name": "cat",
        "parents": []
    },
    {
        "docstring": "",
        "name": "classifier-quant-lex",
        "parents": [
            "basic-classifier-lex"
        ]
    },
    {
        "docstring": "This is the main type for basic Numerals.<br>They have [HEAD num]. And the special head-feature [CARDINAL +].<br><br>Their semantics is somewhat special, using CARG in a similar way as named relations.<br><br>We want: the ARG0 of the thing it will specify over (SPEC) to be the same as ARG1 on the relation it introduces.",
        "name": "num-adj-lex",
        "parents": [
            "single-rel-lex-item",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "This is a subtype for numbers that distinguishes between cardinal and noncardinal.<br><br>This is ultimately to support the distinction between 二 (noncard) and 两 (card). This is being used in the 'spr-head-cl' rule to require that only cardinal numbers be available to serve as specifiers for classifiers.",
        "name": "card-num-adj-lex",
        "parents": [
            "num-adj-lex"
        ]
    },
    {
        "docstring": "This is a subtype for numbers that distinguishes between cardinal and noncardinal.<br><br>This is ultimately to support the distinction between 二 (noncard) and 两 (card). This is being used in the 'spr-head-cl' rule to require that only cardinal numbers be available to serve as specifiers for classifiers.<br><br>As such, 二 would not be able to be the specifier of a classifier.",
        "name": "noncard-num-adj-lex",
        "parents": [
            "num-adj-lex"
        ]
    },
    {
        "docstring": "",
        "name": "subj-drop-only-verb-lex",
        "parents": [
            "subj-drop-verb-lex",
            "no-obj-drop-verb-lex",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "obj-drop-only-verb-lex",
        "parents": [
            "obj-drop-verb-lex",
            "no-subj-drop-verb-lex",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "subj-obj-drop-verb-lex",
        "parents": [
            "subj-drop-verb-lex",
            "obj-drop-verb-lex",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "no-drop-verb-lex",
        "parents": [
            "no-subj-drop-verb-lex",
            "no-obj-drop-verb-lex",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "DE takes a COMP and modifies a noun. Its position is after its COMP.<br>POSTCOMP is a feature to be used on head to indicate the COMP's position is after the head.<br>POSTHEAD - means as a modifier, it always appear before the head noun.<br><br>added MODIFIABLE + so we have more say about where this can apply.",
        "name": "de-super-lex",
        "parents": [
            "basic-one-arg"
        ]
    },
    {
        "docstring": "This a supertype of the Associative DE. It will be further defined for <br>NP-NP association and CLAUSE-NP association.<br><br>ZZF/FB 29-2-2016: associative phrase should precede specifiers in NP",
        "name": "de-assoc-lex",
        "parents": [
            "de-super-lex",
            "adposition-lex"
        ]
    },
    {
        "docstring": "Associative DE combining two noun phrases.",
        "name": "de-assoc-n-lex",
        "parents": [
            "de-assoc-lex"
        ]
    },
    {
        "docstring": "Associative DE with a clause, modifying a noun.",
        "name": "de-assoc-v-lex",
        "parents": [
            "de-assoc-lex"
        ]
    },
    {
        "docstring": "Complementizer DE, used in relative clauses. <br>The modified noun is the missing argument in the relative clause.<br><br>ZZF 2015-9-30: subj restriction of the v/adj to stop spurious parses <br>ZZF 2016-2-21: DE does not take subj<br><br>It does say that it's COMPS [NON-LOCAL.SLASH 1-dlist], which means that it must be something <br>on the slash. So it's not clear why it allows opt-subj-decl  in relative clauses. This is only happening to adjectives, which means SLASH is being left compatible with SLASHED things in adjectives.",
        "name": "de-comp-lex",
        "parents": [
            "de-super-lex",
            "raise-sem-lex-item",
            "no-icons-lex-item",
            "norm-zero-arg"
        ]
    },
    {
        "docstring": "",
        "name": "adposition-lex",
        "parents": [
            "basic-adposition-lex",
            "no-hcons-lex-item"
        ]
    },
    {
        "docstring": "[POSTCOMP -] is the definition of PRE-positions (I come before my COMPS).<br><br>But why does it look like it has 2 things in the ARG-ST?<br>It should only have 1 think (NOUN) in COMPs, right? What is the first NOUN then?",
        "name": "prep-lex",
        "parents": [
            "adposition-lex"
        ]
    },
    {
        "docstring": "no-mod ??? (No modification)<br><br>If MOD < >, then it means it can't act through MODIFICATION rules.<br>This takes a noun SUBJ + a noun COMP?<br>Are these supposed to be predicative prepositions of some sort?<br><br>There are 3 preps inheriting from here:<br>在 >>>>>>>>>> commented out <br>为 (for e.g. someone)<br>由 (by/through, e.g. a method)<br><br>她 为 房间<br>她 由 房间<br>(which I think are not good prepositional sentences) do parse<br> 为  has a verb on its own (to become).<br>Given that ZAI is now a verb (I didn't do it) and these two are probably bad,<br>it's likely we're not using this prepositional type at all.",
        "name": "prep-no-mod-lex",
        "parents": [
            "prep-lex"
        ]
    },
    {
        "docstring": "linking ARG1 to XARG as well, which can be used in other places to refer to INDEX of what it modifies.<br><br>This is the parent type of two other types: prep-n-mod-lex  AND  prep-v-mod-lex<br>No letypes inherit directly from this.<br><br>It basically says I am going to modify something that is of HEAD verb.<br>Must have fully satisfied COMPS.<br><br>It links the index of its MOD value with its own XARG and of its ARG1. (Is this how modification works ???)",
        "name": "prep-mod-lex",
        "parents": [
            "prep-lex"
        ]
    },
    {
        "docstring": "In letypes this says it's supposed to modify NPs... but:<br>[FIXME][FCB] Why does this specify that the HEAD of the SUBJ of what I modify is a NOUN? <br>It should probably be:<br>HEAD.MOD < [ LOCAL.CAT.HEAD noun ] >  ???<br>Lik this, this prep can only modify things that have SUBJ.<br><br>There are currently more than 170 prepositions that inherit from this type.",
        "name": "prep-n-mod-lex",
        "parents": [
            "prep-mod-lex"
        ]
    },
    {
        "docstring": "There are only 3 prepositions that inherit from this type: <br>lex-base.tdl:1124:和_p := p_-_v-mod_le &     <<<<<<< listed under conjunction!!!<br>lexicon.tdl:13788:关于_p_2 := p_-_v-mod_le &<br>lexicon.tdl:68785:犹如_p_1 := p_-_v-mod_le &",
        "name": "prep-v-mod-lex",
        "parents": [
            "prep-mod-lex"
        ]
    },
    {
        "docstring": "",
        "name": "basic-loc-lex",
        "parents": [
            "raise-sem-lex-item",
            "no-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "prep-vmod-lex",
        "parents": [
            "adposition-lex"
        ]
    },
    {
        "docstring": "",
        "name": "prep-vmod-pre-lex",
        "parents": [
            "prep-vmod-lex"
        ]
    },
    {
        "docstring": "POSTCOMP + says that it takes a complement to its left. The restrictions on the ARG-ST say that this complement must be fully specified, not lacking complements and be a noun.<br><br>[FIXME] I want to understand what is happening with MOD and ARG-ST (seems to have 2 things?).<br>I modify something intersectively, it's a saturated verb (VP). The index of VP is the same as the index of my ARG1 -- this is just to make semantics properly link.<br>And the think that is my COMP is the arg 2 this po",
        "name": "basic-postp-lex",
        "parents": [
            "adposition-lex"
        ]
    },
    {
        "docstring": "We want to preserve the auxiliary status of sentences like 他 会 (he is able to) /  他 可以 (he is allowed to)  /  他 应该 (he must to)  where it is assumed that some elided verb exists. This is preferable to having multiple lexical entries for the auxiliary when there is complement dropping. <br><br>This lexical rule allows this by pumping auxiliaries to no longer need complements (see DTR.SYNSEM.LOCAL.CAT.VAL.COMPS < [ ] >); and by fixing the ARGs and QEQ links between the auxiliary verb and an introduced ellipsis_v_rel.<br><br><b>[ex]</b> 他 会 。<br><b>[nex]*</b> 他 会 唱歌 。<br><b>[nex]*</b> 他 告诉 。<br><br><br>[FIXME] It would be nice to block this from going through 'vp1-top-coord' (and similar), this is generating a bit of ambiguity.",
        "name": "v_aux_ell-lex-rule",
        "parents": [
            "same-head-lex-rule",
            "constant-lex-rule",
            "same-subj-lex-rule",
            "same-spr-lex-rule",
            "same-spec-lex-rule",
            "same-non-local-lex-rule",
            "same-modified-lex-rule",
            "same-posthead-lex-rule",
            "same-light-lex-rule",
            "same-hc-light-lex-rule",
            "same-ctxt-lex-rule",
            "same-cont-lex-rule",
            "same-agr-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "_v_aspect-lex-rule",
        "parents": [
            "add-only-no-ccont-rule",
            "infl-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "_perf_aspect-lex-rule",
        "parents": [
            "_v_aspect-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "dur_aspect-lex-rule",
        "parents": [
            "_v_aspect-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "exp_aspect-lex-rule",
        "parents": [
            "_v_aspect-lex-rule"
        ]
    },
    {
        "docstring": "This rule applies to both adjectives and verbs. And, because of this, some VALENCE constraints (e.g., on the SPR) cannot be decided at this level. <br>We leave the VALENCE to be determined by head-specific rules that inherit from this.",
        "name": "redup-lex-rule",
        "parents": [
            "same-non-local-lex-rule",
            "same-modified-lex-rule",
            "same-light-lex-rule",
            "same-ctxt-lex-rule",
            "same-cont-lex-rule",
            "same-agr-lex-rule",
            "infl-lex-rule"
        ]
    },
    {
        "docstring": "For reduplicated verbs, we are currently transferring the same valency values. <br>For the time being, we don't know of any valence-changing constraints imposed by verbal reduplication.<br><b>[ex]</b> 你 看看 。<br><b>[ex]</b> 我 吃吃 。<br><b>[ex]</b> 你 看 看 。<br><b>[ex]</b> 我 吃 吃 。",
        "name": "redup-verb-lex-rule",
        "parents": [
            "redup-lex-rule"
        ]
    },
    {
        "docstring": "For reduplicated adjectives, we need to constrain the SPR of the reduplicated form. <br>In ZHONG, degree adverbs (e.g. 很, 非常, etc) attach to the adjective through specifier-head rules. However, in their reduplicated form, adjectives cannot take degree adverbs.<br>All adjectives expect exactly one such degree modifier (i.e. SPR < [ ] >), while all reduplicated forms now expect zero (i.e. SPR < >).<br><b>[ex]</b> 他 高高 。<br><b>[ex]</b> 他 高 高 。<br><b>[nex]*</b> 他 很 高高 。",
        "name": "redup-adj-lex-rule",
        "parents": [
            "redup-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "tentative-lex-rule",
        "parents": [
            "add-only-no-rels-hcons-rule",
            "no-ccont-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "tent-perf-lex-rule",
        "parents": [
            "tentative-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "tentative-lex-dtr",
        "parents": [
            "word-or-lexrule"
        ]
    },
    {
        "docstring": "",
        "name": "anota-lex-rule",
        "parents": [
            "same-modified-lex-rule",
            "same-light-lex-rule",
            "same-ctxt-lex-rule",
            "same-cont-lex-rule",
            "same-agr-lex-rule",
            "infl-lex-rule",
            "no-rels-hcons-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "never_unify_rel",
        "parents": [
            "predsort"
        ]
    },
    {
        "docstring": "Added SUBJ <[ ]> on the complement to block sentences such as: (他 很 高兴) 地 唱歌; Removed SPR < > from the complement because we want to accept both bare adjectives, such as 他 很 高兴 地 唱歌 and adjectives with degree modifiers 他 高兴 地 唱歌; SPR < > will enforce adjectives to be degree modified;",
        "name": "adv_affix_form_lex",
        "parents": [
            "raise-sem-lex-item",
            "basic-icons-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "adv_suffix_form_lex",
        "parents": [
            "adv_affix_form_lex"
        ]
    },
    {
        "docstring": "",
        "name": "adv_prefix_form_lex",
        "parents": [
            "adv_affix_form_lex"
        ]
    },
    {
        "docstring": "",
        "name": "aspect-lex-rule",
        "parents": [
            "const-cat-change-only-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "aspect-rule-dtr",
        "parents": [
            "word-or-lexrule"
        ]
    },
    {
        "docstring": "",
        "name": "basic-mod-adj-lex",
        "parents": [
            "basic-adjective-lex",
            "norm-ltop-lex-item"
        ]
    },
    {
        "docstring": "",
        "name": "attr-to-pred-adj-lex-rule",
        "parents": [
            "pred-adj-lex",
            "constant-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "attr-to-pred-adj-aspect-lex-rule",
        "parents": [
            "basic-pred-adj-lex",
            "constant-lex-rule"
        ]
    },
    {
        "docstring": "",
        "name": "vp-aux-ellipsis-lex-rule",
        "parents": [
            "aux-lex",
            "constant-lex-rule",
            "c-cont-1"
        ]
    },
    {
        "docstring": "",
        "name": "punctuation",
        "parents": [
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "punctuation-end",
        "parents": [
            "punctuation"
        ]
    },
    {
        "docstring": "There was an ambiguity problem with question-phrase, since the question mark was able to attach before or after question-phrase. <br>To block this, we created this type where we require that ques-mark's complement's  NON-LOCAL.QUE is 0-dlist (i.e. already went through question-phrase).",
        "name": "ques-mark",
        "parents": [
            "punctuation-end"
        ]
    },
    {
        "docstring": "",
        "name": "symbol",
        "parents": [
            "single-rel-lex-item",
            "basic-icons-lex-item",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "comma-or-colon",
        "parents": [
            "symbol"
        ]
    },
    {
        "docstring": "",
        "name": "paren",
        "parents": [
            "symbol"
        ]
    },
    {
        "docstring": "",
        "name": "lparen",
        "parents": [
            "paren"
        ]
    },
    {
        "docstring": "",
        "name": "rparen",
        "parents": [
            "paren"
        ]
    },
    {
        "docstring": "",
        "name": "bullet",
        "parents": [
            "symbol"
        ]
    },
    {
        "docstring": "",
        "name": "xp-xp-bridge-c",
        "parents": [
            "bridge-binary-phrase"
        ]
    },
    {
        "docstring": "",
        "name": "xp-bridge-c",
        "parents": [
            "bridge-unary-phrase"
        ]
    },
    {
        "docstring": "This is a copy of qpart-lex-item (sentence final particle), that changed <br>[NON-LOCAL.QUE to 1-dlist]. This change is requirering that exacly 1 question <br>word be included in the sentence before this particle can attach.  <br>The original [NON-LOCAL.QUE 0-dlist] meant that the sentence had zero question <br>words embedded anywhere in the sentence.<br><br>A-NOT-A also uses QUE, which means that setting QUE to non-empty should be enough.<br><br><br>e.g. 'your mom who went to the store to buy a book bought WHICH book?' <br>This is not really English, but shows what this non-locality allows). <br>Nevertheless, questions should always use this NON-LOCAL.QUE. If there is a <br>question word, then the value of this dlist should be the index of that <br>question word (which we can later use to try to point to which question word <br>was already used). So, if we don't constrain NON-LOCAL.QUE to a 0-dlist, <br>(meaning that it can have one or more question words) then ma will be able to <br>attach to that sentence. But it must be constrained to either a non-empty list <br>or to 1, otherwise we get good sentences (that are not really questions).<br><br>This will enable the use of mal-吗-le even after the sentence is already <br>a question.",
        "name": "mal-qpart-lex-item",
        "parents": [
            "spart-lex-item",
            "nonque-item"
        ]
    },
    {
        "docstring": "",
        "name": "mal_x_-_qpart_le",
        "parents": [
            "mal-qpart-lex-item"
        ]
    },
    {
        "docstring": "The COMP is marked as [OPT -] to stop spurious ambiguity.",
        "name": "mal_raising_adj_cop",
        "parents": [
            "no-rels-hcons-lex-item",
            "basic-two-arg-no-hcons",
            "basic-icons-lex-item",
            "aspect-rule-dtr",
            "verb-no-spr-item",
            "nonque-item"
        ]
    },
    {
        "docstring": "This is used for adjectival sentences to allow a copula.<br><b>[mex]*</b>我 是 漂亮 。<br><b>[nex]*</b>我 是 学生 。",
        "name": "mal_v_adj_cop_le",
        "parents": [
            "mal_raising_adj_cop"
        ]
    },
    {
        "docstring": "Mal type for 不 that allows 不+有.<br><b>[mex]*</b> 我 不 有 钱 。",
        "name": "mal_neg_不+有_le",
        "parents": [
            "neg-adv-lex",
            "nonque-item"
        ]
    },
    {
        "docstring": "This is a type designed for misuse of 也 -- allowing it to be placed before the suject (i.e. as sentencial adverb); This essentially should mark the wrong position of 也 within a clause.<br><br>FIXME: it competes with 也_r_1 in the correct position (for extracted subjects); it needs to be restricted further so this can't appear in the correct position (i.e. restrict to a VP WITH satisfied subject);<br>With scop-adv-s-lex (now required an empty SUBJ), this almost works, but it still misfires first extracting the subject and then filling it. I need to block the subject extraction. <br><br><br><b>[mex]*</b> 我 学 工程 ， 也 我 学 中文 。<br><b>[mex]*</b> 也 我 学 中文 。<br><b>[mex]*</b> 也 我 很 高 。<br><br><br><br>Added [VAL.SPEC < >] to block this from becoming a specifier to degree modifiers.",
        "name": "mal_presubj_也_le",
        "parents": [
            "scop-adv-s-prehd_le"
        ]
    },
    {
        "docstring": "This entry is specific to catch post-verbal 也. Currently only verbs seem to be a problem.<br>[COMPS 1-plus-list] on the MOD is to require it comes become the verbs take up their complements, but some verbs can have more than one complement.<br><b>[mex]*</b> 我 是 也 新加坡人 。",
        "name": "mal-也-postv-precomp-lex",
        "parents": [
            "basic-scopal-adverb-lex"
        ]
    },
    {
        "docstring": "This entry is specific to allow 几 to behave as an interrogative determiner without the use of classifiers. This is ungrammatical, since 几 should always require the use of classifiers.<br><b>[mex]*</b> 你 有 几 英国 同学 ？",
        "name": "mal-几-wh-det-nocls_le",
        "parents": [
            "wh-determiner-nocls-lex"
        ]
    },
    {
        "docstring": "This mal-rule is used to pump  NPs into subject-taking VPs. It introduces a  dummy 是_v_cop relation, which would be missing between the two NPs. This is used to catch the error in sentences like:<br><b>[mex]*</b> 她 学生 。<br><br>Admittedly, this rule causes some havoc around amgibuity, since most NPs were trying to be pumped into VPs. We're continuing to add some restrictions to curb ambiguity.<br><br>Added [ EMPTY + ] on parent node to signal this VP is not a normal headed phrase (i.e.  there no verb). This might be useful, for example to prevent verb-derivational rules from applied to this case (where there is no verb). e.g. reduplication of verb, V-Not-V.<br><br>Inheriting from verb-no-spr-item restricts the verb phrase being created form  taking degree modifiers.<br><br>Added [OPT -] to the created pumped VP's subject so it doesn't occur when there  is no NP to be taken as subject (this should reduce parse ambiguity considerably).<br><br>The NP argument is set to [PUNCTUATED na-or-- ] to force punctuation to attach higher.<br><br>Added [ SORT common-s ] to the original NP's CONT.HOOK.INDEX to block pronouns and proper nouns from being pumped into VPs. This allows us to catch common errors like:<br><b>[mex]*</b> 她 学生 。<br>But not:<br><b>[nex]*</b> 学生 她 。<br>But gaining control over ambiguity.<br><br>olist = optional or filled<br><br>The mother is set to [COORD na], blocking anything that comes from this pumping rule to be coordinated with anything else. We also need to add [COORD na] on the daughter to block the midway of a  coordination (e.g. ', 学生')  to be pumped into a VP. Complete/full coordinations should be COORD -, so they would be able to be pumped.<br><br>Added [EXISTV -] so this pumped VP is not treated as 有.<br><br><br><history><br>2022.07.31 (LMC): This rule used to inherit from 'verb-no-spr-item', which essentially adds [ SYNSEM.LOCAL.CAT.VAL.SPR <  > ]. However, this also imposes the fact that it is a \"lexical item\" which is tied to [COORD -]. I just added the empty specifier list and removed the inheritance so we can block coordination through [COORD na];<br></history>",
        "name": "super-np-as-vp-phrase",
        "parents": [
            "unary-phrase"
        ]
    },
    {
        "docstring": "This mal-rule is used to pump  NPs into subject-taking VPs. It introduces a  dummy 是_v_cop relation, which would be missing between the two NPs. This is used to catch the error in sentences like:<br><b>[mex]*</b> 她 学生 。<br><br>Admittedly, this rule causes some havoc around amgibuity, since most NPs were trying to be pumped into VPs. We're continuing to add some restrictions to curb ambiguity.<br><br>Its parent 'super-np-as-vp-phrase', which is currently shared with other similar predicates like numeral predicates, is doing much of the blocking.<br> <br><br>Added [ EMPTY + ] on parent node to signal this VP is not a normal headed phrase (i.e.  there no verb). This might be useful, for example to prevent verb-derivational rules from applied to this case (where there is no verb). e.g. reduplication of verb, V-Not-V.<br><br>Inheriting from verb-no-spr-item restricts the verb phrase being created form taking degree modifiers.<br><br>Added [OPT -] to the created pumped VP's subject so it doesn't occur when there is no NP to be taken as subject (this should reduce parse ambiguity considerably).<br><br>The NP argument is set to [PUNCTUATED na-or-- ] to force punctuation to attach higher.<br><br>Added [ SORT common-s ] to the original NP's CONT.HOOK.INDEX to block pronouns and proper nouns from being pumped into VPs. This allows us to catch common errors like:<br><b>[mex]*</b> 她 学生 。<br>But not:<br><b>[nex]*</b> 学生 她 。<br>But gaining control over ambiguity.<br><br>olist = optional or filled<br><br>We also need to add [COORD -] on the daughter to block the midway of a  coordination (e.g. ', 学生')  to be pumped into a VP. Complete/full coordinations should be COORD -, so they would be able to be pumped.<br><br>Added [EXISTV -] so this pumped VP is not treated as 有.",
        "name": "mal-np-as-vp-phrase",
        "parents": [
            "super-np-as-vp-phrase"
        ]
    },
    {
        "docstring": "[SPR < >] The SPR of a classifer is the numeral. This means we should probably also request it to be empty.",
        "name": "cl-np-pred-phrase",
        "parents": [
            "super-np-as-vp-phrase"
        ]
    }
]
